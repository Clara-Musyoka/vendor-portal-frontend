[{"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\index.js":"1","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\App.js":"3","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\redux\\store.js":"4","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\ShopRoutes.js":"5","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\routes\\Routes.js":"6","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\server.js":"7","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\routes\\ProtectedRoute.js":"8","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\routes\\AdminRoutes.js":"9","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\routes\\ProtectedAdminRoute.js":"10","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\routes\\SellerProtectedRoute.js":"11","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\routes\\ShopRoutes.js":"12","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\redux\\actions\\product.js":"13","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\redux\\actions\\user.js":"14","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\redux\\actions\\event.js":"15","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\redux\\reducers\\product.js":"16","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\redux\\reducers\\user.js":"17","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\redux\\reducers\\seller.js":"18","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\redux\\reducers\\cart.js":"19","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\redux\\reducers\\event.js":"20","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\redux\\reducers\\order.js":"21","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\redux\\reducers\\wishlist.js":"22","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\UserInbox.jsx":"23","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\Login.jsx":"24","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\ActivationPage.jsx":"25","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\SignupPage.jsx":"26","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\HomePage.jsx":"27","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\Shop\\ShopHomePage.jsx":"28","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\BestSellingPage.jsx":"29","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\ProductsPage.jsx":"30","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\EventsPage.jsx":"31","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\FAQPage.jsx":"32","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\OrderSuccessPage.jsx":"33","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\CheckoutPage.jsx":"34","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\ProductDetailsPage.jsx":"35","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\PaymentPage.jsx":"36","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\ProfilePage.jsx":"37","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\ShopCreate.jsx":"38","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\SellerActivationPage.jsx":"39","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\ShopLoginPage.jsx":"40","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\OrderDetailsPage.jsx":"41","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\TrackOrderPage.jsx":"42","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\AdminDashboardUsers.jsx":"43","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\AdminDashboardPage.jsx":"44","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\AdminDashboardSellers.jsx":"45","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\AdminDashboardWithdraw.jsx":"46","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\AdminDashboardProducts.jsx":"47","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\AdminDashboardEvents.jsx":"48","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\AdminDashboardOrders.jsx":"49","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\Shop\\ShopDashboardPage.jsx":"50","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\Shop\\ShopCreateEvents.jsx":"51","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\Shop\\ShopCreateProduct.jsx":"52","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\Shop\\ShopAllProducts.jsx":"53","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\Shop\\ShopAllEvents.jsx":"54","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\Shop\\ShopAllCoupouns.jsx":"55","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\Shop\\ShopOrderDetails.jsx":"56","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\Shop\\ShopPreviewPage.jsx":"57","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\Shop\\ShopAllOrders.jsx":"58","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\Shop\\ShopAllRefunds.jsx":"59","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\Shop\\ShopSettingsPage.jsx":"60","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\Shop\\ShopWithDrawMoneyPage.jsx":"61","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\Shop\\ShopInboxPage.jsx":"62","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Layout\\Loader.jsx":"63","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\styles\\styles.js":"64","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Login\\Login.jsx":"65","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Layout\\Footer.jsx":"66","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Layout\\Header.jsx":"67","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Signup\\Signup.jsx":"68","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Route\\Sponsored.jsx":"69","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Events\\Events.jsx":"70","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Events\\EventCard.jsx":"71","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\ShopInfo.jsx":"72","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Route\\Hero\\Hero.jsx":"73","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Route\\Categories\\Categories.jsx":"74","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Route\\BestDeals\\BestDeals.jsx":"75","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Route\\FeaturedProduct\\FeaturedProduct.jsx":"76","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Route\\ProductCard\\ProductCard.jsx":"77","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Checkout\\CheckoutSteps.jsx":"78","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\ShopProfileData.jsx":"79","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\redux\\actions\\order.js":"80","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\ShopCreate.jsx":"81","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Checkout\\Checkout.jsx":"82","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\UserOrderDetails.jsx":"83","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Products\\ProductDetails.jsx":"84","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Products\\SuggestedProduct.jsx":"85","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Layout\\AdminHeader.jsx":"86","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\ShopLogin.jsx":"87","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Profile\\ProfileSidebar.jsx":"88","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Profile\\TrackOrder.jsx":"89","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Profile\\ProfileContent.jsx":"90","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Payment\\Payment.jsx":"91","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Admin\\AllUsers.jsx":"92","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Admin\\AllEvents.jsx":"93","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Admin\\AdminDashboardMain.jsx":"94","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\DashboardHero.jsx":"95","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Admin\\AllProducts.jsx":"96","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Admin\\AllSellers.jsx":"97","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Admin\\AllWithdraw.jsx":"98","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\CreateEvent.jsx":"99","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Admin\\Layout\\AdminSideBar.jsx":"100","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\CreateProduct.jsx":"101","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\AllProducts.jsx":"102","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\AllEvents.jsx":"103","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\Layout\\DashboardHeader.jsx":"104","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\AllCoupons.jsx":"105","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\OrderDetails.jsx":"106","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\AllOrders.jsx":"107","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\Layout\\DashboardSideBar.jsx":"108","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\DashboardMessages.jsx":"109","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\AllRefundOrders.jsx":"110","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\ShopSettings.jsx":"111","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\WithdrawMoney.jsx":"112","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\static\\data.js":"113","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Layout\\DropDown.jsx":"114","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\redux\\actions\\cart.js":"115","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Layout\\Navbar.jsx":"116","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\redux\\actions\\wishlist.js":"117","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Events\\CountDown.jsx":"118","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\cart\\Cart.jsx":"119","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Products\\Ratings.jsx":"120","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\redux\\actions\\sellers.js":"121","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Wishlist\\Wishlist.jsx":"122","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Route\\ProductDetailsCard\\ProductDetailsCard.jsx":"123"},{"size":354,"mtime":1689967222763,"results":"124","hashOfConfig":"125"},{"size":375,"mtime":1689967222786,"results":"126","hashOfConfig":"125"},{"size":9103,"mtime":1689967222730,"results":"127","hashOfConfig":"125"},{"size":688,"mtime":1689967222786,"results":"128","hashOfConfig":"125"},{"size":92,"mtime":1689967222732,"results":"129","hashOfConfig":"125"},{"size":1373,"mtime":1689967222788,"results":"130","hashOfConfig":"125"},{"size":80,"mtime":1689969520838,"results":"131","hashOfConfig":"125"},{"size":389,"mtime":1689967222788,"results":"132","hashOfConfig":"125"},{"size":665,"mtime":1689967222787,"results":"133","hashOfConfig":"125"},{"size":488,"mtime":1689967222787,"results":"134","hashOfConfig":"125"},{"size":486,"mtime":1689967222788,"results":"135","hashOfConfig":"125"},{"size":1122,"mtime":1689967222789,"results":"136","hashOfConfig":"125"},{"size":2413,"mtime":1689967222781,"results":"137","hashOfConfig":"125"},{"size":3777,"mtime":1689967222781,"results":"138","hashOfConfig":"125"},{"size":1974,"mtime":1689967222780,"results":"139","hashOfConfig":"125"},{"size":1632,"mtime":1689967222784,"results":"140","hashOfConfig":"125"},{"size":2178,"mtime":1689967222785,"results":"141","hashOfConfig":"125"},{"size":921,"mtime":1689967222785,"results":"142","hashOfConfig":"125"},{"size":800,"mtime":1689967222783,"results":"143","hashOfConfig":"125"},{"size":1593,"mtime":1689967222784,"results":"144","hashOfConfig":"125"},{"size":1295,"mtime":1689967222784,"results":"145","hashOfConfig":"125"},{"size":871,"mtime":1689967222785,"results":"146","hashOfConfig":"125"},{"size":12481,"mtime":1689967222779,"results":"147","hashOfConfig":"125"},{"size":508,"mtime":1689967222769,"results":"148","hashOfConfig":"125"},{"size":1113,"mtime":1689967222764,"results":"149","hashOfConfig":"125"},{"size":505,"mtime":1689967222778,"results":"150","hashOfConfig":"125"},{"size":797,"mtime":1689967222769,"results":"151","hashOfConfig":"125"},{"size":723,"mtime":1689967222776,"results":"152","hashOfConfig":"125"},{"size":1338,"mtime":1689967222767,"results":"153","hashOfConfig":"125"},{"size":1682,"mtime":1689967222772,"results":"154","hashOfConfig":"125"},{"size":612,"mtime":1689967222768,"results":"155","hashOfConfig":"125"},{"size":10738,"mtime":1689967222768,"results":"156","hashOfConfig":"125"},{"size":888,"mtime":1689967222770,"results":"157","hashOfConfig":"125"},{"size":520,"mtime":1689967222768,"results":"158","hashOfConfig":"125"},{"size":1348,"mtime":1689967222770,"results":"159","hashOfConfig":"125"},{"size":549,"mtime":1689967222770,"results":"160","hashOfConfig":"125"},{"size":1000,"mtime":1689967222772,"results":"161","hashOfConfig":"125"},{"size":536,"mtime":1689967222778,"results":"162","hashOfConfig":"125"},{"size":1125,"mtime":1689967222772,"results":"163","hashOfConfig":"125"},{"size":543,"mtime":1689967222778,"results":"164","hashOfConfig":"125"},{"size":373,"mtime":1689967222769,"results":"165","hashOfConfig":"125"},{"size":359,"mtime":1689967222779,"results":"166","hashOfConfig":"125"},{"size":601,"mtime":1689967222767,"results":"167","hashOfConfig":"125"},{"size":657,"mtime":1689967222765,"results":"168","hashOfConfig":"125"},{"size":611,"mtime":1689967222766,"results":"169","hashOfConfig":"125"},{"size":617,"mtime":1689967222767,"results":"170","hashOfConfig":"125"},{"size":616,"mtime":1689967222766,"results":"171","hashOfConfig":"125"},{"size":606,"mtime":1689967222764,"results":"172","hashOfConfig":"125"},{"size":2453,"mtime":1689967222765,"results":"173","hashOfConfig":"125"},{"size":649,"mtime":1689967222775,"results":"174","hashOfConfig":"125"},{"size":646,"mtime":1689967222775,"results":"175","hashOfConfig":"125"},{"size":712,"mtime":1689967222775,"results":"176","hashOfConfig":"125"},{"size":689,"mtime":1689967222774,"results":"177","hashOfConfig":"125"},{"size":679,"mtime":1689967222773,"results":"178","hashOfConfig":"125"},{"size":686,"mtime":1689967222773,"results":"179","hashOfConfig":"125"},{"size":411,"mtime":1689967222776,"results":"180","hashOfConfig":"125"},{"size":791,"mtime":1689967222777,"results":"181","hashOfConfig":"125"},{"size":722,"mtime":1689967222774,"results":"182","hashOfConfig":"125"},{"size":659,"mtime":1689967222774,"results":"183","hashOfConfig":"125"},{"size":663,"mtime":1689967222777,"results":"184","hashOfConfig":"125"},{"size":599,"mtime":1689967222777,"results":"185","hashOfConfig":"125"},{"size":594,"mtime":1689967222776,"results":"186","hashOfConfig":"125"},{"size":562,"mtime":1689967222741,"results":"187","hashOfConfig":"125"},{"size":1045,"mtime":1690306835667,"results":"188","hashOfConfig":"125"},{"size":5213,"mtime":1690306406185,"results":"189","hashOfConfig":"125"},{"size":5655,"mtime":1690304747790,"results":"190","hashOfConfig":"125"},{"size":12894,"mtime":1690305322347,"results":"191","hashOfConfig":"125"},{"size":6706,"mtime":1690306521484,"results":"192","hashOfConfig":"125"},{"size":2068,"mtime":1690300813157,"results":"193","hashOfConfig":"125"},{"size":862,"mtime":1689967222739,"results":"194","hashOfConfig":"125"},{"size":2311,"mtime":1689967222739,"results":"195","hashOfConfig":"125"},{"size":3426,"mtime":1689967222758,"results":"196","hashOfConfig":"125"},{"size":1255,"mtime":1690301487102,"results":"197","hashOfConfig":"125"},{"size":2013,"mtime":1689967222748,"results":"198","hashOfConfig":"125"},{"size":1228,"mtime":1689967222747,"results":"199","hashOfConfig":"125"},{"size":941,"mtime":1689967222749,"results":"200","hashOfConfig":"125"},{"size":4753,"mtime":1689967222750,"results":"201","hashOfConfig":"125"},{"size":1862,"mtime":1689967222738,"results":"202","hashOfConfig":"125"},{"size":4681,"mtime":1689967222759,"results":"203","hashOfConfig":"125"},{"size":1603,"mtime":1689967222780,"results":"204","hashOfConfig":"125"},{"size":9196,"mtime":1690307163319,"results":"205","hashOfConfig":"125"},{"size":11148,"mtime":1689967222738,"results":"206","hashOfConfig":"125"},{"size":8267,"mtime":1689967222761,"results":"207","hashOfConfig":"125"},{"size":13678,"mtime":1689967222744,"results":"208","hashOfConfig":"125"},{"size":1239,"mtime":1689967222745,"results":"209","hashOfConfig":"125"},{"size":2222,"mtime":1689967222740,"results":"210","hashOfConfig":"125"},{"size":5242,"mtime":1690307014061,"results":"211","hashOfConfig":"125"},{"size":5027,"mtime":1689967222746,"results":"212","hashOfConfig":"125"},{"size":1955,"mtime":1689967222746,"results":"213","hashOfConfig":"125"},{"size":23083,"mtime":1689967222745,"results":"214","hashOfConfig":"125"},{"size":14404,"mtime":1689967222743,"results":"215","hashOfConfig":"125"},{"size":4020,"mtime":1689967222735,"results":"216","hashOfConfig":"125"},{"size":2075,"mtime":1689967222734,"results":"217","hashOfConfig":"125"},{"size":5009,"mtime":1689967222734,"results":"218","hashOfConfig":"125"},{"size":5143,"mtime":1689967222755,"results":"219","hashOfConfig":"125"},{"size":2390,"mtime":1689967222735,"results":"220","hashOfConfig":"125"},{"size":4522,"mtime":1689967222735,"results":"221","hashOfConfig":"125"},{"size":4279,"mtime":1689967222736,"results":"222","hashOfConfig":"125"},{"size":10121,"mtime":1689967222754,"results":"223","hashOfConfig":"125"},{"size":4845,"mtime":1689967222736,"results":"224","hashOfConfig":"125"},{"size":8201,"mtime":1689967222755,"results":"225","hashOfConfig":"125"},{"size":2895,"mtime":1689967222754,"results":"226","hashOfConfig":"125"},{"size":3071,"mtime":1689967222753,"results":"227","hashOfConfig":"125"},{"size":2313,"mtime":1689967222756,"results":"228","hashOfConfig":"125"},{"size":8887,"mtime":1689967222752,"results":"229","hashOfConfig":"125"},{"size":6513,"mtime":1689967222758,"results":"230","hashOfConfig":"125"},{"size":2368,"mtime":1689967222753,"results":"231","hashOfConfig":"125"},{"size":6443,"mtime":1689967222756,"results":"232","hashOfConfig":"125"},{"size":12682,"mtime":1689967222755,"results":"233","hashOfConfig":"125"},{"size":2525,"mtime":1689967222754,"results":"234","hashOfConfig":"125"},{"size":6481,"mtime":1689967222759,"results":"235","hashOfConfig":"125"},{"size":12059,"mtime":1689967222760,"results":"236","hashOfConfig":"125"},{"size":24348,"mtime":1689967222791,"results":"237","hashOfConfig":"125"},{"size":1136,"mtime":1689967222740,"results":"238","hashOfConfig":"125"},{"size":513,"mtime":1689967222780,"results":"239","hashOfConfig":"125"},{"size":745,"mtime":1689967222742,"results":"240","hashOfConfig":"125"},{"size":599,"mtime":1689967222783,"results":"241","hashOfConfig":"125"},{"size":1646,"mtime":1689967222739,"results":"242","hashOfConfig":"125"},{"size":5306,"mtime":1689967222763,"results":"243","hashOfConfig":"125"},{"size":949,"mtime":1689967222744,"results":"244","hashOfConfig":"125"},{"size":578,"mtime":1689967222781,"results":"245","hashOfConfig":"125"},{"size":3646,"mtime":1689967222762,"results":"246","hashOfConfig":"125"},{"size":6654,"mtime":1689967222751,"results":"247","hashOfConfig":"125"},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},"18sntml",{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"255","messages":"256","suppressedMessages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"294","messages":"295","suppressedMessages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"297","messages":"298","suppressedMessages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"300","messages":"301","suppressedMessages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"303","messages":"304","suppressedMessages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"306","messages":"307","suppressedMessages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"309","messages":"310","suppressedMessages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"312","messages":"313","suppressedMessages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"315","messages":"316","suppressedMessages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"251"},{"filePath":"319","messages":"320","suppressedMessages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"251"},{"filePath":"323","messages":"324","suppressedMessages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"251"},{"filePath":"327","messages":"328","suppressedMessages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"251"},{"filePath":"331","messages":"332","suppressedMessages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"334","messages":"335","suppressedMessages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"337","messages":"338","suppressedMessages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"251"},{"filePath":"341","messages":"342","suppressedMessages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"251"},{"filePath":"345","messages":"346","suppressedMessages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"348","messages":"349","suppressedMessages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"351","messages":"352","suppressedMessages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"354","messages":"355","suppressedMessages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"357","messages":"358","suppressedMessages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"251"},{"filePath":"361","messages":"362","suppressedMessages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"364","messages":"365","suppressedMessages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"367","messages":"368","suppressedMessages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"251"},{"filePath":"371","messages":"372","suppressedMessages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"251"},{"filePath":"375","messages":"376","suppressedMessages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"251"},{"filePath":"379","messages":"380","suppressedMessages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"382","messages":"383","suppressedMessages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"385","messages":"386","suppressedMessages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"388","messages":"389","suppressedMessages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"391","messages":"392","suppressedMessages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"394","messages":"395","suppressedMessages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"397","messages":"398","suppressedMessages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"400","messages":"401","suppressedMessages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"403","messages":"404","suppressedMessages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"251"},{"filePath":"407","messages":"408","suppressedMessages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"410","messages":"411","suppressedMessages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"413","messages":"414","suppressedMessages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"416","messages":"417","suppressedMessages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"419","messages":"420","suppressedMessages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"422","messages":"423","suppressedMessages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"425","messages":"426","suppressedMessages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"428","messages":"429","suppressedMessages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"431","messages":"432","suppressedMessages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"434","messages":"435","suppressedMessages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"437","messages":"438","suppressedMessages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"251"},{"filePath":"441","messages":"442","suppressedMessages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"444","messages":"445","suppressedMessages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"447","messages":"448","suppressedMessages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"450","messages":"451","suppressedMessages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"453","messages":"454","suppressedMessages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"456","messages":"457","suppressedMessages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"459","messages":"460","suppressedMessages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"251"},{"filePath":"463","messages":"464","suppressedMessages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"466","messages":"467","suppressedMessages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"469","messages":"470","suppressedMessages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"251"},{"filePath":"473","messages":"474","suppressedMessages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"476","messages":"477","suppressedMessages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"251"},{"filePath":"480","messages":"481","suppressedMessages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"483","messages":"484","suppressedMessages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"486","messages":"487","suppressedMessages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"489","messages":"490","suppressedMessages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"251"},{"filePath":"493","messages":"494","suppressedMessages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"251"},{"filePath":"497","messages":"498","suppressedMessages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"500","messages":"501","suppressedMessages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"251"},{"filePath":"504","messages":"505","suppressedMessages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"507","messages":"508","suppressedMessages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"510","messages":"511","suppressedMessages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"513","messages":"514","suppressedMessages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"516","messages":"517","suppressedMessages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"251"},{"filePath":"520","messages":"521","suppressedMessages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523","usedDeprecatedRules":"251"},{"filePath":"524","messages":"525","suppressedMessages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"527","messages":"528","suppressedMessages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530"},{"filePath":"531","messages":"532","suppressedMessages":"533","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534","usedDeprecatedRules":"251"},{"filePath":"535","messages":"536","suppressedMessages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"251"},{"filePath":"539","messages":"540","suppressedMessages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"251"},{"filePath":"543","messages":"544","suppressedMessages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"546","messages":"547","suppressedMessages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"251"},{"filePath":"550","messages":"551","suppressedMessages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"553","messages":"554","suppressedMessages":"555","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"556","usedDeprecatedRules":"251"},{"filePath":"557","messages":"558","suppressedMessages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"251"},{"filePath":"561","messages":"562","suppressedMessages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"564","usedDeprecatedRules":"251"},{"filePath":"565","messages":"566","suppressedMessages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"568","messages":"569","suppressedMessages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"571","usedDeprecatedRules":"251"},{"filePath":"572","messages":"573","suppressedMessages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575","usedDeprecatedRules":"251"},{"filePath":"576","messages":"577","suppressedMessages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"579","usedDeprecatedRules":"251"},{"filePath":"580","messages":"581","suppressedMessages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"251"},{"filePath":"584","messages":"585","suppressedMessages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"587","usedDeprecatedRules":"251"},{"filePath":"588","messages":"589","suppressedMessages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"591","usedDeprecatedRules":"251"},{"filePath":"592","messages":"593","suppressedMessages":"594","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"595","messages":"596","suppressedMessages":"597","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"598","usedDeprecatedRules":"251"},{"filePath":"599","messages":"600","suppressedMessages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"602","usedDeprecatedRules":"251"},{"filePath":"603","messages":"604","suppressedMessages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"606","usedDeprecatedRules":"251"},{"filePath":"607","messages":"608","suppressedMessages":"609","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"610","messages":"611","suppressedMessages":"612","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"613","usedDeprecatedRules":"251"},{"filePath":"614","messages":"615","suppressedMessages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"617","usedDeprecatedRules":"251"},{"filePath":"618","messages":"619","suppressedMessages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"621","usedDeprecatedRules":"251"},{"filePath":"622","messages":"623","suppressedMessages":"624","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"625","usedDeprecatedRules":"251"},{"filePath":"626","messages":"627","suppressedMessages":"628","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"629","usedDeprecatedRules":"251"},{"filePath":"630","messages":"631","suppressedMessages":"632","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"633","messages":"634","suppressedMessages":"635","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"636","messages":"637","suppressedMessages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"639","messages":"640","suppressedMessages":"641","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"642","messages":"643","suppressedMessages":"644","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"645","messages":"646","suppressedMessages":"647","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"648","messages":"649","suppressedMessages":"650","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"651","messages":"652","suppressedMessages":"653","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"654","messages":"655","suppressedMessages":"656","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"657","usedDeprecatedRules":"251"},{"filePath":"658","messages":"659","suppressedMessages":"660","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"661","usedDeprecatedRules":"251"},"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\index.js",[],[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\App.js",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\redux\\store.js",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\ShopRoutes.js",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\routes\\Routes.js",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\server.js",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\routes\\ProtectedRoute.js",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\routes\\AdminRoutes.js",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\routes\\ProtectedAdminRoute.js",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\routes\\SellerProtectedRoute.js",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\routes\\ShopRoutes.js",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\redux\\actions\\product.js",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\redux\\actions\\user.js",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\redux\\actions\\event.js",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\redux\\reducers\\product.js",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\redux\\reducers\\user.js",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\redux\\reducers\\seller.js",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\redux\\reducers\\cart.js",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\redux\\reducers\\event.js",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\redux\\reducers\\order.js",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\redux\\reducers\\wishlist.js",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\UserInbox.jsx",["662","663","664","665"],[],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport Header from \"../components/Layout/Header\";\r\nimport { useSelector } from \"react-redux\";\r\nimport socketIO from \"socket.io-client\";\r\nimport { format } from \"timeago.js\";\r\nimport { server } from \"../server\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AiOutlineArrowRight, AiOutlineSend } from \"react-icons/ai\";\r\nimport { TfiGallery } from \"react-icons/tfi\";\r\nimport styles from \"../styles/styles\";\r\nconst ENDPOINT = \"https://socket-ecommerce-tu68.onrender.com/\";\r\nconst socketId = socketIO(ENDPOINT, { transports: [\"websocket\"] });\r\n\r\nconst UserInbox = () => {\r\n  const { user,loading } = useSelector((state) => state.user);\r\n  const [conversations, setConversations] = useState([]);\r\n  const [arrivalMessage, setArrivalMessage] = useState(null);\r\n  const [currentChat, setCurrentChat] = useState();\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [userData, setUserData] = useState(null);\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n  const [images, setImages] = useState();\r\n  const [activeStatus, setActiveStatus] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const scrollRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    socketId.on(\"getMessage\", (data) => {\r\n      setArrivalMessage({\r\n        sender: data.senderId,\r\n        text: data.text,\r\n        createdAt: Date.now(),\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    arrivalMessage &&\r\n      currentChat?.members.includes(arrivalMessage.sender) &&\r\n      setMessages((prev) => [...prev, arrivalMessage]);\r\n  }, [arrivalMessage, currentChat]);\r\n\r\n  useEffect(() => {\r\n    const getConversation = async () => {\r\n      try {\r\n        const resonse = await axios.get(\r\n          `${server}/conversation/get-all-conversation-user/${user?._id}`,\r\n          {\r\n            withCredentials: true,\r\n          }\r\n        );\r\n\r\n        setConversations(resonse.data.conversations);\r\n      } catch (error) {\r\n        // console.log(error);\r\n      }\r\n    };\r\n    getConversation();\r\n  }, [user, messages]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      const sellerId = user?._id;\r\n      socketId.emit(\"addUser\", sellerId);\r\n      socketId.on(\"getUsers\", (data) => {\r\n        setOnlineUsers(data);\r\n      });\r\n    }\r\n  }, [user]);\r\n\r\n  const onlineCheck = (chat) => {\r\n    const chatMembers = chat.members.find((member) => member !== user?._id);\r\n    const online = onlineUsers.find((user) => user.userId === chatMembers);\r\n\r\n    return online ? true : false;\r\n  };\r\n\r\n  // get messages\r\n  useEffect(() => {\r\n    const getMessage = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${server}/message/get-all-messages/${currentChat?._id}`\r\n        );\r\n        setMessages(response.data.messages);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    getMessage();\r\n  }, [currentChat]);\r\n\r\n  // create new message\r\n  const sendMessageHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const message = {\r\n      sender: user._id,\r\n      text: newMessage,\r\n      conversationId: currentChat._id,\r\n    };\r\n    const receiverId = currentChat.members.find(\r\n      (member) => member !== user?._id\r\n    );\r\n\r\n    socketId.emit(\"sendMessage\", {\r\n      senderId: user?._id,\r\n      receiverId,\r\n      text: newMessage,\r\n    });\r\n\r\n    try {\r\n      if (newMessage !== \"\") {\r\n        await axios\r\n          .post(`${server}/message/create-new-message`, message)\r\n          .then((res) => {\r\n            setMessages([...messages, res.data.message]);\r\n            updateLastMessage();\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const updateLastMessage = async () => {\r\n    socketId.emit(\"updateLastMessage\", {\r\n      lastMessage: newMessage,\r\n      lastMessageId: user._id,\r\n    });\r\n\r\n    await axios\r\n      .put(`${server}/conversation/update-last-message/${currentChat._id}`, {\r\n        lastMessage: newMessage,\r\n        lastMessageId: user._id,\r\n      })\r\n      .then((res) => {\r\n        setNewMessage(\"\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleImageUpload = async (e) => {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        setImages(reader.result);\r\n        imageSendingHandler(reader.result);\r\n      }\r\n    };\r\n\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n\r\n  const imageSendingHandler = async (e) => {\r\n\r\n    const receiverId = currentChat.members.find(\r\n      (member) => member !== user._id\r\n    );\r\n\r\n    socketId.emit(\"sendMessage\", {\r\n      senderId: user._id,\r\n      receiverId,\r\n      images: e,\r\n    });\r\n\r\n    try {\r\n      await axios\r\n        .post(\r\n          `${server}/message/create-new-message`,\r\n          {\r\n            images: e,\r\n            sender: user._id,\r\n            text: newMessage,\r\n            conversationId: currentChat._id,\r\n          }\r\n        )\r\n        .then((res) => {\r\n          setImages();\r\n          setMessages([...messages, res.data.message]);\r\n          updateLastMessageForImage();\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const updateLastMessageForImage = async () => {\r\n    await axios.put(\r\n      `${server}/conversation/update-last-message/${currentChat._id}`,\r\n      {\r\n        lastMessage: \"Photo\",\r\n        lastMessageId: user._id,\r\n      }\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ beahaviour: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      {!open && (\r\n        <>\r\n          <Header />\r\n          <h1 className=\"text-center text-[30px] py-3 font-Poppins\">\r\n            All Messages\r\n          </h1>\r\n          {/* All messages list */}\r\n          {conversations &&\r\n            conversations.map((item, index) => (\r\n              <MessageList\r\n                data={item}\r\n                key={index}\r\n                index={index}\r\n                setOpen={setOpen}\r\n                setCurrentChat={setCurrentChat}\r\n                me={user?._id}\r\n                setUserData={setUserData}\r\n                userData={userData}\r\n                online={onlineCheck(item)}\r\n                setActiveStatus={setActiveStatus}\r\n                loading={loading}\r\n              />\r\n            ))}\r\n        </>\r\n      )}\r\n\r\n      {open && (\r\n        <SellerInbox\r\n          setOpen={setOpen}\r\n          newMessage={newMessage}\r\n          setNewMessage={setNewMessage}\r\n          sendMessageHandler={sendMessageHandler}\r\n          messages={messages}\r\n          sellerId={user._id}\r\n          userData={userData}\r\n          activeStatus={activeStatus}\r\n          scrollRef={scrollRef}\r\n          handleImageUpload={handleImageUpload}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MessageList = ({\r\n  data,\r\n  index,\r\n  setOpen,\r\n  setCurrentChat,\r\n  me,\r\n  setUserData,\r\n  userData,\r\n  online,\r\n  setActiveStatus,\r\n  loading\r\n}) => {\r\n  const [active, setActive] = useState(0);\r\n  const [user, setUser] = useState([]);\r\n  const navigate = useNavigate();\r\n  const handleClick = (id) => {\r\n    navigate(`/inbox?${id}`);\r\n    setOpen(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setActiveStatus(online);\r\n    const userId = data.members.find((user) => user !== me);\r\n    const getUser = async () => {\r\n      try {\r\n        const res = await axios.get(`${server}/shop/get-shop-info/${userId}`);\r\n        setUser(res.data.shop);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    getUser();\r\n  }, [me, data]);\r\n\r\n  return (\r\n    <div\r\n      className={`w-full flex p-3 px-3 ${\r\n        active === index ? \"bg-[#00000010]\" : \"bg-transparent\"\r\n      }  cursor-pointer`}\r\n      onClick={(e) =>\r\n        setActive(index) ||\r\n        handleClick(data._id) ||\r\n        setCurrentChat(data) ||\r\n        setUserData(user) ||\r\n        setActiveStatus(online)\r\n      }\r\n    >\r\n      <div className=\"relative\">\r\n        <img\r\n          src={`${user?.avatar?.url}`}\r\n          alt=\"\"\r\n          className=\"w-[50px] h-[50px] rounded-full\"\r\n        />\r\n        {online ? (\r\n          <div className=\"w-[12px] h-[12px] bg-green-400 rounded-full absolute top-[2px] right-[2px]\" />\r\n        ) : (\r\n          <div className=\"w-[12px] h-[12px] bg-[#c7b9b9] rounded-full absolute top-[2px] right-[2px]\" />\r\n        )}\r\n      </div>\r\n      <div className=\"pl-3\">\r\n        <h1 className=\"text-[18px]\">{user?.name}</h1>\r\n        <p className=\"text-[16px] text-[#000c]\">\r\n          {!loading && data?.lastMessageId !== userData?._id\r\n            ? \"You:\"\r\n            : userData?.name.split(\" \")[0] + \": \"}{\" \"}\r\n          {data?.lastMessage}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SellerInbox = ({\r\n  setOpen,\r\n  newMessage,\r\n  setNewMessage,\r\n  sendMessageHandler,\r\n  messages,\r\n  sellerId,\r\n  userData,\r\n  activeStatus,\r\n  scrollRef,\r\n  handleImageUpload,\r\n}) => {\r\n  return (\r\n    <div className=\"w-[full] min-h-full flex flex-col justify-between p-5\">\r\n      {/* message header */}\r\n      <div className=\"w-full flex p-3 items-center justify-between bg-slate-200\">\r\n        <div className=\"flex\">\r\n          <img\r\n            src={`${userData?.avatar?.url}`}\r\n            alt=\"\"\r\n            className=\"w-[60px] h-[60px] rounded-full\"\r\n          />\r\n          <div className=\"pl-3\">\r\n            <h1 className=\"text-[18px] font-[600]\">{userData?.name}</h1>\r\n            <h1>{activeStatus ? \"Active Now\" : \"\"}</h1>\r\n          </div>\r\n        </div>\r\n        <AiOutlineArrowRight\r\n          size={20}\r\n          className=\"cursor-pointer\"\r\n          onClick={() => setOpen(false)}\r\n        />\r\n      </div>\r\n\r\n      {/* messages */}\r\n      <div className=\"px-3 h-[75vh] py-3 overflow-y-scroll\">\r\n        {messages &&\r\n          messages.map((item, index) => (\r\n            <div\r\n              className={`flex w-full my-2 ${\r\n                item.sender === sellerId ? \"justify-end\" : \"justify-start\"\r\n              }`}\r\n              ref={scrollRef}\r\n            >\r\n              {item.sender !== sellerId && (\r\n                <img\r\n                  src={`${userData?.avatar?.url}`}\r\n                  className=\"w-[40px] h-[40px] rounded-full mr-3\"\r\n                  alt=\"\"\r\n                />\r\n              )}\r\n              {item.images && (\r\n                <img\r\n                  src={`${item.images?.url}`}\r\n                  className=\"w-[300px] h-[300px] object-cover rounded-[10px] ml-2 mb-2\"\r\n                />\r\n              )}\r\n              {item.text !== \"\" && (\r\n                <div>\r\n                  <div\r\n                    className={`w-max p-2 rounded ${\r\n                      item.sender === sellerId ? \"bg-[#000]\" : \"bg-[#38c776]\"\r\n                    } text-[#fff] h-min`}\r\n                  >\r\n                    <p>{item.text}</p>\r\n                  </div>\r\n\r\n                  <p className=\"text-[12px] text-[#000000d3] pt-1\">\r\n                    {format(item.createdAt)}\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n      </div>\r\n\r\n      {/* send message input */}\r\n      <form\r\n        aria-required={true}\r\n        className=\"p-3 relative w-full flex justify-between items-center\"\r\n        onSubmit={sendMessageHandler}\r\n      >\r\n        <div className=\"w-[30px]\">\r\n          <input\r\n            type=\"file\"\r\n            name=\"\"\r\n            id=\"image\"\r\n            className=\"hidden\"\r\n            onChange={handleImageUpload}\r\n          />\r\n          <label htmlFor=\"image\">\r\n            <TfiGallery className=\"cursor-pointer\" size={20} />\r\n          </label>\r\n        </div>\r\n        <div className=\"w-full\">\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            placeholder=\"Enter your message...\"\r\n            value={newMessage}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n            className={`${styles.input}`}\r\n          />\r\n          <input type=\"submit\" value=\"Send\" className=\"hidden\" id=\"send\" />\r\n          <label htmlFor=\"send\">\r\n            <AiOutlineSend\r\n              size={20}\r\n              className=\"absolute right-4 top-5 cursor-pointer\"\r\n            />\r\n          </label>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserInbox;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\Login.jsx",["666"],[],"import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Login from \"../components/Login/Login.jsx\";\r\n\r\nconst LoginPage = () => {\r\n  const navigate = useNavigate();\r\n  const { isAuthenticated } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    if(isAuthenticated === true){\r\n      navigate(\"/\");\r\n    }\r\n  }, [])\r\n  \r\n  return (\r\n    <div>\r\n        <Login />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginPage;","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\ActivationPage.jsx",["667"],[],"import axios from \"axios\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { server } from \"../server\";\r\n\r\nconst ActivationPage = () => {\r\n  const { activation_token } = useParams();\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (activation_token) {\r\n      const sendRequest = async () => {\r\n        await axios\r\n          .post(`${server}/user/activation`, {\r\n            activation_token,\r\n          })\r\n          .then((res) => {\r\n            console.log(res);\r\n          })\r\n          .catch((err) => {\r\n            setError(true);\r\n          });\r\n      };\r\n      sendRequest();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      {error ? (\r\n        <p>Your token is expired!</p>\r\n      ) : (\r\n        <p>Your account has been created suceessfully!</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActivationPage;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\SignupPage.jsx",["668"],[],"import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Signup from \"../components/Signup/Signup\";\r\n\r\nconst SignupPage = () => {\r\n  const navigate = useNavigate();\r\n  const { isAuthenticated } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    if(isAuthenticated === true){\r\n      navigate(\"/\");\r\n    }\r\n  }, [])\r\n  return (\r\n    <div>\r\n        <Signup />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignupPage","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\HomePage.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\Shop\\ShopHomePage.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\BestSellingPage.jsx",["669"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport Header from \"../components/Layout/Header\";\r\nimport Loader from \"../components/Layout/Loader\";\r\nimport ProductCard from \"../components/Route/ProductCard/ProductCard\";\r\nimport styles from \"../styles/styles\";\r\nimport Footer from \"../components/Layout/Footer\";\r\n\r\nconst BestSellingPage = () => {\r\n  const [data, setData] = useState([]);\r\n  const {allProducts,isLoading} = useSelector((state) => state.products);\r\n\r\n  useEffect(() => {\r\n    const allProductsData = allProducts ? [...allProducts] : [];\r\n    const sortedData = allProductsData?.sort((a,b) => b.sold_out - a.sold_out); \r\n    setData(sortedData);\r\n  }, [allProducts]);\r\n\r\n  return (\r\n   <>\r\n   {\r\n    isLoading ? (\r\n      <Loader />\r\n    ) : (\r\n      <div>\r\n      <Header activeHeading={2} />\r\n      <br />\r\n      <br />\r\n      <div className={`${styles.section}`}>\r\n        <div className=\"grid grid-cols-1 gap-[20px] md:grid-cols-2 md:gap-[25px] lg:grid-cols-4 lg:gap-[25px] xl:grid-cols-5 xl:gap-[30px] mb-12\">\r\n          {data && data.map((i, index) => <ProductCard data={i} key={index} />)}\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n    )\r\n   }\r\n   </>\r\n  );\r\n};\r\n\r\nexport default BestSellingPage;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\ProductsPage.jsx",["670"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport Footer from \"../components/Layout/Footer\";\r\nimport Header from \"../components/Layout/Header\";\r\nimport Loader from \"../components/Layout/Loader\";\r\nimport ProductCard from \"../components/Route/ProductCard/ProductCard\";\r\nimport styles from \"../styles/styles\";\r\n\r\nconst ProductsPage = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const categoryData = searchParams.get(\"category\");\r\n  const {allProducts,isLoading} = useSelector((state) => state.products);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (categoryData === null) {\r\n      const d = allProducts;\r\n      setData(d);\r\n    } else {\r\n      const d =\r\n      allProducts && allProducts.filter((i) => i.category === categoryData);\r\n      setData(d);\r\n    }\r\n    //    window.scrollTo(0,0);\r\n  }, [allProducts]);\r\n\r\n  return (\r\n  <>\r\n  {\r\n    isLoading ? (\r\n      <Loader />\r\n    ) : (\r\n      <div>\r\n      <Header activeHeading={3} />\r\n      <br />\r\n      <br />\r\n      <div className={`${styles.section}`}>\r\n        <div className=\"grid grid-cols-1 gap-[20px] md:grid-cols-2 md:gap-[25px] lg:grid-cols-4 lg:gap-[25px] xl:grid-cols-5 xl:gap-[30px] mb-12\">\r\n          {data && data.map((i, index) => <ProductCard data={i} key={index} />)}\r\n        </div>\r\n        {data && data.length === 0 ? (\r\n          <h1 className=\"text-center w-full pb-[100px] text-[20px]\">\r\n            No products Found!\r\n          </h1>\r\n        ) : null}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n    )\r\n  }\r\n  </>\r\n  );\r\n};\r\n\r\nexport default ProductsPage;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\EventsPage.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\FAQPage.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\OrderSuccessPage.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\CheckoutPage.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\ProductDetailsPage.jsx",["671"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport Footer from \"../components/Layout/Footer\";\r\nimport Header from \"../components/Layout/Header\";\r\nimport ProductDetails from \"../components/Products/ProductDetails\";\r\nimport SuggestedProduct from \"../components/Products/SuggestedProduct\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ProductDetailsPage = () => {\r\n  const { allProducts } = useSelector((state) => state.products);\r\n  const { allEvents } = useSelector((state) => state.events);\r\n  const { id } = useParams();\r\n  const [data, setData] = useState(null);\r\n  const [searchParams] = useSearchParams();\r\n  const eventData = searchParams.get(\"isEvent\");\r\n\r\n  useEffect(() => {\r\n    if (eventData !== null) {\r\n      const data = allEvents && allEvents.find((i) => i._id === id);\r\n      setData(data);\r\n    } else {\r\n      const data = allProducts && allProducts.find((i) => i._id === id);\r\n      setData(data);\r\n    }\r\n  }, [allProducts, allEvents]);\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <ProductDetails data={data} />\r\n        {\r\n          !eventData && (\r\n            <>\r\n            {data && <SuggestedProduct data={data} />}\r\n            </>\r\n          )\r\n        }\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductDetailsPage;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\PaymentPage.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\ProfilePage.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\ShopCreate.jsx",["672"],[],"import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ShopCreate from \"../components/Shop/ShopCreate\";\r\n\r\nconst ShopCreatePage = () => {\r\n  const navigate = useNavigate();\r\n  const { isSeller,seller } = useSelector((state) => state.seller);\r\n\r\n  useEffect(() => {\r\n    if(isSeller === true){\r\n      navigate(`/shop/${seller._id}`);\r\n    }\r\n  }, [])\r\n  return (\r\n    <div>\r\n        <ShopCreate />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShopCreatePage","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\SellerActivationPage.jsx",["673"],[],"import axios from \"axios\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { server } from \"../server\";\r\n\r\nconst SellerActivationPage = () => {\r\n  const { activation_token } = useParams();\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (activation_token) {\r\n      const sendRequest = async () => {\r\n        await axios\r\n          .post(`${server}/shop/activation`, {\r\n            activation_token,\r\n          })\r\n          .then((res) => {\r\n            console.log(res);\r\n          })\r\n          .catch((err) => {\r\n            setError(true);\r\n          });\r\n      };\r\n      sendRequest();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      {error ? (\r\n        <p>Your token is expired!</p>\r\n      ) : (\r\n        <p>Your account has been created suceessfully!</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SellerActivationPage;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\ShopLoginPage.jsx",["674"],[],"import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ShopLogin from \"../components/Shop/ShopLogin\";\r\n\r\nconst ShopLoginPage = () => {\r\n  const navigate = useNavigate();\r\n  const { isSeller,isLoading } = useSelector((state) => state.seller);\r\n\r\n  useEffect(() => {\r\n    if(isSeller === true){\r\n      navigate(`/dashboard`);\r\n    }\r\n  }, [isLoading,isSeller])\r\n  return (\r\n    <div>\r\n        <ShopLogin />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShopLoginPage","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\OrderDetailsPage.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\TrackOrderPage.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\AdminDashboardUsers.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\AdminDashboardPage.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\AdminDashboardSellers.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\AdminDashboardWithdraw.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\AdminDashboardProducts.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\AdminDashboardEvents.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\AdminDashboardOrders.jsx",["675","676"],[],"import React, { useEffect } from \"react\";\r\nimport AdminHeader from \"../components/Layout/AdminHeader\";\r\nimport AdminSideBar from \"../components/Admin/Layout/AdminSideBar\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllOrdersOfAdmin } from \"../redux/actions/order\";\r\n\r\nconst AdminDashboardOrders = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { adminOrders, adminOrderLoading } = useSelector(\r\n    (state) => state.order\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllOrdersOfAdmin());\r\n  }, []);\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: \"Order ID\", minWidth: 150, flex: 0.7 },\r\n\r\n    {\r\n      field: \"status\",\r\n      headerName: \"Status\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n      cellClassName: (params) => {\r\n        return params.getValue(params.id, \"status\") === \"Delivered\"\r\n          ? \"greenColor\"\r\n          : \"redColor\";\r\n      },\r\n    },\r\n    {\r\n      field: \"itemsQty\",\r\n      headerName: \"Items Qty\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n    },\r\n\r\n    {\r\n      field: \"total\",\r\n      headerName: \"Total\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.8,\r\n    },\r\n    {\r\n        field: \"createdAt\",\r\n        headerName: \"Order Date\",\r\n        type: \"number\",\r\n        minWidth: 130,\r\n        flex: 0.8,\r\n      },\r\n  ];\r\n\r\n  const row = [];\r\n  adminOrders &&\r\n    adminOrders.forEach((item) => {\r\n      row.push({\r\n        id: item._id,\r\n        itemsQty: item?.cart?.reduce((acc, item) => acc + item.qty, 0),\r\n        total: item?.totalPrice + \" $\",\r\n        status: item?.status,\r\n        createdAt: item?.createdAt.slice(0,10),\r\n      });\r\n    });\r\n  return (\r\n    <div>\r\n      <AdminHeader />\r\n      <div className=\"w-full flex\">\r\n        <div className=\"flex items-start justify-between w-full\">\r\n          <div className=\"w-[80px] 800px:w-[330px]\">\r\n            <AdminSideBar active={2} />\r\n          </div>\r\n\r\n          <div className=\"w-full min-h-[45vh] pt-5 rounded flex justify-center\">\r\n            <div className=\"w-[97%] flex justify-center\">\r\n              <DataGrid\r\n                rows={row}\r\n                columns={columns}\r\n                pageSize={4}\r\n                disableSelectionOnClick\r\n                autoHeight\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardOrders;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\Shop\\ShopDashboardPage.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\Shop\\ShopCreateEvents.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\Shop\\ShopCreateProduct.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\Shop\\ShopAllProducts.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\Shop\\ShopAllEvents.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\Shop\\ShopAllCoupouns.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\Shop\\ShopOrderDetails.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\Shop\\ShopPreviewPage.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\Shop\\ShopAllOrders.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\Shop\\ShopAllRefunds.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\Shop\\ShopSettingsPage.jsx",["677"],[],"import React from \"react\";\r\nimport Footer from \"../../components/Layout/Footer\";\r\nimport ShopSettings from \"../../components/Shop/ShopSettings\";\r\nimport DashboardHeader from \"../../components/Shop/Layout/DashboardHeader\";\r\nimport DashboardSideBar from \"../../components/Shop/Layout/DashboardSideBar\";\r\n\r\nconst ShopSettingsPage = () => {\r\n  return (\r\n    <div>\r\n      <DashboardHeader />\r\n      <div className=\"flex items-start justify-between w-full\">\r\n        <div className=\"w-[80px] 800px:w-[330px]\">\r\n          <DashboardSideBar active={11} />\r\n        </div>\r\n        <ShopSettings />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShopSettingsPage;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\Shop\\ShopWithDrawMoneyPage.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\pages\\Shop\\ShopInboxPage.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Layout\\Loader.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\styles\\styles.js",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Login\\Login.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Layout\\Footer.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Layout\\Header.jsx",["678"],[],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"../../styles/styles\";\r\nimport { categoriesData, productData } from \"../../static/data\";\r\nimport {\r\n  AiOutlineHeart,\r\n  AiOutlineSearch,\r\n  AiOutlineShoppingCart,\r\n} from \"react-icons/ai\";\r\nimport { IoIosArrowDown, IoIosArrowForward } from \"react-icons/io\";\r\nimport { BiMenuAltLeft } from \"react-icons/bi\";\r\nimport { CgProfile } from \"react-icons/cg\";\r\nimport DropDown from \"./DropDown\";\r\nimport Navbar from \"./Navbar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Cart from \"../cart/Cart\";\r\nimport Wishlist from \"../Wishlist/Wishlist\";\r\nimport { RxCross1 } from \"react-icons/rx\";\r\nconst MyImage = require(\"../../Assests/logo.png\")\r\n\r\nconst Header = ({ activeHeading }) => {\r\n  const { isAuthenticated, user } = useSelector((state) => state.user);\r\n  const { isSeller } = useSelector((state) => state.seller);\r\n  const { wishlist } = useSelector((state) => state.wishlist);\r\n  const { cart } = useSelector((state) => state.cart);\r\n  const { allProducts } = useSelector((state) => state.products);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [searchData, setSearchData] = useState(null);\r\n  const [active, setActive] = useState(false);\r\n  const [dropDown, setDropDown] = useState(false);\r\n  const [openCart, setOpenCart] = useState(false);\r\n  const [openWishlist, setOpenWishlist] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleSearchChange = (e) => {\r\n    const term = e.target.value;\r\n    setSearchTerm(term);\r\n\r\n    const filteredProducts =\r\n      allProducts &&\r\n      allProducts.filter((product) =>\r\n        product.name.toLowerCase().includes(term.toLowerCase())\r\n      );\r\n    setSearchData(filteredProducts);\r\n  };\r\n\r\n  window.addEventListener(\"scroll\", () => {\r\n    if (window.scrollY > 70) {\r\n      setActive(true);\r\n    } else {\r\n      setActive(false);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className={`${styles.section}`}>\r\n        <div className=\"hidden 800px:h-[50px] 800px:my-[20px] 800px:flex items-center justify-between\">\r\n          <div>\r\n            <Link to=\"/\">\r\n              <img\r\n                src={MyImage} \r\n                alt=\"\"\r\n              />\r\n            </Link>\r\n          </div>\r\n          {/* search box */}\r\n          <div className=\"w-[50%] relative\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search Product...\"\r\n              value={searchTerm}\r\n              onChange={handleSearchChange}\r\n              className=\"h-[40px] w-full px-2 border-[#2CB34A] border-[2px] rounded-md\"\r\n            />\r\n            <AiOutlineSearch\r\n              size={30}\r\n              className=\"absolute right-2 top-1.5 cursor-pointer\"\r\n            />\r\n            {searchData && searchData.length !== 0 ? (\r\n              <div className=\"absolute min-h-[30vh] bg-slate-50 shadow-sm-2 z-[9] p-4\">\r\n                {searchData &&\r\n                  searchData.map((i, index) => {\r\n                    return (\r\n                      <Link to={`/product/${i._id}`}>\r\n                        <div className=\"w-full flex items-start-py-3\">\r\n                          <img\r\n                            src={`${i.images[0]?.url}`}\r\n                            alt=\"\"\r\n                            className=\"w-[40px] h-[40px] mr-[10px]\"\r\n                          />\r\n                          <h1>{i.name}</h1>\r\n                        </div>\r\n                      </Link>\r\n                    );\r\n                  })}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n\r\n          <div className={`${styles.button}`}>\r\n            <Link to={`${isSeller ? \"/dashboard\" : \"/shop-create\"}`}>\r\n              <h1 className=\"text-[#fff] flex items-center\">\r\n                {isSeller ? \"Go Dashboard\" : \"Become Seller\"}{\" \"}\r\n                <IoIosArrowForward className=\"ml-1\" />\r\n              </h1>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={`${\r\n          active === true ? \"shadow-sm fixed top-0 left-0 z-10\" : null\r\n        } transition hidden 800px:flex items-center justify-between w-full bg-[#2BB24A] h-[70px]`}\r\n      >\r\n        <div\r\n          className={`${styles.section} relative ${styles.noramlFlex} justify-between`}\r\n        >\r\n          {/* categories */}\r\n          <div onClick={() => setDropDown(!dropDown)}>\r\n            <div className=\"relative h-[60px] mt-[10px] w-[270px] hidden 1000px:block\">\r\n              <BiMenuAltLeft size={30} className=\"absolute top-3 left-2\" />\r\n              <button\r\n                className={`h-[100%] w-full flex justify-between items-center pl-10 bg-white font-sans text-lg font-[500] select-none rounded-t-md`}\r\n              >\r\n                All Categories\r\n              </button>\r\n              <IoIosArrowDown\r\n                size={20}\r\n                className=\"absolute right-2 top-4 cursor-pointer\"\r\n                onClick={() => setDropDown(!dropDown)}\r\n              />\r\n              {dropDown ? (\r\n                <DropDown\r\n                  categoriesData={categoriesData}\r\n                  setDropDown={setDropDown}\r\n                />\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          {/* navitems */}\r\n          <div className={`${styles.noramlFlex}`}>\r\n            <Navbar active={activeHeading} />\r\n          </div>\r\n\r\n          <div className=\"flex\">\r\n            <div className={`${styles.noramlFlex}`}>\r\n              <div\r\n                className=\"relative cursor-pointer mr-[15px]\"\r\n                onClick={() => setOpenWishlist(true)}\r\n              >\r\n                <AiOutlineHeart size={30} color=\"rgb(255 255 255)\" />\r\n                <span className=\"absolute right-0 top-0 rounded-full bg-[#3bc177] w-4 h-4 top right p-0 m-0 text-white font-mono text-[12px] leading-tight text-center\">\r\n                  {wishlist && wishlist.length}\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className={`${styles.noramlFlex}`}>\r\n              <div\r\n                className=\"relative cursor-pointer mr-[15px]\"\r\n                onClick={() => setOpenCart(true)}\r\n              >\r\n                <AiOutlineShoppingCart\r\n                  size={30}\r\n                  color=\"rgb(255 255 255)\"\r\n                />\r\n                <span className=\"absolute right-0 top-0 rounded-full bg-[#3bc177] w-4 h-4 top right p-0 m-0 text-white font-mono text-[12px] leading-tight text-center\">\r\n                  {cart && cart.length}\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className={`${styles.noramlFlex}`}>\r\n              <div className=\"relative cursor-pointer mr-[15px]\">\r\n                {isAuthenticated ? (\r\n                  <Link to=\"/profile\">\r\n                    <img\r\n                      src={`${user?.avatar?.url}`}\r\n                      className=\"w-[35px] h-[35px] rounded-full\"\r\n                      alt=\"\"\r\n                    />\r\n                  </Link>\r\n                ) : (\r\n                  <Link to=\"/login\">\r\n                    <CgProfile size={30} color=\"rgb(255 255 255)\" />\r\n                  </Link>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* cart popup */}\r\n            {openCart ? <Cart setOpenCart={setOpenCart} /> : null}\r\n\r\n            {/* wishlist popup */}\r\n            {openWishlist ? (\r\n              <Wishlist setOpenWishlist={setOpenWishlist} />\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* mobile header */}\r\n      <div\r\n        className={`${\r\n          active === true ? \"shadow-sm fixed top-0 left-0 z-10\" : null\r\n        }\r\n      w-full h-[60px] bg-[#fff] z-50 top-0 left-0 shadow-sm 800px:hidden`}\r\n      >\r\n        <div className=\"w-full flex items-center justify-between\">\r\n          <div>\r\n            <BiMenuAltLeft\r\n              size={40}\r\n              className=\"ml-4\"\r\n              onClick={() => setOpen(true)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Link to=\"/\">\r\n              <img\r\n                src={MyImage}\r\n                alt=\"\"\r\n                className=\"mt-3 cursor-pointer\"\r\n              />\r\n            </Link>\r\n          </div>\r\n          <div>\r\n            <div\r\n              className=\"relative mr-[20px]\"\r\n              onClick={() => setOpenCart(true)}\r\n            >\r\n              <AiOutlineShoppingCart size={30} />\r\n              <span class=\"absolute right-0 top-0 rounded-full bg-[#3bc177] w-4 h-4 top right p-0 m-0 text-white font-mono text-[12px]  leading-tight text-center\">\r\n                {cart && cart.length}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {/* cart popup */}\r\n          {openCart ? <Cart setOpenCart={setOpenCart} /> : null}\r\n\r\n          {/* wishlist popup */}\r\n          {openWishlist ? <Wishlist setOpenWishlist={setOpenWishlist} /> : null}\r\n        </div>\r\n\r\n        {/* header sidebar */}\r\n        {open && (\r\n          <div\r\n            className={`fixed w-full bg-[#0000005f] z-20 h-full top-0 left-0`}\r\n          >\r\n            <div className=\"fixed w-[70%] bg-[#fff] h-screen top-0 left-0 z-10 overflow-y-scroll\">\r\n              <div className=\"w-full justify-between flex pr-3\">\r\n                <div>\r\n                  <div\r\n                    className=\"relative mr-[15px]\"\r\n                    onClick={() => setOpenWishlist(true) || setOpen(false)}\r\n                  >\r\n                    <AiOutlineHeart size={30} className=\"mt-5 ml-3\" />\r\n                    <span class=\"absolute right-0 top-0 rounded-full bg-[#3bc177] w-4 h-4 top right p-0 m-0 text-white font-mono text-[12px]  leading-tight text-center\">\r\n                      {wishlist && wishlist.length}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <RxCross1\r\n                  size={30}\r\n                  className=\"ml-4 mt-5\"\r\n                  onClick={() => setOpen(false)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"my-8 w-[92%] m-auto h-[40px relative]\">\r\n                <input\r\n                  type=\"search\"\r\n                  placeholder=\"Search Product...\"\r\n                  className=\"h-[40px] w-full px-2 border-[#3957db] border-[2px] rounded-md\"\r\n                  value={searchTerm}\r\n                  onChange={handleSearchChange}\r\n                />\r\n                {searchData && (\r\n                  <div className=\"absolute bg-[#fff] z-10 shadow w-full left-0 p-3\">\r\n                    {searchData.map((i) => {\r\n                      const d = i.name;\r\n\r\n                      const Product_name = d.replace(/\\s+/g, \"-\");\r\n                      return (\r\n                        <Link to={`/product/${Product_name}`}>\r\n                          <div className=\"flex items-center\">\r\n                            <img\r\n                              src={i.image_Url[0]?.url}\r\n                              alt=\"\"\r\n                              className=\"w-[50px] mr-2\"\r\n                            />\r\n                            <h5>{i.name}</h5>\r\n                          </div>\r\n                        </Link>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <Navbar active={activeHeading} />\r\n              <div className={`${styles.button} ml-4 !rounded-[4px]`}>\r\n                <Link to=\"/shop-create\">\r\n                  <h1 className=\"text-[#fff] flex items-center\">\r\n                    Become Seller <IoIosArrowForward className=\"ml-1\" />\r\n                  </h1>\r\n                </Link>\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <br />\r\n\r\n              <div className=\"flex w-full justify-center\">\r\n                {isAuthenticated ? (\r\n                  <div>\r\n                    <Link to=\"/profile\">\r\n                      <img\r\n                        src={`${user.avatar?.url}`}\r\n                        alt=\"\"\r\n                        className=\"w-[60px] h-[60px] rounded-full border-[3px] border-[#0eae88]\"\r\n                      />\r\n                    </Link>\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    <Link\r\n                      to=\"/login\"\r\n                      className=\"text-[18px] pr-[10px] text-[#000000b7]\"\r\n                    >\r\n                      Login /\r\n                    </Link>\r\n                    <Link\r\n                      to=\"/sign-up\"\r\n                      className=\"text-[18px] text-[#000000b7]\"\r\n                    >\r\n                      Sign up\r\n                    </Link>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Signup\\Signup.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Route\\Sponsored.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Events\\Events.jsx",["679"],[],"import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport styles from '../../styles/styles'\r\nimport EventCard from \"./EventCard\";\r\n\r\nconst Events = () => {\r\n  const {allEvents,isLoading} = useSelector((state) => state.events);  \r\n   \r\n  return (\r\n    <div>\r\n     {\r\n      !isLoading && (\r\n        <div className={`${styles.section}`}>\r\n      <div className={`${styles.heading}`}>\r\n        <h1>Popular Events</h1>\r\n      </div>\r\n\r\n      <div className=\"w-full grid\">\r\n         {\r\n          allEvents.length !== 0 && (\r\n            <EventCard data={allEvents && allEvents[0]} />\r\n          )\r\n         }\r\n         <h4>{\r\n           allEvents?.length === 0 && (\r\n            'No Events have!'\r\n           )\r\n          }\r\n\r\n         </h4>\r\n      </div>\r\n     \r\n    </div>\r\n      )\r\n     }\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Events","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Events\\EventCard.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\ShopInfo.jsx",["680"],[],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { server } from \"../../server\";\r\nimport styles from \"../../styles/styles\";\r\nimport Loader from \"../Layout/Loader\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllProductsShop } from \"../../redux/actions/product\";\r\n\r\nconst ShopInfo = ({ isOwner }) => {\r\n  const [data,setData] = useState({});\r\n  const {products} = useSelector((state) => state.products);\r\n  const [isLoading,setIsLoading] = useState(false);\r\n  const {id} = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllProductsShop(id));\r\n    setIsLoading(true);\r\n    axios.get(`${server}/shop/get-shop-info/${id}`).then((res) => {\r\n     setData(res.data.shop);\r\n     setIsLoading(false);\r\n    }).catch((error) => {\r\n      console.log(error);\r\n      setIsLoading(false);\r\n    })\r\n  }, [])\r\n  \r\n\r\n  const logoutHandler = async () => {\r\n    axios.get(`${server}/shop/logout`,{\r\n      withCredentials: true,\r\n    });\r\n    window.location.reload();\r\n  };\r\n\r\n  const totalReviewsLength =\r\n    products &&\r\n    products.reduce((acc, product) => acc + product.reviews.length, 0);\r\n\r\n  const totalRatings = products && products.reduce((acc,product) => acc + product.reviews.reduce((sum,review) => sum + review.rating, 0),0);\r\n\r\n  const averageRating = totalRatings / totalReviewsLength || 0;\r\n\r\n  return (\r\n   <>\r\n   {\r\n    isLoading  ? (\r\n      <Loader />\r\n    ) : (\r\n      <div>\r\n      <div className=\"w-full py-5\">\r\n        <div className=\"w-full flex item-center justify-center\">\r\n          <img\r\n            src={`${data.avatar?.url}`}\r\n            alt=\"\"\r\n            className=\"w-[150px] h-[150px] object-cover rounded-full\"\r\n          />\r\n        </div>\r\n        <h3 className=\"text-center py-2 text-[20px]\">{data.name}</h3>\r\n        <p className=\"text-[16px] text-[#000000a6] p-[10px] flex items-center\">\r\n          {data.description}\r\n        </p>\r\n      </div>\r\n      <div className=\"p-3\">\r\n        <h5 className=\"font-[600]\">Address</h5>\r\n        <h4 className=\"text-[#000000a6]\">{data.address}</h4>\r\n      </div>\r\n      <div className=\"p-3\">\r\n        <h5 className=\"font-[600]\">Phone Number</h5>\r\n        <h4 className=\"text-[#000000a6]\">{data.phoneNumber}</h4>\r\n      </div>\r\n      <div className=\"p-3\">\r\n        <h5 className=\"font-[600]\">Total Products</h5>\r\n        <h4 className=\"text-[#000000a6]\">{products && products.length}</h4>\r\n      </div>\r\n      <div className=\"p-3\">\r\n        <h5 className=\"font-[600]\">Shop Ratings</h5>\r\n        <h4 className=\"text-[#000000b0]\">{averageRating}/5</h4>\r\n      </div>\r\n      <div className=\"p-3\">\r\n        <h5 className=\"font-[600]\">Joined On</h5>\r\n        <h4 className=\"text-[#000000b0]\">{data?.createdAt?.slice(0, 10)}</h4>\r\n      </div>\r\n      {isOwner && (\r\n        <div className=\"py-3 px-4\">\r\n           <Link to=\"/settings\">\r\n           <div className={`${styles.button} !w-full !h-[42px] !rounded-[5px]`}>\r\n            <span className=\"text-white\">Edit Shop</span>\r\n          </div>\r\n           </Link>\r\n          <div className={`${styles.button} !w-full !h-[42px] !rounded-[5px]`}\r\n          onClick={logoutHandler}\r\n          >\r\n            <span className=\"text-white\">Log Out</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n    )\r\n   }\r\n   </>\r\n  );\r\n};\r\n\r\nexport default ShopInfo;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Route\\Hero\\Hero.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Route\\Categories\\Categories.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Route\\BestDeals\\BestDeals.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Route\\FeaturedProduct\\FeaturedProduct.jsx",["681"],[],"import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styles from \"../../../styles/styles\";\r\nimport ProductCard from \"../ProductCard/ProductCard\";\r\n\r\nconst FeaturedProduct = () => {\r\n  const {allProducts} = useSelector((state) => state.products);\r\n   \r\n  return (\r\n    <div>\r\n      <div className={`${styles.section}`}>\r\n        <div className={`${styles.heading}`}>\r\n          <h1>Featured Products</h1>\r\n        </div>\r\n        <div className=\"grid grid-cols-1 gap-[20px] md:grid-cols-2 md:gap-[25px] lg:grid-cols-4 lg:gap-[25px] xl:grid-cols-5 xl:gap-[30px] mb-12 border-0\">\r\n        {\r\n            allProducts && allProducts.length !== 0 &&(\r\n              <>\r\n               {allProducts && allProducts.map((i, index) => <ProductCard data={i} key={index} />)}\r\n              </>\r\n            )\r\n           }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeaturedProduct;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Route\\ProductCard\\ProductCard.jsx",["682","683","684"],[],"import React, { useState } from \"react\";\r\nimport {\r\n  AiFillHeart,\r\n  AiFillStar,\r\n  AiOutlineEye,\r\n  AiOutlineHeart,\r\n  AiOutlineShoppingCart,\r\n  AiOutlineStar,\r\n} from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"../../../styles/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ProductDetailsCard from \"../ProductDetailsCard/ProductDetailsCard\";\r\nimport {\r\n  addToWishlist,\r\n  removeFromWishlist,\r\n} from \"../../../redux/actions/wishlist\";\r\nimport { useEffect } from \"react\";\r\nimport { addTocart } from \"../../../redux/actions/cart\";\r\nimport { toast } from \"react-toastify\";\r\nimport Ratings from \"../../Products/Ratings\";\r\n\r\nconst ProductCard = ({ data,isEvent }) => {\r\n  const { wishlist } = useSelector((state) => state.wishlist);\r\n  const { cart } = useSelector((state) => state.cart);\r\n  const [click, setClick] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (wishlist && wishlist.find((i) => i._id === data._id)) {\r\n      setClick(true);\r\n    } else {\r\n      setClick(false);\r\n    }\r\n  }, [wishlist]);\r\n\r\n  const removeFromWishlistHandler = (data) => {\r\n    setClick(!click);\r\n    dispatch(removeFromWishlist(data));\r\n  };\r\n\r\n  const addToWishlistHandler = (data) => {\r\n    setClick(!click);\r\n    dispatch(addToWishlist(data));\r\n  };\r\n\r\n  const addToCartHandler = (id) => {\r\n    const isItemExists = cart && cart.find((i) => i._id === id);\r\n    if (isItemExists) {\r\n      toast.error(\"Item already in cart!\");\r\n    } else {\r\n      if (data.stock < 1) {\r\n        toast.error(\"Product stock limited!\");\r\n      } else {\r\n        const cartData = { ...data, qty: 1 };\r\n        dispatch(addTocart(cartData));\r\n        toast.success(\"Item added to cart successfully!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"w-full h-[370px] bg-white rounded-lg shadow-sm p-3 relative cursor-pointer\">\r\n        <div className=\"flex justify-end\"></div>\r\n        <Link to={`${isEvent === true ? `/product/${data._id}?isEvent=true` : `/product/${data._id}`}`}>\r\n          <img\r\n            src={`${data.images && data.images[0]?.url}`}\r\n            alt=\"\"\r\n            className=\"w-full h-[170px] object-contain\"\r\n          />\r\n        </Link>\r\n        <Link to={`/shop/preview/${data?.shop._id}`}>\r\n          <h5 className={`${styles.shop_name}`}>{data.shop.name}</h5>\r\n        </Link>\r\n        <Link to={`${isEvent === true ? `/product/${data._id}?isEvent=true` : `/product/${data._id}`}`}>\r\n          <h4 className=\"pb-3 font-[500]\">\r\n            {data.name.length > 40 ? data.name.slice(0, 40) + \"...\" : data.name}\r\n          </h4>\r\n\r\n          <div className=\"flex\">\r\n          <Ratings rating={data?.ratings} />\r\n          </div>\r\n\r\n          <div className=\"py-2 flex items-center justify-between\">\r\n            <div className=\"flex\">\r\n              <h5 className={`${styles.productDiscountPrice}`}>\r\n                {data.originalPrice === 0\r\n                  ? data.originalPrice\r\n                  : data.discountPrice}\r\n                $\r\n              </h5>\r\n              <h4 className={`${styles.price}`}>\r\n                {data.originalPrice ? data.originalPrice + \" $\" : null}\r\n              </h4>\r\n            </div>\r\n            <span className=\"font-[400] text-[17px] text-[#68d284]\">\r\n              {data?.sold_out} sold\r\n            </span>\r\n          </div>\r\n        </Link>\r\n\r\n        {/* side options */}\r\n        <div>\r\n          {click ? (\r\n            <AiFillHeart\r\n              size={22}\r\n              className=\"cursor-pointer absolute right-2 top-5\"\r\n              onClick={() => removeFromWishlistHandler(data)}\r\n              color={click ? \"red\" : \"#333\"}\r\n              title=\"Remove from wishlist\"\r\n            />\r\n          ) : (\r\n            <AiOutlineHeart\r\n              size={22}\r\n              className=\"cursor-pointer absolute right-2 top-5\"\r\n              onClick={() => addToWishlistHandler(data)}\r\n              color={click ? \"red\" : \"#333\"}\r\n              title=\"Add to wishlist\"\r\n            />\r\n          )}\r\n          <AiOutlineEye\r\n            size={22}\r\n            className=\"cursor-pointer absolute right-2 top-14\"\r\n            onClick={() => setOpen(!open)}\r\n            color=\"#333\"\r\n            title=\"Quick view\"\r\n          />\r\n          <AiOutlineShoppingCart\r\n            size={25}\r\n            className=\"cursor-pointer absolute right-2 top-24\"\r\n            onClick={() => addToCartHandler(data._id)}\r\n            color=\"#444\"\r\n            title=\"Add to cart\"\r\n          />\r\n          {open ? <ProductDetailsCard setOpen={setOpen} data={data} /> : null}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Checkout\\CheckoutSteps.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\ShopProfileData.jsx",["685"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { getAllProductsShop } from \"../../redux/actions/product\";\r\nimport styles from \"../../styles/styles\";\r\nimport ProductCard from \"../Route/ProductCard/ProductCard\";\r\nimport Ratings from \"../Products/Ratings\";\r\nimport { getAllEventsShop } from \"../../redux/actions/event\";\r\n\r\nconst ShopProfileData = ({ isOwner }) => {\r\n  const { products } = useSelector((state) => state.products);\r\n  const { events } = useSelector((state) => state.events);\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllProductsShop(id));\r\n    dispatch(getAllEventsShop(id));\r\n  }, [dispatch]);\r\n\r\n  const [active, setActive] = useState(1);\r\n\r\n  const allReviews =\r\n    products && products.map((product) => product.reviews).flat();\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      <div className=\"flex w-full items-center justify-between\">\r\n        <div className=\"w-full flex\">\r\n          <div className=\"flex items-center\" onClick={() => setActive(1)}>\r\n            <h5\r\n              className={`font-[600] text-[20px] ${\r\n                active === 1 ? \"text-red-500\" : \"text-[#333]\"\r\n              } cursor-pointer pr-[20px]`}\r\n            >\r\n              Shop Products\r\n            </h5>\r\n          </div>\r\n          <div className=\"flex items-center\" onClick={() => setActive(2)}>\r\n            <h5\r\n              className={`font-[600] text-[20px] ${\r\n                active === 2 ? \"text-red-500\" : \"text-[#333]\"\r\n              } cursor-pointer pr-[20px]`}\r\n            >\r\n              Running Events\r\n            </h5>\r\n          </div>\r\n\r\n          <div className=\"flex items-center\" onClick={() => setActive(3)}>\r\n            <h5\r\n              className={`font-[600] text-[20px] ${\r\n                active === 3 ? \"text-red-500\" : \"text-[#333]\"\r\n              } cursor-pointer pr-[20px]`}\r\n            >\r\n              Shop Reviews\r\n            </h5>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {isOwner && (\r\n            <div>\r\n              <Link to=\"/dashboard\">\r\n                <div className={`${styles.button} !rounded-[4px] h-[42px]`}>\r\n                  <span className=\"text-[#fff]\">Go Dashboard</span>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <br />\r\n      {active === 1 && (\r\n        <div className=\"grid grid-cols-1 gap-[20px] md:grid-cols-2 md:gap-[25px] lg:grid-cols-3 lg:gap-[25px] xl:grid-cols-4 xl:gap-[20px] mb-12 border-0\">\r\n          {products &&\r\n            products.map((i, index) => (\r\n              <ProductCard data={i} key={index} isShop={true} />\r\n            ))}\r\n        </div>\r\n      )}\r\n\r\n      {active === 2 && (\r\n        <div className=\"w-full\">\r\n          <div className=\"grid grid-cols-1 gap-[20px] md:grid-cols-2 md:gap-[25px] lg:grid-cols-3 lg:gap-[25px] xl:grid-cols-4 xl:gap-[20px] mb-12 border-0\">\r\n            {events &&\r\n              events.map((i, index) => (\r\n                <ProductCard\r\n                  data={i}\r\n                  key={index}\r\n                  isShop={true}\r\n                  isEvent={true}\r\n                />\r\n              ))}\r\n          </div>\r\n          {events && events.length === 0 && (\r\n            <h5 className=\"w-full text-center py-5 text-[18px]\">\r\n              No Events have for this shop!\r\n            </h5>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {active === 3 && (\r\n        <div className=\"w-full\">\r\n          {allReviews &&\r\n            allReviews.map((item, index) => (\r\n              <div className=\"w-full flex my-4\">\r\n                <img\r\n                  src={`${item.user.avatar?.url}`}\r\n                  className=\"w-[50px] h-[50px] rounded-full\"\r\n                  alt=\"\"\r\n                />\r\n                <div className=\"pl-2\">\r\n                  <div className=\"flex w-full items-center\">\r\n                    <h1 className=\"font-[600] pr-2\">{item.user.name}</h1>\r\n                    <Ratings rating={item.rating} />\r\n                  </div>\r\n                  <p className=\"font-[400] text-[#000000a7]\">{item?.comment}</p>\r\n                  <p className=\"text-[#000000a7] text-[14px]\">{\"2days ago\"}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          {allReviews && allReviews.length === 0 && (\r\n            <h5 className=\"w-full text-center py-5 text-[18px]\">\r\n              No Reviews have for this shop!\r\n            </h5>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShopProfileData;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\redux\\actions\\order.js",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\ShopCreate.jsx",["686"],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Checkout\\Checkout.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\UserOrderDetails.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Products\\ProductDetails.jsx",["687"],[],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  AiFillHeart,\r\n  AiOutlineHeart,\r\n  AiOutlineMessage,\r\n  AiOutlineShoppingCart,\r\n} from \"react-icons/ai\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { getAllProductsShop } from \"../../redux/actions/product\";\r\nimport { server } from \"../../server\";\r\nimport styles from \"../../styles/styles\";\r\nimport {\r\n  addToWishlist,\r\n  removeFromWishlist,\r\n} from \"../../redux/actions/wishlist\";\r\nimport { addTocart } from \"../../redux/actions/cart\";\r\nimport { toast } from \"react-toastify\";\r\nimport Ratings from \"./Ratings\";\r\nimport axios from \"axios\";\r\n\r\nconst ProductDetails = ({ data }) => {\r\n  const { wishlist } = useSelector((state) => state.wishlist);\r\n  const { cart } = useSelector((state) => state.cart);\r\n  const { user, isAuthenticated } = useSelector((state) => state.user);\r\n  const { products } = useSelector((state) => state.products);\r\n  const [count, setCount] = useState(1);\r\n  const [click, setClick] = useState(false);\r\n  const [select, setSelect] = useState(0);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getAllProductsShop(data && data?.shop._id));\r\n    if (wishlist && wishlist.find((i) => i._id === data?._id)) {\r\n      setClick(true);\r\n    } else {\r\n      setClick(false);\r\n    }\r\n  }, [data, wishlist]);\r\n\r\n  const incrementCount = () => {\r\n    setCount(count + 1);\r\n  };\r\n\r\n  const decrementCount = () => {\r\n    if (count > 1) {\r\n      setCount(count - 1);\r\n    }\r\n  };\r\n\r\n  const removeFromWishlistHandler = (data) => {\r\n    setClick(!click);\r\n    dispatch(removeFromWishlist(data));\r\n  };\r\n\r\n  const addToWishlistHandler = (data) => {\r\n    setClick(!click);\r\n    dispatch(addToWishlist(data));\r\n  };\r\n\r\n  const addToCartHandler = (id) => {\r\n    const isItemExists = cart && cart.find((i) => i._id === id);\r\n    if (isItemExists) {\r\n      toast.error(\"Item already in cart!\");\r\n    } else {\r\n      if (data.stock < 1) {\r\n        toast.error(\"Product stock limited!\");\r\n      } else {\r\n        const cartData = { ...data, qty: count };\r\n        dispatch(addTocart(cartData));\r\n        toast.success(\"Item added to cart successfully!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const totalReviewsLength =\r\n    products &&\r\n    products.reduce((acc, product) => acc + product.reviews.length, 0);\r\n\r\n  const totalRatings =\r\n    products &&\r\n    products.reduce(\r\n      (acc, product) =>\r\n        acc + product.reviews.reduce((sum, review) => sum + review.rating, 0),\r\n      0\r\n    );\r\n\r\n  const avg =  totalRatings / totalReviewsLength || 0;\r\n\r\n  const averageRating = avg.toFixed(2);\r\n\r\n\r\n  const handleMessageSubmit = async () => {\r\n    if (isAuthenticated) {\r\n      const groupTitle = data._id + user._id;\r\n      const userId = user._id;\r\n      const sellerId = data.shop._id;\r\n      await axios\r\n        .post(`${server}/conversation/create-new-conversation`, {\r\n          groupTitle,\r\n          userId,\r\n          sellerId,\r\n        })\r\n        .then((res) => {\r\n          navigate(`/inbox?${res.data.conversation._id}`);\r\n        })\r\n        .catch((error) => {\r\n          toast.error(error.response.data.message);\r\n        });\r\n    } else {\r\n      toast.error(\"Please login to create a conversation\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      {data ? (\r\n        <div className={`${styles.section} w-[90%] 800px:w-[80%]`}>\r\n          <div className=\"w-full py-5\">\r\n            <div className=\"block w-full 800px:flex\">\r\n              <div className=\"w-full 800px:w-[50%]\">\r\n                <img\r\n                  src={`${data && data.images[select]?.url}`}\r\n                  alt=\"\"\r\n                  className=\"w-[80%]\"\r\n                />\r\n                <div className=\"w-full flex\">\r\n                  {data &&\r\n                    data.images.map((i, index) => (\r\n                      <div\r\n                        className={`${\r\n                          select === 0 ? \"border\" : \"null\"\r\n                        } cursor-pointer`}\r\n                      >\r\n                        <img\r\n                          src={`${i?.url}`}\r\n                          alt=\"\"\r\n                          className=\"h-[200px] overflow-hidden mr-3 mt-3\"\r\n                          onClick={() => setSelect(index)}\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                  <div\r\n                    className={`${\r\n                      select === 1 ? \"border\" : \"null\"\r\n                    } cursor-pointer`}\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n              <div className=\"w-full 800px:w-[50%] pt-5\">\r\n                <h1 className={`${styles.productTitle}`}>{data.name}</h1>\r\n                <p>{data.description}</p>\r\n                <div className=\"flex pt-3\">\r\n                  <h4 className={`${styles.productDiscountPrice}`}>\r\n                    {data.discountPrice}$\r\n                  </h4>\r\n                  <h3 className={`${styles.price}`}>\r\n                    {data.originalPrice ? data.originalPrice + \"$\" : null}\r\n                  </h3>\r\n                </div>\r\n\r\n                <div className=\"flex items-center mt-12 justify-between pr-3\">\r\n                  <div>\r\n                    <button\r\n                      className=\"bg-gradient-to-r from-teal-400 to-teal-500 text-white font-bold rounded-l px-4 py-2 shadow-lg hover:opacity-75 transition duration-300 ease-in-out\"\r\n                      onClick={decrementCount}\r\n                    >\r\n                      -\r\n                    </button>\r\n                    <span className=\"bg-gray-200 text-gray-800 font-medium px-4 py-[11px]\">\r\n                      {count}\r\n                    </span>\r\n                    <button\r\n                      className=\"bg-gradient-to-r from-teal-400 to-teal-500 text-white font-bold rounded-l px-4 py-2 shadow-lg hover:opacity-75 transition duration-300 ease-in-out\"\r\n                      onClick={incrementCount}\r\n                    >\r\n                      +\r\n                    </button>\r\n                  </div>\r\n                  <div>\r\n                    {click ? (\r\n                      <AiFillHeart\r\n                        size={30}\r\n                        className=\"cursor-pointer\"\r\n                        onClick={() => removeFromWishlistHandler(data)}\r\n                        color={click ? \"red\" : \"#333\"}\r\n                        title=\"Remove from wishlist\"\r\n                      />\r\n                    ) : (\r\n                      <AiOutlineHeart\r\n                        size={30}\r\n                        className=\"cursor-pointer\"\r\n                        onClick={() => addToWishlistHandler(data)}\r\n                        color={click ? \"red\" : \"#333\"}\r\n                        title=\"Add to wishlist\"\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className={`${styles.button} !mt-6 !rounded !h-11 flex items-center`}\r\n                  onClick={() => addToCartHandler(data._id)}\r\n                >\r\n                  <span className=\"text-white flex items-center\">\r\n                    Add to cart <AiOutlineShoppingCart className=\"ml-1\" />\r\n                  </span>\r\n                </div>\r\n                <div className=\"flex items-center pt-8\">\r\n                  <Link to={`/shop/preview/${data?.shop._id}`}>\r\n                    <img\r\n                      src={`${data?.shop?.avatar?.url}`}\r\n                      alt=\"\"\r\n                      className=\"w-[50px] h-[50px] rounded-full mr-2\"\r\n                    />\r\n                  </Link>\r\n                  <div className=\"pr-8\">\r\n                    <Link to={`/shop/preview/${data?.shop._id}`}>\r\n                      <h3 className={`${styles.shop_name} pb-1 pt-1`}>\r\n                        {data.shop.name}\r\n                      </h3>\r\n                    </Link>\r\n                    <h5 className=\"pb-3 text-[15px]\">\r\n                      ({averageRating}/5) Ratings\r\n                    </h5>\r\n                  </div>\r\n                  <div\r\n                    className={`${styles.button} bg-[#6443d1] mt-4 !rounded !h-11`}\r\n                    onClick={handleMessageSubmit}\r\n                  >\r\n                    <span className=\"text-white flex items-center\">\r\n                      Send Message <AiOutlineMessage className=\"ml-1\" />\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <ProductDetailsInfo\r\n            data={data}\r\n            products={products}\r\n            totalReviewsLength={totalReviewsLength}\r\n            averageRating={averageRating}\r\n          />\r\n          <br />\r\n          <br />\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProductDetailsInfo = ({\r\n  data,\r\n  products,\r\n  totalReviewsLength,\r\n  averageRating,\r\n}) => {\r\n  const [active, setActive] = useState(1);\r\n\r\n  return (\r\n    <div className=\"bg-[#f5f6fb] px-3 800px:px-10 py-2 rounded\">\r\n      <div className=\"w-full flex justify-between border-b pt-10 pb-2\">\r\n        <div className=\"relative\">\r\n          <h5\r\n            className={\r\n              \"text-[#000] text-[18px] px-1 leading-5 font-[600] cursor-pointer 800px:text-[20px]\"\r\n            }\r\n            onClick={() => setActive(1)}\r\n          >\r\n            Product Details\r\n          </h5>\r\n          {active === 1 ? (\r\n            <div className={`${styles.active_indicator}`} />\r\n          ) : null}\r\n        </div>\r\n        <div className=\"relative\">\r\n          <h5\r\n            className={\r\n              \"text-[#000] text-[18px] px-1 leading-5 font-[600] cursor-pointer 800px:text-[20px]\"\r\n            }\r\n            onClick={() => setActive(2)}\r\n          >\r\n            Product Reviews\r\n          </h5>\r\n          {active === 2 ? (\r\n            <div className={`${styles.active_indicator}`} />\r\n          ) : null}\r\n        </div>\r\n        <div className=\"relative\">\r\n          <h5\r\n            className={\r\n              \"text-[#000] text-[18px] px-1 leading-5 font-[600] cursor-pointer 800px:text-[20px]\"\r\n            }\r\n            onClick={() => setActive(3)}\r\n          >\r\n            Seller Information\r\n          </h5>\r\n          {active === 3 ? (\r\n            <div className={`${styles.active_indicator}`} />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      {active === 1 ? (\r\n        <>\r\n          <p className=\"py-2 text-[18px] leading-8 pb-10 whitespace-pre-line\">\r\n            {data.description}\r\n          </p>\r\n        </>\r\n      ) : null}\r\n\r\n      {active === 2 ? (\r\n        <div className=\"w-full min-h-[40vh] flex flex-col items-center py-3 overflow-y-scroll\">\r\n          {data &&\r\n            data.reviews.map((item, index) => (\r\n              <div className=\"w-full flex my-2\">\r\n                <img\r\n                  src={`${item.user.avatar?.url}`}\r\n                  alt=\"\"\r\n                  className=\"w-[50px] h-[50px] rounded-full\"\r\n                />\r\n                <div className=\"pl-2 \">\r\n                  <div className=\"w-full flex items-center\">\r\n                    <h1 className=\"font-[500] mr-3\">{item.user.name}</h1>\r\n                    <Ratings rating={data?.ratings} />\r\n                  </div>\r\n                  <p>{item.comment}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n\r\n          <div className=\"w-full flex justify-center\">\r\n            {data && data.reviews.length === 0 && (\r\n              <h5>No Reviews have for this product!</h5>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n\r\n      {active === 3 && (\r\n        <div className=\"w-full block 800px:flex p-5\">\r\n          <div className=\"w-full 800px:w-[50%]\">\r\n            <Link to={`/shop/preview/${data.shop._id}`}>\r\n              <div className=\"flex items-center\">\r\n                <img\r\n                  src={`${data?.shop?.avatar?.url}`}\r\n                  className=\"w-[50px] h-[50px] rounded-full\"\r\n                  alt=\"\"\r\n                />\r\n                <div className=\"pl-3\">\r\n                  <h3 className={`${styles.shop_name}`}>{data.shop.name}</h3>\r\n                  <h5 className=\"pb-2 text-[15px]\">\r\n                    ({averageRating}/5) Ratings\r\n                  </h5>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n            <p className=\"pt-2\">{data.shop.description}</p>\r\n          </div>\r\n          <div className=\"w-full 800px:w-[50%] mt-5 800px:mt-0 800px:flex flex-col items-end\">\r\n            <div className=\"text-left\">\r\n              <h5 className=\"font-[600]\">\r\n                Joined on:{\" \"}\r\n                <span className=\"font-[500]\">\r\n                  {data.shop?.createdAt?.slice(0, 10)}\r\n                </span>\r\n              </h5>\r\n              <h5 className=\"font-[600] pt-3\">\r\n                Total Products:{\" \"}\r\n                <span className=\"font-[500]\">\r\n                  {products && products.length}\r\n                </span>\r\n              </h5>\r\n              <h5 className=\"font-[600] pt-3\">\r\n                Total Reviews:{\" \"}\r\n                <span className=\"font-[500]\">{totalReviewsLength}</span>\r\n              </h5>\r\n              <Link to=\"/\">\r\n                <div\r\n                  className={`${styles.button} !rounded-[4px] !h-[39.5px] mt-3`}\r\n                >\r\n                  <h4 className=\"text-white\">Visit Shop</h4>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductDetails;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Products\\SuggestedProduct.jsx",["688","689"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { productData } from \"../../static/data\";\r\nimport styles from \"../../styles/styles\";\r\nimport ProductCard from \"../Route/ProductCard/ProductCard\";\r\n\r\nconst SuggestedProduct = ({ data }) => {\r\n  const {allProducts} = useSelector((state) => state.products);\r\n  const [productData,setProductData] = useState();\r\n\r\n  useEffect(() => {\r\n    const d =\r\n    allProducts && allProducts.filter((i) => i.category === data.category);\r\n    setProductData(d);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {data ? (\r\n        <div className={`p-4 ${styles.section}`}>\r\n          <h2\r\n            className={`${styles.heading} text-[25px] font-[500] border-b mb-5`}\r\n          >\r\n            Related Product\r\n          </h2>\r\n          <div className=\"grid grid-cols-1 gap-[20px] md:grid-cols-2 md:gap-[25px] lg:grid-cols-4 lg:gap-[25px] xl:grid-cols-5 xl:gap-[30px] mb-12\">\r\n             {\r\n                productData && productData.map((i,index) => (\r\n                    <ProductCard data={i} key={index} />\r\n                ))\r\n             }\r\n      </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuggestedProduct;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Layout\\AdminHeader.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\ShopLogin.jsx",["690"],[],"import { React, useEffect, useState } from \"react\";\r\nimport { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\r\nimport styles from \"../../styles/styles\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { server } from \"../../server\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst ShopLogin = () => {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    await axios\r\n      .post(\r\n        `${server}/shop/login-shop`,\r\n        {\r\n          email,\r\n          password,\r\n        },\r\n        { withCredentials: true }\r\n      )\r\n      .then((res) => {\r\n        toast.success(\"Login Success!\");\r\n        navigate(\"/dashboard\");\r\n        window.location.reload(true); \r\n      })\r\n      .catch((err) => {\r\n        toast.error(err.response.data.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n        <h2 className=\"mt-6 text-center text-3xl font-extrabold text-green-600\">\r\n          Login to your shop\r\n        </h2>\r\n      </div>\r\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\r\n        <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\r\n          <form className=\"space-y-6\" onSubmit={handleSubmit}>\r\n            <div>\r\n              <label\r\n                htmlFor=\"email\"\r\n                className=\"block text-sm font-medium text-gray-700\"\r\n              >\r\n                Email address\r\n              </label>\r\n              <div className=\"mt-1\">\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  required\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <label\r\n                htmlFor=\"password\"\r\n                className=\"block text-sm font-medium text-gray-700\"\r\n              >\r\n                Password\r\n              </label>\r\n              <div className=\"mt-1 relative\">\r\n                <input\r\n                  type={visible ? \"text\" : \"password\"}\r\n                  name=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  required\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                />\r\n                {visible ? (\r\n                  <AiOutlineEye\r\n                    className=\"absolute right-2 top-2 cursor-pointer\"\r\n                    size={25}\r\n                    onClick={() => setVisible(false)}\r\n                  />\r\n                ) : (\r\n                  <AiOutlineEyeInvisible\r\n                    className=\"absolute right-2 top-2 cursor-pointer\"\r\n                    size={25}\r\n                    onClick={() => setVisible(true)}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className={`${styles.noramlFlex} justify-between`}>\r\n              <div className={`${styles.noramlFlex}`}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"remember-me\"\r\n                  id=\"remember-me\"\r\n                  className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n                />\r\n                <label\r\n                  htmlFor=\"remember-me\"\r\n                  className=\"ml-2 block text-sm text-gray-900\"\r\n                >\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n              <div className=\"text-sm\">\r\n                <a\r\n                  href=\".forgot-password\"\r\n                  className=\"font-medium text-green-600 hover:text-green-500\"\r\n                >\r\n                  Forgot your password?\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"group relative w-full h-[40px] flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </div>\r\n            <div className={`${styles.noramlFlex} w-full`}>\r\n              <h4>Not have any account?</h4>\r\n              <Link to=\"/shop-create\" className=\"text-green-600 pl-2\">\r\n                Sign Up\r\n              </Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShopLogin;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Profile\\ProfileSidebar.jsx",["691"],[],"import React from \"react\";\r\nimport { AiOutlineLogin, AiOutlineMessage } from \"react-icons/ai\";\r\nimport { RiLockPasswordLine } from \"react-icons/ri\";\r\nimport { HiOutlineReceiptRefund, HiOutlineShoppingBag } from \"react-icons/hi\";\r\nimport {\r\n  MdOutlineAdminPanelSettings,\r\n  MdOutlinePassword,\r\n  MdOutlineTrackChanges,\r\n} from \"react-icons/md\";\r\nimport { TbAddressBook } from \"react-icons/tb\";\r\nimport { RxPerson } from \"react-icons/rx\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { server } from \"../../server\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ProfileSidebar = ({ setActive, active }) => {\r\n  const navigate = useNavigate();\r\n const {user} = useSelector((state) => state.user);\r\n  const logoutHandler = () => {\r\n    axios\r\n      .get(`${server}/user/logout`, { withCredentials: true })\r\n      .then((res) => {\r\n        toast.success(res.data.message);\r\n        window.location.reload(true);\r\n        navigate(\"/login\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data.message);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"w-full bg-white shadow-sm rounded-[10px] p-4 pt-8\">\r\n      <div\r\n        className=\"flex items-center cursor-pointer w-full mb-8\"\r\n        onClick={() => setActive(1)}\r\n      >\r\n        <RxPerson size={20} color={active === 1 ? \"red\" : \"\"} />\r\n        <span\r\n          className={`pl-3 ${\r\n            active === 1 ? \"text-[red]\" : \"\"\r\n          } 800px:block hidden`}\r\n        >\r\n          Profile\r\n        </span>\r\n      </div>\r\n      <div\r\n        className=\"flex items-center cursor-pointer w-full mb-8\"\r\n        onClick={() => setActive(2)}\r\n      >\r\n        <HiOutlineShoppingBag size={20} color={active === 2 ? \"red\" : \"\"} />\r\n        <span\r\n          className={`pl-3 ${\r\n            active === 2 ? \"text-[red]\" : \"\"\r\n          } 800px:block hidden`}\r\n        >\r\n          Orders\r\n        </span>\r\n      </div>\r\n      <div\r\n        className=\"flex items-center cursor-pointer w-full mb-8\"\r\n        onClick={() => setActive(3)}\r\n      >\r\n        <HiOutlineReceiptRefund size={20} color={active === 3 ? \"red\" : \"\"} />\r\n        <span\r\n          className={`pl-3 ${\r\n            active === 3 ? \"text-[red]\" : \"\"\r\n          } 800px:block hidden`}\r\n        >\r\n          Refunds\r\n        </span>\r\n      </div>\r\n\r\n      <div\r\n        className=\"flex items-center cursor-pointer w-full mb-8\"\r\n        onClick={() => setActive(4) || navigate(\"/inbox\")}\r\n      >\r\n        <AiOutlineMessage size={20} color={active === 4 ? \"red\" : \"\"} />\r\n        <span\r\n          className={`pl-3 ${\r\n            active === 4 ? \"text-[red]\" : \"\"\r\n          } 800px:block hidden`}\r\n        >\r\n          Inbox\r\n        </span>\r\n      </div>\r\n\r\n      <div\r\n        className=\"flex items-center cursor-pointer w-full mb-8\"\r\n        onClick={() => setActive(5)}\r\n      >\r\n        <MdOutlineTrackChanges size={20} color={active === 5 ? \"red\" : \"\"} />\r\n        <span\r\n          className={`pl-3 ${\r\n            active === 5 ? \"text-[red]\" : \"\"\r\n          } 800px:block hidden`}\r\n        >\r\n          Track Order\r\n        </span>\r\n      </div>\r\n\r\n      <div\r\n        className=\"flex items-center cursor-pointer w-full mb-8\"\r\n        onClick={() => setActive(6)}\r\n      >\r\n        <RiLockPasswordLine size={20} color={active === 6 ? \"red\" : \"\"} />\r\n        <span\r\n          className={`pl-3 ${\r\n            active === 6 ? \"text-[red]\" : \"\"\r\n          } 800px:block hidden`}\r\n        >\r\n          Change Password\r\n        </span>\r\n      </div>\r\n\r\n      <div\r\n        className=\"flex items-center cursor-pointer w-full mb-8\"\r\n        onClick={() => setActive(7)}\r\n      >\r\n        <TbAddressBook size={20} color={active === 7 ? \"red\" : \"\"} />\r\n        <span\r\n          className={`pl-3 ${\r\n            active === 7 ? \"text-[red]\" : \"\"\r\n          } 800px:block hidden`}\r\n        >\r\n          Address\r\n        </span>\r\n      </div>\r\n\r\n      {user && user?.role === \"Admin\" && (\r\n        <Link to=\"/admin/dashboard\">\r\n          <div\r\n            className=\"flex items-center cursor-pointer w-full mb-8\"\r\n            onClick={() => setActive(8)}\r\n          >\r\n            <MdOutlineAdminPanelSettings\r\n              size={20}\r\n              color={active === 7 ? \"red\" : \"\"}\r\n            />\r\n            <span\r\n              className={`pl-3 ${\r\n                active === 8 ? \"text-[red]\" : \"\"\r\n              } 800px:block hidden`}\r\n            >\r\n              Admin Dashboard\r\n            </span>\r\n          </div>\r\n        </Link>\r\n      )}\r\n      <div\r\n        className=\"single_item flex items-center cursor-pointer w-full mb-8\"\r\n        onClick={logoutHandler}\r\n      >\r\n        <AiOutlineLogin size={20} color={active === 8 ? \"red\" : \"\"} />\r\n        <span\r\n          className={`pl-3 ${\r\n            active === 8 ? \"text-[red]\" : \"\"\r\n          } 800px:block hidden`}\r\n        >\r\n          Log out\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileSidebar;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Profile\\TrackOrder.jsx",["692"],[],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getAllOrdersOfUser } from \"../../redux/actions/order\";\r\n\r\nconst TrackOrder = () => {\r\n  const { orders } = useSelector((state) => state.order);\r\n  const { user } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllOrdersOfUser(user._id));\r\n  }, [dispatch]);\r\n\r\n  const data = orders && orders.find((item) => item._id === id);\r\n\r\n  return (\r\n    <div className=\"w-full h-[80vh] flex justify-center items-center\">\r\n      {\" \"}\r\n      <>\r\n        {data && data?.status === \"Processing\" ? (\r\n          <h1 className=\"text-[20px]\">Your Order is processing in shop.</h1>\r\n        ) : data?.status === \"Transferred to delivery partner\" ? (\r\n          <h1 className=\"text-[20px]\">\r\n            Your Order is on the way for delivery partner.\r\n          </h1>\r\n        ) : data?.status === \"Shipping\" ? (\r\n          <h1 className=\"text-[20px]\">\r\n            Your Order is on the way with our delivery partner.\r\n          </h1>\r\n        ) : data?.status === \"Received\" ? (\r\n          <h1 className=\"text-[20px]\">\r\n            Your Order is in your city. Our Delivery man will deliver it.\r\n          </h1>\r\n        ) : data?.status === \"On the way\" ? (\r\n          <h1 className=\"text-[20px]\">\r\n            Our Delivery man is going to deliver your order.\r\n          </h1>\r\n        ) : data?.status === \"Delivered\" ? (\r\n          <h1 className=\"text-[20px]\">Your order is delivered!</h1>\r\n        ) : data?.status === \"Processing refund\" ? (\r\n          <h1 className=\"text-[20px]\">Your refund is processing!</h1>\r\n        ) : data?.status === \"Refund Success\" ? (\r\n          <h1 className=\"text-[20px]\">Your Refund is success!</h1>\r\n        ) : null}\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrackOrder;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Profile\\ProfileContent.jsx",["693","694","695","696","697","698","699","700"],[],"import React, { useState } from \"react\";\r\nimport {\r\n  AiOutlineArrowRight,\r\n  AiOutlineCamera,\r\n  AiOutlineDelete,\r\n} from \"react-icons/ai\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { server } from \"../../server\";\r\nimport styles from \"../../styles/styles\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MdTrackChanges } from \"react-icons/md\";\r\nimport { RxCross1 } from \"react-icons/rx\";\r\nimport {\r\n  deleteUserAddress,\r\n  loadUser,\r\n  updatUserAddress,\r\n  updateUserInformation,\r\n} from \"../../redux/actions/user\";\r\nimport { Country, State } from \"country-state-city\";\r\nimport { useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport { getAllOrdersOfUser } from \"../../redux/actions/order\";\r\n\r\nconst ProfileContent = ({ active }) => {\r\n  const { user, error, successMessage } = useSelector((state) => state.user);\r\n  const [name, setName] = useState(user && user.name);\r\n  const [email, setEmail] = useState(user && user.email);\r\n  const [phoneNumber, setPhoneNumber] = useState(user && user.phoneNumber);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [avatar, setAvatar] = useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      toast.error(error);\r\n      dispatch({ type: \"clearErrors\" });\r\n    }\r\n    if (successMessage) {\r\n      toast.success(successMessage);\r\n      dispatch({ type: \"clearMessages\" });\r\n    }\r\n  }, [error, successMessage]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUserInformation(name, email, phoneNumber, password));\r\n  };\r\n\r\n  const handleImage = async (e) => {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        setAvatar(reader.result);\r\n        axios\r\n          .put(\r\n            `${server}/user/update-avatar`,\r\n            { avatar: reader.result },\r\n            {\r\n              withCredentials: true,\r\n            }\r\n          )\r\n          .then((response) => {\r\n            dispatch(loadUser());\r\n            toast.success(\"avatar updated successfully!\");\r\n          })\r\n          .catch((error) => {\r\n            toast.error(error);\r\n          });\r\n      }\r\n    };\r\n\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      {/* profile */}\r\n      {active === 1 && (\r\n        <>\r\n          <div className=\"flex justify-center w-full\">\r\n            <div className=\"relative\">\r\n              <img\r\n                src={`${user?.avatar?.url}`}\r\n                className=\"w-[150px] h-[150px] rounded-full object-cover border-[3px] border-[#3ad132]\"\r\n                alt=\"\"\r\n              />\r\n              <div className=\"w-[30px] h-[30px] bg-[#E3E9EE] rounded-full flex items-center justify-center cursor-pointer absolute bottom-[5px] right-[5px]\">\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"image\"\r\n                  className=\"hidden\"\r\n                  onChange={handleImage}\r\n                />\r\n                <label htmlFor=\"image\">\r\n                  <AiOutlineCamera />\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <br />\r\n          <div className=\"w-full px-5\">\r\n            <form onSubmit={handleSubmit} aria-required={true}>\r\n              <div className=\"w-full 800px:flex block pb-3\">\r\n                <div className=\" w-[100%] 800px:w-[50%]\">\r\n                  <label className=\"block pb-2\">Full Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={`${styles.input} !w-[95%] mb-4 800px:mb-0`}\r\n                    required\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\" w-[100%] 800px:w-[50%]\">\r\n                  <label className=\"block pb-2\">Email Address</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={`${styles.input} !w-[95%] mb-1 800px:mb-0`}\r\n                    required\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"w-full 800px:flex block pb-3\">\r\n                <div className=\" w-[100%] 800px:w-[50%]\">\r\n                  <label className=\"block pb-2\">Phone Number</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className={`${styles.input} !w-[95%] mb-4 800px:mb-0`}\r\n                    required\r\n                    value={phoneNumber}\r\n                    onChange={(e) => setPhoneNumber(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\" w-[100%] 800px:w-[50%]\">\r\n                  <label className=\"block pb-2\">Enter your password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className={`${styles.input} !w-[95%] mb-4 800px:mb-0`}\r\n                    required\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <input\r\n                className={`w-[250px] h-[40px] border border-[#3a24db] text-center text-[#3a24db] rounded-[3px] mt-8 cursor-pointer`}\r\n                required\r\n                value=\"Update\"\r\n                type=\"submit\"\r\n              />\r\n            </form>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* order */}\r\n      {active === 2 && (\r\n        <div>\r\n          <AllOrders />\r\n        </div>\r\n      )}\r\n\r\n      {/* Refund */}\r\n      {active === 3 && (\r\n        <div>\r\n          <AllRefundOrders />\r\n        </div>\r\n      )}\r\n\r\n      {/* Track order */}\r\n      {active === 5 && (\r\n        <div>\r\n          <TrackOrder />\r\n        </div>\r\n      )}\r\n\r\n      {/* Change Password */}\r\n      {active === 6 && (\r\n        <div>\r\n          <ChangePassword />\r\n        </div>\r\n      )}\r\n\r\n      {/*  user Address */}\r\n      {active === 7 && (\r\n        <div>\r\n          <Address />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AllOrders = () => {\r\n  const { user } = useSelector((state) => state.user);\r\n  const { orders } = useSelector((state) => state.order);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllOrdersOfUser(user._id));\r\n  }, []);\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: \"Order ID\", minWidth: 150, flex: 0.7 },\r\n\r\n    {\r\n      field: \"status\",\r\n      headerName: \"Status\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n      cellClassName: (params) => {\r\n        return params.getValue(params.id, \"status\") === \"Delivered\"\r\n          ? \"greenColor\"\r\n          : \"redColor\";\r\n      },\r\n    },\r\n    {\r\n      field: \"itemsQty\",\r\n      headerName: \"Items Qty\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n    },\r\n\r\n    {\r\n      field: \"total\",\r\n      headerName: \"Total\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.8,\r\n    },\r\n\r\n    {\r\n      field: \" \",\r\n      flex: 1,\r\n      minWidth: 150,\r\n      headerName: \"\",\r\n      type: \"number\",\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Link to={`/user/order/${params.id}`}>\r\n              <Button>\r\n                <AiOutlineArrowRight size={20} />\r\n              </Button>\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const row = [];\r\n\r\n  orders &&\r\n    orders.forEach((item) => {\r\n      row.push({\r\n        id: item._id,\r\n        itemsQty: item.cart.length,\r\n        total: \"US$ \" + item.totalPrice,\r\n        status: item.status,\r\n      });\r\n    });\r\n\r\n  return (\r\n    <div className=\"pl-8 pt-1\">\r\n      <DataGrid\r\n        rows={row}\r\n        columns={columns}\r\n        pageSize={10}\r\n        disableSelectionOnClick\r\n        autoHeight\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AllRefundOrders = () => {\r\n  const { user } = useSelector((state) => state.user);\r\n  const { orders } = useSelector((state) => state.order);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllOrdersOfUser(user._id));\r\n  }, []);\r\n\r\n  const eligibleOrders =\r\n    orders && orders.filter((item) => item.status === \"Processing refund\");\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: \"Order ID\", minWidth: 150, flex: 0.7 },\r\n\r\n    {\r\n      field: \"status\",\r\n      headerName: \"Status\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n      cellClassName: (params) => {\r\n        return params.getValue(params.id, \"status\") === \"Delivered\"\r\n          ? \"greenColor\"\r\n          : \"redColor\";\r\n      },\r\n    },\r\n    {\r\n      field: \"itemsQty\",\r\n      headerName: \"Items Qty\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n    },\r\n\r\n    {\r\n      field: \"total\",\r\n      headerName: \"Total\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.8,\r\n    },\r\n\r\n    {\r\n      field: \" \",\r\n      flex: 1,\r\n      minWidth: 150,\r\n      headerName: \"\",\r\n      type: \"number\",\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Link to={`/user/order/${params.id}`}>\r\n              <Button>\r\n                <AiOutlineArrowRight size={20} />\r\n              </Button>\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const row = [];\r\n\r\n  eligibleOrders &&\r\n    eligibleOrders.forEach((item) => {\r\n      row.push({\r\n        id: item._id,\r\n        itemsQty: item.cart.length,\r\n        total: \"US$ \" + item.totalPrice,\r\n        status: item.status,\r\n      });\r\n    });\r\n\r\n  return (\r\n    <div className=\"pl-8 pt-1\">\r\n      <DataGrid\r\n        rows={row}\r\n        columns={columns}\r\n        pageSize={10}\r\n        autoHeight\r\n        disableSelectionOnClick\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TrackOrder = () => {\r\n  const { user } = useSelector((state) => state.user);\r\n  const { orders } = useSelector((state) => state.order);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllOrdersOfUser(user._id));\r\n  }, []);\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: \"Order ID\", minWidth: 150, flex: 0.7 },\r\n\r\n    {\r\n      field: \"status\",\r\n      headerName: \"Status\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n      cellClassName: (params) => {\r\n        return params.getValue(params.id, \"status\") === \"Delivered\"\r\n          ? \"greenColor\"\r\n          : \"redColor\";\r\n      },\r\n    },\r\n    {\r\n      field: \"itemsQty\",\r\n      headerName: \"Items Qty\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n    },\r\n\r\n    {\r\n      field: \"total\",\r\n      headerName: \"Total\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.8,\r\n    },\r\n\r\n    {\r\n      field: \" \",\r\n      flex: 1,\r\n      minWidth: 150,\r\n      headerName: \"\",\r\n      type: \"number\",\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Link to={`/user/track/order/${params.id}`}>\r\n              <Button>\r\n                <MdTrackChanges size={20} />\r\n              </Button>\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const row = [];\r\n\r\n  orders &&\r\n    orders.forEach((item) => {\r\n      row.push({\r\n        id: item._id,\r\n        itemsQty: item.cart.length,\r\n        total: \"US$ \" + item.totalPrice,\r\n        status: item.status,\r\n      });\r\n    });\r\n\r\n  return (\r\n    <div className=\"pl-8 pt-1\">\r\n      <DataGrid\r\n        rows={row}\r\n        columns={columns}\r\n        pageSize={10}\r\n        disableSelectionOnClick\r\n        autoHeight\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ChangePassword = () => {\r\n  const [oldPassword, setOldPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const passwordChangeHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    await axios\r\n      .put(\r\n        `${server}/user/update-user-password`,\r\n        { oldPassword, newPassword, confirmPassword },\r\n        { withCredentials: true }\r\n      )\r\n      .then((res) => {\r\n        toast.success(res.data.success);\r\n        setOldPassword(\"\");\r\n        setNewPassword(\"\");\r\n        setConfirmPassword(\"\");\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.response.data.message);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"w-full px-5\">\r\n      <h1 className=\"block text-[25px] text-center font-[600] text-[#000000ba] pb-2\">\r\n        Change Password\r\n      </h1>\r\n      <div className=\"w-full\">\r\n        <form\r\n          aria-required\r\n          onSubmit={passwordChangeHandler}\r\n          className=\"flex flex-col items-center\"\r\n        >\r\n          <div className=\" w-[100%] 800px:w-[50%] mt-5\">\r\n            <label className=\"block pb-2\">Enter your old password</label>\r\n            <input\r\n              type=\"password\"\r\n              className={`${styles.input} !w-[95%] mb-4 800px:mb-0`}\r\n              required\r\n              value={oldPassword}\r\n              onChange={(e) => setOldPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\" w-[100%] 800px:w-[50%] mt-2\">\r\n            <label className=\"block pb-2\">Enter your new password</label>\r\n            <input\r\n              type=\"password\"\r\n              className={`${styles.input} !w-[95%] mb-4 800px:mb-0`}\r\n              required\r\n              value={newPassword}\r\n              onChange={(e) => setNewPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\" w-[100%] 800px:w-[50%] mt-2\">\r\n            <label className=\"block pb-2\">Enter your confirm password</label>\r\n            <input\r\n              type=\"password\"\r\n              className={`${styles.input} !w-[95%] mb-4 800px:mb-0`}\r\n              required\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />\r\n            <input\r\n              className={`w-[95%] h-[40px] border border-[#3a24db] text-center text-[#3a24db] rounded-[3px] mt-8 cursor-pointer`}\r\n              required\r\n              value=\"Update\"\r\n              type=\"submit\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Address = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [country, setCountry] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [zipCode, setZipCode] = useState();\r\n  const [address1, setAddress1] = useState(\"\");\r\n  const [address2, setAddress2] = useState(\"\");\r\n  const [addressType, setAddressType] = useState(\"\");\r\n  const { user } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const addressTypeData = [\r\n    {\r\n      name: \"Default\",\r\n    },\r\n    {\r\n      name: \"Home\",\r\n    },\r\n    {\r\n      name: \"Office\",\r\n    },\r\n  ];\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (addressType === \"\" || country === \"\" || city === \"\") {\r\n      toast.error(\"Please fill all the fields!\");\r\n    } else {\r\n      dispatch(\r\n        updatUserAddress(\r\n          country,\r\n          city,\r\n          address1,\r\n          address2,\r\n          zipCode,\r\n          addressType\r\n        )\r\n      );\r\n      setOpen(false);\r\n      setCountry(\"\");\r\n      setCity(\"\");\r\n      setAddress1(\"\");\r\n      setAddress2(\"\");\r\n      setZipCode(null);\r\n      setAddressType(\"\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = (item) => {\r\n    const id = item._id;\r\n    dispatch(deleteUserAddress(id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full px-5\">\r\n      {open && (\r\n        <div className=\"fixed w-full h-screen bg-[#0000004b] top-0 left-0 flex items-center justify-center \">\r\n          <div className=\"w-[35%] h-[80vh] bg-white rounded shadow relative overflow-y-scroll\">\r\n            <div className=\"w-full flex justify-end p-3\">\r\n              <RxCross1\r\n                size={30}\r\n                className=\"cursor-pointer\"\r\n                onClick={() => setOpen(false)}\r\n              />\r\n            </div>\r\n            <h1 className=\"text-center text-[25px] font-Poppins\">\r\n              Add New Address\r\n            </h1>\r\n            <div className=\"w-full\">\r\n              <form aria-required onSubmit={handleSubmit} className=\"w-full\">\r\n                <div className=\"w-full block p-4\">\r\n                  <div className=\"w-full pb-2\">\r\n                    <label className=\"block pb-2\">Country</label>\r\n                    <select\r\n                      name=\"\"\r\n                      id=\"\"\r\n                      value={country}\r\n                      onChange={(e) => setCountry(e.target.value)}\r\n                      className=\"w-[95%] border h-[40px] rounded-[5px]\"\r\n                    >\r\n                      <option value=\"\" className=\"block border pb-2\">\r\n                        choose your country\r\n                      </option>\r\n                      {Country &&\r\n                        Country.getAllCountries().map((item) => (\r\n                          <option\r\n                            className=\"block pb-2\"\r\n                            key={item.isoCode}\r\n                            value={item.isoCode}\r\n                          >\r\n                            {item.name}\r\n                          </option>\r\n                        ))}\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"w-full pb-2\">\r\n                    <label className=\"block pb-2\">Choose your City</label>\r\n                    <select\r\n                      name=\"\"\r\n                      id=\"\"\r\n                      value={city}\r\n                      onChange={(e) => setCity(e.target.value)}\r\n                      className=\"w-[95%] border h-[40px] rounded-[5px]\"\r\n                    >\r\n                      <option value=\"\" className=\"block border pb-2\">\r\n                        choose your city\r\n                      </option>\r\n                      {State &&\r\n                        State.getStatesOfCountry(country).map((item) => (\r\n                          <option\r\n                            className=\"block pb-2\"\r\n                            key={item.isoCode}\r\n                            value={item.isoCode}\r\n                          >\r\n                            {item.name}\r\n                          </option>\r\n                        ))}\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"w-full pb-2\">\r\n                    <label className=\"block pb-2\">Address 1</label>\r\n                    <input\r\n                      type=\"address\"\r\n                      className={`${styles.input}`}\r\n                      required\r\n                      value={address1}\r\n                      onChange={(e) => setAddress1(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"w-full pb-2\">\r\n                    <label className=\"block pb-2\">Address 2</label>\r\n                    <input\r\n                      type=\"address\"\r\n                      className={`${styles.input}`}\r\n                      required\r\n                      value={address2}\r\n                      onChange={(e) => setAddress2(e.target.value)}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"w-full pb-2\">\r\n                    <label className=\"block pb-2\">Zip Code</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      className={`${styles.input}`}\r\n                      required\r\n                      value={zipCode}\r\n                      onChange={(e) => setZipCode(e.target.value)}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"w-full pb-2\">\r\n                    <label className=\"block pb-2\">Address Type</label>\r\n                    <select\r\n                      name=\"\"\r\n                      id=\"\"\r\n                      value={addressType}\r\n                      onChange={(e) => setAddressType(e.target.value)}\r\n                      className=\"w-[95%] border h-[40px] rounded-[5px]\"\r\n                    >\r\n                      <option value=\"\" className=\"block border pb-2\">\r\n                        Choose your Address Type\r\n                      </option>\r\n                      {addressTypeData &&\r\n                        addressTypeData.map((item) => (\r\n                          <option\r\n                            className=\"block pb-2\"\r\n                            key={item.name}\r\n                            value={item.name}\r\n                          >\r\n                            {item.name}\r\n                          </option>\r\n                        ))}\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\" w-full pb-2\">\r\n                    <input\r\n                      type=\"submit\"\r\n                      className={`${styles.input} mt-5 cursor-pointer`}\r\n                      required\r\n                      readOnly\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"flex w-full items-center justify-between\">\r\n        <h1 className=\"text-[25px] font-[600] text-[#000000ba] pb-2\">\r\n          My Addresses\r\n        </h1>\r\n        <div\r\n          className={`${styles.button} !rounded-md`}\r\n          onClick={() => setOpen(true)}\r\n        >\r\n          <span className=\"text-[#fff]\">Add New</span>\r\n        </div>\r\n      </div>\r\n      <br />\r\n      {user &&\r\n        user.addresses.map((item, index) => (\r\n          <div\r\n            className=\"w-full bg-white h-min 800px:h-[70px] rounded-[4px] flex items-center px-3 shadow justify-between pr-10 mb-5\"\r\n            key={index}\r\n          >\r\n            <div className=\"flex items-center\">\r\n              <h5 className=\"pl-5 font-[600]\">{item.addressType}</h5>\r\n            </div>\r\n            <div className=\"pl-8 flex items-center\">\r\n              <h6 className=\"text-[12px] 800px:text-[unset]\">\r\n                {item.address1} {item.address2}\r\n              </h6>\r\n            </div>\r\n            <div className=\"pl-8 flex items-center\">\r\n              <h6 className=\"text-[12px] 800px:text-[unset]\">\r\n                {user && user.phoneNumber}\r\n              </h6>\r\n            </div>\r\n            <div className=\"min-w-[10%] flex items-center justify-between pl-8\">\r\n              <AiOutlineDelete\r\n                size={25}\r\n                className=\"cursor-pointer\"\r\n                onClick={() => handleDelete(item)}\r\n              />\r\n            </div>\r\n          </div>\r\n        ))}\r\n\r\n      {user && user.addresses.length === 0 && (\r\n        <h5 className=\"text-center pt-8 text-[18px]\">\r\n          You not have any saved address!\r\n        </h5>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileContent;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Payment\\Payment.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Admin\\AllUsers.jsx",["701"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getAllUsers } from \"../../redux/actions/user\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { AiOutlineDelete } from \"react-icons/ai\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport styles from \"../../styles/styles\";\r\nimport { RxCross1 } from \"react-icons/rx\";\r\nimport axios from \"axios\";\r\nimport { server } from \"../../server\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst AllUsers = () => {\r\n  const dispatch = useDispatch();\r\n  const { users } = useSelector((state) => state.user);\r\n  const [open, setOpen] = useState(false);\r\n  const [userId, setUserId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllUsers());\r\n  }, [dispatch]);\r\n\r\n  const handleDelete = async (id) => {\r\n    await axios\r\n    .delete(`${server}/user/delete-user/${id}`, { withCredentials: true })\r\n    .then((res) => {\r\n      toast.success(res.data.message);\r\n    });\r\n\r\n  dispatch(getAllUsers());\r\n  };\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: \"User ID\", minWidth: 150, flex: 0.7 },\r\n\r\n    {\r\n      field: \"name\",\r\n      headerName: \"name\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n    },\r\n    {\r\n      field: \"email\",\r\n      headerName: \"Email\",\r\n      type: \"text\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n    },\r\n    {\r\n      field: \"role\",\r\n      headerName: \"User Role\",\r\n      type: \"text\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n    },\r\n\r\n    {\r\n      field: \"joinedAt\",\r\n      headerName: \"joinedAt\",\r\n      type: \"text\",\r\n      minWidth: 130,\r\n      flex: 0.8,\r\n    },\r\n\r\n    {\r\n      field: \" \",\r\n      flex: 1,\r\n      minWidth: 150,\r\n      headerName: \"Delete User\",\r\n      type: \"number\",\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Button onClick={() => setUserId(params.id) || setOpen(true)}>\r\n              <AiOutlineDelete size={20} />\r\n            </Button>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const row = [];\r\n  users &&\r\n    users.forEach((item) => {\r\n      row.push({\r\n        id: item._id,\r\n        name: item.name,\r\n        email: item.email,\r\n        role: item.role,\r\n        joinedAt: item.createdAt.slice(0, 10),\r\n      });\r\n    });\r\n\r\n  return (\r\n    <div className=\"w-full flex justify-center pt-5\">\r\n      <div className=\"w-[97%]\">\r\n        <h3 className=\"text-[22px] font-Poppins pb-2\">All Users</h3>\r\n        <div className=\"w-full min-h-[45vh] bg-white rounded\">\r\n          <DataGrid\r\n            rows={row}\r\n            columns={columns}\r\n            pageSize={10}\r\n            disableSelectionOnClick\r\n            autoHeight\r\n          />\r\n        </div>\r\n        {open && (\r\n          <div className=\"w-full fixed top-0 left-0 z-[999] bg-[#00000039] flex items-center justify-center h-screen\">\r\n            <div className=\"w-[95%] 800px:w-[40%] min-h-[20vh] bg-white rounded shadow p-5\">\r\n              <div className=\"w-full flex justify-end cursor-pointer\">\r\n                <RxCross1 size={25} onClick={() => setOpen(false)} />\r\n              </div>\r\n              <h3 className=\"text-[25px] text-center py-5 font-Poppins text-[#000000cb]\">\r\n                Are you sure you wanna delete this user?\r\n              </h3>\r\n              <div className=\"w-full flex items-center justify-center\">\r\n                <div\r\n                  className={`${styles.button} text-white text-[18px] !h-[42px] mr-4`}\r\n                  onClick={() => setOpen(false)}\r\n                >\r\n                  cancel\r\n                </div>\r\n                <div\r\n                  className={`${styles.button} text-white text-[18px] !h-[42px] ml-4`}\r\n                  onClick={() =>  setOpen(false) || handleDelete(userId)}\r\n                >\r\n                  confirm\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllUsers;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Admin\\AllEvents.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Admin\\AdminDashboardMain.jsx",["702","703","704","705"],[],"import React, { useEffect, useState } from \"react\";\r\nimport styles from \"../../styles/styles\";\r\nimport { AiOutlineArrowRight, AiOutlineMoneyCollect } from \"react-icons/ai\";\r\nimport { MdBorderClear } from \"react-icons/md\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllOrdersOfAdmin } from \"../../redux/actions/order\";\r\nimport Loader from \"../Layout/Loader\";\r\nimport { getAllSellers } from \"../../redux/actions/sellers\";\r\n\r\nconst AdminDashboardMain = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { adminOrders,adminOrderLoading } = useSelector((state) => state.order);\r\n  const { sellers } = useSelector((state) => state.seller);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllOrdersOfAdmin());\r\n    dispatch(getAllSellers());\r\n  }, []);\r\n\r\n   const adminEarning = adminOrders && adminOrders.reduce((acc,item) => acc + item.totalPrice * .10, 0);\r\n\r\n\r\n   const adminBalance = adminEarning?.toFixed(2);\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: \"Order ID\", minWidth: 150, flex: 0.7 },\r\n\r\n    {\r\n      field: \"status\",\r\n      headerName: \"Status\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n      cellClassName: (params) => {\r\n        return params.getValue(params.id, \"status\") === \"Delivered\"\r\n          ? \"greenColor\"\r\n          : \"redColor\";\r\n      },\r\n    },\r\n    {\r\n      field: \"itemsQty\",\r\n      headerName: \"Items Qty\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n    },\r\n\r\n    {\r\n      field: \"total\",\r\n      headerName: \"Total\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.8,\r\n    },\r\n    {\r\n      field: \"createdAt\",\r\n      headerName: \"Order Date\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.8,\r\n    },\r\n  ];\r\n\r\n  const row = [];\r\n  adminOrders &&\r\n  adminOrders.forEach((item) => {\r\n      row.push({\r\n        id: item._id,\r\n        itemsQty: item?.cart?.reduce((acc, item) => acc + item.qty, 0),\r\n        total: item?.totalPrice + \" $\",\r\n        status: item?.status,\r\n        createdAt: item?.createdAt.slice(0,10),\r\n      });\r\n    });\r\n\r\n  return (\r\n   <>\r\n    {\r\n      adminOrderLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"w-full p-4\">\r\n        <h3 className=\"text-[22px] font-Poppins pb-2\">Overview</h3>\r\n        <div className=\"w-full block 800px:flex items-center justify-between\">\r\n          <div className=\"w-full mb-4 800px:w-[30%] min-h-[20vh] bg-white shadow rounded px-2 py-5\">\r\n            <div className=\"flex items-center\">\r\n              <AiOutlineMoneyCollect\r\n                size={30}\r\n                className=\"mr-2\"\r\n                fill=\"#00000085\"\r\n              />\r\n              <h3\r\n                className={`${styles.productTitle} !text-[18px] leading-5 !font-[400] text-[#00000085]`}\r\n              >\r\n                Total Earning\r\n              </h3>\r\n            </div>\r\n            <h5 className=\"pt-2 pl-[36px] text-[22px] font-[500]\">$ {adminBalance}</h5>\r\n          </div>\r\n  \r\n          <div className=\"w-full mb-4 800px:w-[30%] min-h-[20vh] bg-white shadow rounded px-2 py-5\">\r\n            <div className=\"flex items-center\">\r\n              <MdBorderClear size={30} className=\"mr-2\" fill=\"#00000085\" />\r\n              <h3\r\n                className={`${styles.productTitle} !text-[18px] leading-5 !font-[400] text-[#00000085]`}\r\n              >\r\n                All Sellers\r\n              </h3>\r\n            </div>\r\n            <h5 className=\"pt-2 pl-[36px] text-[22px] font-[500]\">{sellers && sellers.length}</h5>\r\n            <Link to=\"/admin-sellers\">\r\n              <h5 className=\"pt-4 pl-2 text-[#077f9c]\">View Sellers</h5>\r\n            </Link>\r\n          </div>\r\n  \r\n          <div className=\"w-full mb-4 800px:w-[30%] min-h-[20vh] bg-white shadow rounded px-2 py-5\">\r\n            <div className=\"flex items-center\">\r\n              <AiOutlineMoneyCollect\r\n                size={30}\r\n                className=\"mr-2\"\r\n                fill=\"#00000085\"\r\n              />\r\n              <h3\r\n                className={`${styles.productTitle} !text-[18px] leading-5 !font-[400] text-[#00000085]`}\r\n              >\r\n                All Orders\r\n              </h3>\r\n            </div>\r\n            <h5 className=\"pt-2 pl-[36px] text-[22px] font-[500]\">{adminOrders && adminOrders.length}</h5>\r\n            <Link to=\"/admin-orders\">\r\n              <h5 className=\"pt-4 pl-2 text-[#077f9c]\">View Orders</h5>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n  \r\n        <br />\r\n        <h3 className=\"text-[22px] font-Poppins pb-2\">Latest Orders</h3>\r\n        <div className=\"w-full min-h-[45vh] bg-white rounded\">\r\n          <DataGrid\r\n            rows={row}\r\n            columns={columns}\r\n            pageSize={4}\r\n            disableSelectionOnClick\r\n            autoHeight\r\n          />\r\n        </div>\r\n      </div>\r\n      )\r\n    }\r\n   </>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardMain;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\DashboardHero.jsx",["706","707"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { AiOutlineArrowRight, AiOutlineMoneyCollect } from \"react-icons/ai\";\r\nimport styles from \"../../styles/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MdBorderClear } from \"react-icons/md\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllOrdersOfShop } from \"../../redux/actions/order\";\r\nimport { getAllProductsShop } from \"../../redux/actions/product\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\n\r\nconst DashboardHero = () => {\r\n  const dispatch = useDispatch();\r\n  const { orders } = useSelector((state) => state.order);\r\n  const { seller } = useSelector((state) => state.seller);\r\n  const { products } = useSelector((state) => state.products);\r\n\r\n  useEffect(() => {\r\n     dispatch(getAllOrdersOfShop(seller._id));\r\n     dispatch(getAllProductsShop(seller._id));\r\n  }, [dispatch]);\r\n\r\n  const availableBalance = seller?.availableBalance.toFixed(2);\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: \"Order ID\", minWidth: 150, flex: 0.7 },\r\n\r\n    {\r\n      field: \"status\",\r\n      headerName: \"Status\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n      cellClassName: (params) => {\r\n        return params.getValue(params.id, \"status\") === \"Delivered\"\r\n          ? \"greenColor\"\r\n          : \"redColor\";\r\n      },\r\n    },\r\n    {\r\n      field: \"itemsQty\",\r\n      headerName: \"Items Qty\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n    },\r\n\r\n    {\r\n      field: \"total\",\r\n      headerName: \"Total\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.8,\r\n    },\r\n\r\n    {\r\n      field: \" \",\r\n      flex: 1,\r\n      minWidth: 150,\r\n      headerName: \"\",\r\n      type: \"number\",\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Link to={`/dashboard/order/${params.id}`}>\r\n              <Button>\r\n                <AiOutlineArrowRight size={20} />\r\n              </Button>\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const row = [];\r\n\r\n  orders && orders.forEach((item) => {\r\n    row.push({\r\n        id: item._id,\r\n        itemsQty: item.cart.reduce((acc, item) => acc + item.qty, 0),\r\n        total: \"US$ \" + item.totalPrice,\r\n        status: item.status,\r\n      });\r\n  });\r\n  return (\r\n    <div className=\"w-full p-8\">\r\n      <h3 className=\"text-[22px] font-Poppins pb-2\">Overview</h3>\r\n      <div className=\"w-full block 800px:flex items-center justify-between\">\r\n        <div className=\"w-full mb-4 800px:w-[30%] min-h-[20vh] bg-white shadow rounded px-2 py-5\">\r\n          <div className=\"flex items-center\">\r\n            <AiOutlineMoneyCollect\r\n              size={30}\r\n              className=\"mr-2\"\r\n              fill=\"#00000085\"\r\n            />\r\n            <h3\r\n              className={`${styles.productTitle} !text-[18px] leading-5 !font-[400] text-[#00000085]`}\r\n            >\r\n              Account Balance{\" \"}\r\n              <span className=\"text-[16px]\">(with 10% service charge)</span>\r\n            </h3>\r\n          </div>\r\n          <h5 className=\"pt-2 pl-[36px] text-[22px] font-[500]\">${availableBalance}</h5>\r\n          <Link to=\"/dashboard-withdraw-money\">\r\n            <h5 className=\"pt-4 pl-[2] text-[#077f9c]\">Withdraw Money</h5>\r\n          </Link>\r\n        </div>\r\n\r\n        <div className=\"w-full mb-4 800px:w-[30%] min-h-[20vh] bg-white shadow rounded px-2 py-5\">\r\n          <div className=\"flex items-center\">\r\n            <MdBorderClear size={30} className=\"mr-2\" fill=\"#00000085\" />\r\n            <h3\r\n              className={`${styles.productTitle} !text-[18px] leading-5 !font-[400] text-[#00000085]`}\r\n            >\r\n              All Orders\r\n            </h3>\r\n          </div>\r\n          <h5 className=\"pt-2 pl-[36px] text-[22px] font-[500]\">{orders && orders.length}</h5>\r\n          <Link to=\"/dashboard-orders\">\r\n            <h5 className=\"pt-4 pl-2 text-[#077f9c]\">View Orders</h5>\r\n          </Link>\r\n        </div>\r\n\r\n        <div className=\"w-full mb-4 800px:w-[30%] min-h-[20vh] bg-white shadow rounded px-2 py-5\">\r\n          <div className=\"flex items-center\">\r\n            <AiOutlineMoneyCollect\r\n              size={30}\r\n              className=\"mr-2\"\r\n              fill=\"#00000085\"\r\n            />\r\n            <h3\r\n              className={`${styles.productTitle} !text-[18px] leading-5 !font-[400] text-[#00000085]`}\r\n            >\r\n              All Products\r\n            </h3>\r\n          </div>\r\n          <h5 className=\"pt-2 pl-[36px] text-[22px] font-[500]\">{products && products.length}</h5>\r\n          <Link to=\"/dashboard-products\">\r\n            <h5 className=\"pt-4 pl-2 text-[#077f9c]\">View Products</h5>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <h3 className=\"text-[22px] font-Poppins pb-2\">Latest Orders</h3>\r\n      <div className=\"w-full min-h-[45vh] bg-white rounded\">\r\n      <DataGrid\r\n        rows={row}\r\n        columns={columns}\r\n        pageSize={10}\r\n        disableSelectionOnClick\r\n        autoHeight\r\n      />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardHero;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Admin\\AllProducts.jsx",["708","709","710","711","712","713"],[],"import { Button } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport React, { useEffect } from \"react\";\r\nimport { AiOutlineDelete, AiOutlineEye } from \"react-icons/ai\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getAllProductsShop } from \"../../redux/actions/product\";\r\nimport { deleteProduct } from \"../../redux/actions/product\";\r\nimport Loader from \"../Layout/Loader\";\r\nimport axios from \"axios\";\r\nimport { server } from \"../../server\";\r\nimport { useState } from \"react\";\r\n\r\nconst AllProducts = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(`${server}/product/admin-all-products`, {withCredentials: true}).then((res) => {\r\n        setData(res.data.products);\r\n    })\r\n  }, []);\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: \"Product Id\", minWidth: 150, flex: 0.7 },\r\n    {\r\n      field: \"name\",\r\n      headerName: \"Name\",\r\n      minWidth: 180,\r\n      flex: 1.4,\r\n    },\r\n    {\r\n      field: \"price\",\r\n      headerName: \"Price\",\r\n      minWidth: 100,\r\n      flex: 0.6,\r\n    },\r\n    {\r\n      field: \"Stock\",\r\n      headerName: \"Stock\",\r\n      type: \"number\",\r\n      minWidth: 80,\r\n      flex: 0.5,\r\n    },\r\n\r\n    {\r\n      field: \"sold\",\r\n      headerName: \"Sold out\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.6,\r\n    },\r\n    {\r\n      field: \"Preview\",\r\n      flex: 0.8,\r\n      minWidth: 100,\r\n      headerName: \"\",\r\n      type: \"number\",\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Link to={`/product/${params.id}`}>\r\n              <Button>\r\n                <AiOutlineEye size={20} />\r\n              </Button>\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const row = [];\r\n\r\n  data &&\r\n  data.forEach((item) => {\r\n      row.push({\r\n        id: item._id,\r\n        name: item.name,\r\n        price: \"US$ \" + item.discountPrice,\r\n        Stock: item.stock,\r\n        sold: item?.sold_out,\r\n      });\r\n    });\r\n\r\n  return (\r\n    <>\r\n        <div className=\"w-full mx-8 pt-1 mt-10 bg-white\">\r\n          <DataGrid\r\n            rows={row}\r\n            columns={columns}\r\n            pageSize={10}\r\n            disableSelectionOnClick\r\n            autoHeight\r\n          />\r\n        </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllProducts;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Admin\\AllSellers.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Admin\\AllWithdraw.jsx",["714"],[],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { server } from \"../../server\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { BsPencil } from \"react-icons/bs\";\r\nimport { RxCross1 } from \"react-icons/rx\";\r\nimport styles from \"../../styles/styles\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst AllWithdraw = () => {\r\n  const [data, setData] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [withdrawData, setWithdrawData] = useState();\r\n  const [withdrawStatus,setWithdrawStatus] = useState('Processing');\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${server}/withdraw/get-all-withdraw-request`, {\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        setData(res.data.withdraws);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data.message);\r\n      });\r\n  }, []);\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: \"Withdraw Id\", minWidth: 150, flex: 0.7 },\r\n    {\r\n      field: \"name\",\r\n      headerName: \"Shop Name\",\r\n      minWidth: 180,\r\n      flex: 1.4,\r\n    },\r\n    {\r\n      field: \"shopId\",\r\n      headerName: \"Shop Id\",\r\n      minWidth: 180,\r\n      flex: 1.4,\r\n    },\r\n    {\r\n      field: \"amount\",\r\n      headerName: \"Amount\",\r\n      minWidth: 100,\r\n      flex: 0.6,\r\n    },\r\n    {\r\n      field: \"status\",\r\n      headerName: \"status\",\r\n      type: \"text\",\r\n      minWidth: 80,\r\n      flex: 0.5,\r\n    },\r\n    {\r\n      field: \"createdAt\",\r\n      headerName: \"Request given at\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.6,\r\n    },\r\n    {\r\n      field: \" \",\r\n      headerName: \"Update Status\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.6,\r\n      renderCell: (params) => {\r\n\r\n        return (\r\n          <BsPencil\r\n            size={20}\r\n            className={`${params.row.status !== \"Processing\" ? 'hidden' : '' } mr-5 cursor-pointer`}\r\n            onClick={() => setOpen(true) || setWithdrawData(params.row)}\r\n          />\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const handleSubmit = async () => {\r\n    await axios\r\n      .put(`${server}/withdraw/update-withdraw-request/${withdrawData.id}`,{\r\n        sellerId: withdrawData.shopId,\r\n      },{withCredentials: true})\r\n      .then((res) => {\r\n        toast.success(\"Withdraw request updated successfully!\");\r\n        setData(res.data.withdraws);\r\n        setOpen(false);\r\n      });\r\n  };\r\n\r\n  const row = [];\r\n\r\n  data &&\r\n    data.forEach((item) => {\r\n      row.push({\r\n        id: item._id,\r\n        shopId: item.seller._id,\r\n        name: item.seller.name,\r\n        amount: \"US$ \" + item.amount,\r\n        status: item.status,\r\n        createdAt: item.createdAt.slice(0, 10),\r\n      });\r\n    });\r\n  return (\r\n    <div className=\"w-full flex items-center pt-5 justify-center\">\r\n      <div className=\"w-[95%] bg-white\">\r\n        <DataGrid\r\n          rows={row}\r\n          columns={columns}\r\n          pageSize={10}\r\n          disableSelectionOnClick\r\n          autoHeight\r\n        />\r\n      </div>\r\n      {open && (\r\n        <div className=\"w-full fixed h-screen top-0 left-0 bg-[#00000031] z-[9999] flex items-center justify-center\">\r\n          <div className=\"w-[50%] min-h-[40vh] bg-white rounded shadow p-4\">\r\n            <div className=\"flex justify-end w-full\">\r\n              <RxCross1 size={25} onClick={() => setOpen(false)} />\r\n            </div>\r\n            <h1 className=\"text-[25px] text-center font-Poppins\">\r\n              Update Withdraw status\r\n            </h1>\r\n            <br />\r\n            <select\r\n              name=\"\"\r\n              id=\"\"\r\n              onChange={(e) => setWithdrawStatus(e.target.value)}\r\n              className=\"w-[200px] h-[35px] border rounded\"\r\n            >\r\n              <option value={withdrawStatus}>{withdrawData.status}</option>\r\n              <option value={withdrawStatus}>Succeed</option>\r\n            </select>\r\n            <button\r\n              type=\"submit\"\r\n              className={`block ${styles.button} text-white !h-[42px] mt-4 text-[18px]`}\r\n              onClick={handleSubmit}\r\n            >\r\n              Update\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllWithdraw;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\CreateEvent.jsx",["715"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { categoriesData } from \"../../static/data\";\r\nimport { toast } from \"react-toastify\";\r\nimport { createevent } from \"../../redux/actions/event\";\r\n\r\nconst CreateEvent = () => {\r\n  const { seller } = useSelector((state) => state.seller);\r\n  const { success, error } = useSelector((state) => state.events);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const [images, setImages] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [tags, setTags] = useState(\"\");\r\n  const [originalPrice, setOriginalPrice] = useState();\r\n  const [discountPrice, setDiscountPrice] = useState();\r\n  const [stock, setStock] = useState();\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n\r\n  const handleStartDateChange = (e) => {\r\n    const startDate = new Date(e.target.value);\r\n    const minEndDate = new Date(startDate.getTime() + 3 * 24 * 60 * 60 * 1000);\r\n    setStartDate(startDate);\r\n    setEndDate(null);\r\n    document.getElementById(\"end-date\").min = minEndDate.toISOString.slice(\r\n      0,\r\n      10\r\n    );\r\n  };\r\n\r\n  const handleEndDateChange = (e) => {\r\n    const endDate = new Date(e.target.value);\r\n    setEndDate(endDate);\r\n  };\r\n\r\n  const today = new Date().toISOString().slice(0, 10);\r\n\r\n  const minEndDate = startDate\r\n    ? new Date(startDate.getTime() + 3 * 24 * 60 * 60 * 1000)\r\n        .toISOString()\r\n        .slice(0, 10)\r\n    : \"\";\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      toast.error(error);\r\n    }\r\n    if (success) {\r\n      toast.success(\"Event created successfully!\");\r\n      navigate(\"/dashboard-events\");\r\n      window.location.reload();\r\n    }\r\n  }, [dispatch, error, success]);\r\n\r\n  const handleImageChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n\r\n    setImages([]);\r\n\r\n    files.forEach((file) => {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = () => {\r\n        if (reader.readyState === 2) {\r\n          setImages((old) => [...old, reader.result]);\r\n        }\r\n      };\r\n      reader.readAsDataURL(file);\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newForm = new FormData();\r\n\r\n    images.forEach((image) => {\r\n      newForm.append(\"images\", image);\r\n    });\r\n    const data = {\r\n      name,\r\n      description,\r\n      category,\r\n      tags,\r\n      originalPrice,\r\n      discountPrice,\r\n      stock,\r\n      images,\r\n      shopId: seller._id,\r\n      start_Date: startDate?.toISOString(),\r\n      Finish_Date: endDate?.toISOString(),\r\n    };\r\n    dispatch(createevent(data));\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-[90%] 800px:w-[50%] bg-white  shadow h-[80vh] rounded-[4px] p-3 overflow-y-scroll\">\r\n      <h5 className=\"text-[30px] font-Poppins text-center\">Create Event</h5>\r\n      {/* create event form */}\r\n      <form onSubmit={handleSubmit}>\r\n        <br />\r\n        <div>\r\n          <label className=\"pb-2\">\r\n            Name <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n            onChange={(e) => setName(e.target.value)}\r\n            placeholder=\"Enter your event product name...\"\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label className=\"pb-2\">\r\n            Description <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <textarea\r\n            cols=\"30\"\r\n            required\r\n            rows=\"8\"\r\n            type=\"text\"\r\n            name=\"description\"\r\n            value={description}\r\n            className=\"mt-2 appearance-none block w-full pt-2 px-3 border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            placeholder=\"Enter your event product description...\"\r\n          ></textarea>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label className=\"pb-2\">\r\n            Category <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <select\r\n            className=\"w-full mt-2 border h-[35px] rounded-[5px]\"\r\n            value={category}\r\n            onChange={(e) => setCategory(e.target.value)}\r\n          >\r\n            <option value=\"Choose a category\">Choose a category</option>\r\n            {categoriesData &&\r\n              categoriesData.map((i) => (\r\n                <option value={i.title} key={i.title}>\r\n                  {i.title}\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label className=\"pb-2\">Tags</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"tags\"\r\n            value={tags}\r\n            className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n            onChange={(e) => setTags(e.target.value)}\r\n            placeholder=\"Enter your event product tags...\"\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label className=\"pb-2\">Original Price</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"price\"\r\n            value={originalPrice}\r\n            className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n            onChange={(e) => setOriginalPrice(e.target.value)}\r\n            placeholder=\"Enter your event product price...\"\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label className=\"pb-2\">\r\n            Price (With Discount) <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"price\"\r\n            value={discountPrice}\r\n            className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n            onChange={(e) => setDiscountPrice(e.target.value)}\r\n            placeholder=\"Enter your event product price with discount...\"\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label className=\"pb-2\">\r\n            Product Stock <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"price\"\r\n            value={stock}\r\n            className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n            onChange={(e) => setStock(e.target.value)}\r\n            placeholder=\"Enter your event product stock...\"\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label className=\"pb-2\">\r\n            Event Start Date <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"price\"\r\n            id=\"start-date\"\r\n            value={startDate ? startDate.toISOString().slice(0, 10) : \"\"}\r\n            className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n            onChange={handleStartDateChange}\r\n            min={today}\r\n            placeholder=\"Enter your event product stock...\"\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label className=\"pb-2\">\r\n            Event End Date <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"price\"\r\n            id=\"start-date\"\r\n            value={endDate ? endDate.toISOString().slice(0, 10) : \"\"}\r\n            className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n            onChange={handleEndDateChange}\r\n            min={minEndDate}\r\n            placeholder=\"Enter your event product stock...\"\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label className=\"pb-2\">\r\n            Upload Images <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            name=\"\"\r\n            id=\"upload\"\r\n            className=\"hidden\"\r\n            multiple\r\n            onChange={handleImageChange}\r\n          />\r\n          <div className=\"w-full flex items-center flex-wrap\">\r\n            <label htmlFor=\"upload\">\r\n              <AiOutlinePlusCircle size={30} className=\"mt-3\" color=\"#555\" />\r\n            </label>\r\n            {images &&\r\n              images.map((i) => (\r\n                <img\r\n                  src={i}\r\n                  key={i}\r\n                  alt=\"\"\r\n                  className=\"h-[120px] w-[120px] object-cover m-2\"\r\n                />\r\n              ))}\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Create\"\r\n              className=\"mt-2 cursor-pointer appearance-none text-center block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateEvent;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Admin\\Layout\\AdminSideBar.jsx",["716"],[],"import React from \"react\";\r\nimport { FiShoppingBag } from \"react-icons/fi\";\r\nimport {GrWorkshop} from \"react-icons/gr\";\r\nimport { RxDashboard } from \"react-icons/rx\";\r\nimport { CiMoneyBill, CiSettings } from \"react-icons/ci\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HiOutlineUserGroup } from \"react-icons/hi\";\r\nimport { BsHandbag } from \"react-icons/bs\";\r\nimport { MdOutlineLocalOffer } from \"react-icons/md\";\r\nimport { AiOutlineSetting } from \"react-icons/ai\";\r\n\r\nconst AdminSideBar = ({ active }) => {\r\n  return (\r\n    <div className=\"w-full h-[90vh] bg-white shadow-sm overflow-y-scroll sticky top-0 left-0 z-10\">\r\n      {/* single item */}\r\n      <div className=\"w-full flex items-center p-4\">\r\n        <Link to=\"/admin/dashboard\" className=\"w-full flex items-center\">\r\n          <RxDashboard\r\n            size={30}\r\n            color={`${active === 1 ? \"crimson\" : \"#555\"}`}\r\n          />\r\n          <h5\r\n            className={`hidden 800px:block pl-2 text-[18px] font-[400] ${\r\n              active === 1 ? \"text-[crimson]\" : \"text-[#555]\"\r\n            }`}\r\n          >\r\n            Dashboard\r\n          </h5>\r\n        </Link>\r\n      </div>\r\n\r\n      <div className=\"w-full flex items-center p-4\">\r\n        <Link to=\"/admin-orders\" className=\"w-full flex items-center\">\r\n          <FiShoppingBag\r\n            size={30}\r\n            color={`${active === 2 ? \"crimson\" : \"#555\"}`}\r\n          />\r\n          <h5\r\n            className={`hidden 800px:block pl-2 text-[18px] font-[400] ${\r\n              active === 2 ? \"text-[crimson]\" : \"text-[#555]\"\r\n            }`}\r\n          >\r\n            All Orders\r\n          </h5>\r\n        </Link>\r\n      </div>\r\n\r\n      <div className=\"w-full flex items-center p-4\">\r\n        <Link to=\"/admin-sellers\" className=\"w-full flex items-center\">\r\n          <GrWorkshop\r\n            size={30}\r\n            color={`${active === 3 ? \"crimson\" : \"#555\"}`}\r\n          />\r\n          <h5\r\n            className={`hidden 800px:block pl-2 text-[18px] font-[400] ${\r\n              active === 3 ? \"text-[crimson]\" : \"text-[#555]\"\r\n            }`}\r\n          >\r\n            All Sellers\r\n          </h5>\r\n        </Link>\r\n      </div>\r\n\r\n      <div className=\"w-full flex items-center p-4\">\r\n        <Link to=\"/admin-users\" className=\"w-full flex items-center\">\r\n          <HiOutlineUserGroup\r\n            size={30}\r\n            color={`${active === 4 ? \"crimson\" : \"#555\"}`}\r\n          />\r\n          <h5\r\n            className={`hidden 800px:block pl-2 text-[18px] font-[400] ${\r\n              active === 4 ? \"text-[crimson]\" : \"text-[#555]\"\r\n            }`}\r\n          >\r\n            All Users\r\n          </h5>\r\n        </Link>\r\n      </div>\r\n\r\n      <div className=\"w-full flex items-center p-4\">\r\n        <Link to=\"/admin-products\" className=\"w-full flex items-center\">\r\n          <BsHandbag\r\n            size={30}\r\n            color={`${active === 5 ? \"crimson\" : \"#555\"}`}\r\n          />\r\n          <h5\r\n            className={`hidden 800px:block pl-2 text-[18px] font-[400] ${\r\n              active === 5 ? \"text-[crimson]\" : \"text-[#555]\"\r\n            }`}\r\n          >\r\n            All Products\r\n          </h5>\r\n        </Link>\r\n      </div>\r\n\r\n      <div className=\"w-full flex items-center p-4\">\r\n        <Link to=\"/admin-events\" className=\"w-full flex items-center\">\r\n          <MdOutlineLocalOffer\r\n            size={30}\r\n            color={`${active === 6 ? \"crimson\" : \"#555\"}`}\r\n          />\r\n          <h5\r\n            className={`hidden 800px:block pl-2 text-[18px] font-[400] ${\r\n              active === 6 ? \"text-[crimson]\" : \"text-[#555]\"\r\n            }`}\r\n          >\r\n            All Events\r\n          </h5>\r\n        </Link>\r\n      </div>\r\n\r\n\r\n\r\n      <div className=\"w-full flex items-center p-4\">\r\n        <Link\r\n          to=\"/admin-withdraw-request\"\r\n          className=\"w-full flex items-center\"\r\n        >\r\n          <CiMoneyBill\r\n            size={30}\r\n            color={`${active === 7 ? \"crimson\" : \"#555\"}`}\r\n          />\r\n          <h5\r\n            className={`hidden 800px:block pl-2 text-[18px] font-[400] ${\r\n              active === 7 ? \"text-[crimson]\" : \"text-[#555]\"\r\n            }`}\r\n          >\r\n            Withdraw Request\r\n          </h5>\r\n        </Link>\r\n      </div>\r\n\r\n      <div className=\"w-full flex items-center p-4\">\r\n        <Link\r\n          to=\"/profile\"\r\n          className=\"w-full flex items-center\"\r\n        >\r\n          <AiOutlineSetting\r\n            size={30}\r\n            color={`${active === 8 ? \"crimson\" : \"#555\"}`}\r\n          />\r\n          <h5\r\n            className={`hidden 800px:block pl-2 text-[18px] font-[400] ${\r\n              active === 8 ? \"text-[crimson]\" : \"text-[#555]\"\r\n            }`}\r\n          >\r\n            Settings\r\n          </h5>\r\n        </Link>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminSideBar;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\CreateProduct.jsx",["717"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { createProduct } from \"../../redux/actions/product\";\r\nimport { categoriesData } from \"../../static/data\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst CreateProduct = () => {\r\n  const { seller } = useSelector((state) => state.seller);\r\n  const { success, error } = useSelector((state) => state.products);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const [images, setImages] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [tags, setTags] = useState(\"\");\r\n  const [originalPrice, setOriginalPrice] = useState();\r\n  const [discountPrice, setDiscountPrice] = useState();\r\n  const [stock, setStock] = useState();\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      toast.error(error);\r\n    }\r\n    if (success) {\r\n      toast.success(\"Product created successfully!\");\r\n      navigate(\"/dashboard\");\r\n      window.location.reload();\r\n    }\r\n  }, [dispatch, error, success]);\r\n\r\n  const handleImageChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n\r\n    setImages([]);\r\n\r\n    files.forEach((file) => {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = () => {\r\n        if (reader.readyState === 2) {\r\n          setImages((old) => [...old, reader.result]);\r\n        }\r\n      };\r\n      reader.readAsDataURL(file);\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newForm = new FormData();\r\n\r\n    images.forEach((image) => {\r\n      newForm.set(\"images\", image);\r\n    });\r\n    newForm.append(\"name\", name);\r\n    newForm.append(\"description\", description);\r\n    newForm.append(\"category\", category);\r\n    newForm.append(\"tags\", tags);\r\n    newForm.append(\"originalPrice\", originalPrice);\r\n    newForm.append(\"discountPrice\", discountPrice);\r\n    newForm.append(\"stock\", stock);\r\n    newForm.append(\"shopId\", seller._id);\r\n    dispatch(\r\n      createProduct({\r\n        name,\r\n        description,\r\n        category,\r\n        tags,\r\n        originalPrice,\r\n        discountPrice,\r\n        stock,\r\n        shopId: seller._id,\r\n        images,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-[90%] 800px:w-[50%] bg-white  shadow h-[80vh] rounded-[4px] p-3 overflow-y-scroll\">\r\n      <h5 className=\"text-[30px] font-Poppins text-center\">Create Product</h5>\r\n      {/* create product form */}\r\n      <form onSubmit={handleSubmit}>\r\n        <br />\r\n        <div>\r\n          <label className=\"pb-2\">\r\n            Name <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n            onChange={(e) => setName(e.target.value)}\r\n            placeholder=\"Enter your product name...\"\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label className=\"pb-2\">\r\n            Description <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <textarea\r\n            cols=\"30\"\r\n            required\r\n            rows=\"8\"\r\n            type=\"text\"\r\n            name=\"description\"\r\n            value={description}\r\n            className=\"mt-2 appearance-none block w-full pt-2 px-3 border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            placeholder=\"Enter your product description...\"\r\n          ></textarea>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label className=\"pb-2\">\r\n            Category <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <select\r\n            className=\"w-full mt-2 border h-[35px] rounded-[5px]\"\r\n            value={category}\r\n            onChange={(e) => setCategory(e.target.value)}\r\n          >\r\n            <option value=\"Choose a category\">Choose a category</option>\r\n            {categoriesData &&\r\n              categoriesData.map((i) => (\r\n                <option value={i.title} key={i.title}>\r\n                  {i.title}\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label className=\"pb-2\">Tags</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"tags\"\r\n            value={tags}\r\n            className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n            onChange={(e) => setTags(e.target.value)}\r\n            placeholder=\"Enter your product tags...\"\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label className=\"pb-2\">Original Price</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"price\"\r\n            value={originalPrice}\r\n            className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n            onChange={(e) => setOriginalPrice(e.target.value)}\r\n            placeholder=\"Enter your product price...\"\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label className=\"pb-2\">\r\n            Price (With Discount) <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"price\"\r\n            value={discountPrice}\r\n            className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n            onChange={(e) => setDiscountPrice(e.target.value)}\r\n            placeholder=\"Enter your product price with discount...\"\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label className=\"pb-2\">\r\n            Product Stock <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"price\"\r\n            value={stock}\r\n            className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n            onChange={(e) => setStock(e.target.value)}\r\n            placeholder=\"Enter your product stock...\"\r\n          />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label className=\"pb-2\">\r\n            Upload Images <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            name=\"\"\r\n            id=\"upload\"\r\n            className=\"hidden\"\r\n            multiple\r\n            onChange={handleImageChange}\r\n          />\r\n          <div className=\"w-full flex items-center flex-wrap\">\r\n            <label htmlFor=\"upload\">\r\n              <AiOutlinePlusCircle size={30} className=\"mt-3\" color=\"#555\" />\r\n            </label>\r\n            {images &&\r\n              images.map((i) => (\r\n                <img\r\n                  src={i}\r\n                  key={i}\r\n                  alt=\"\"\r\n                  className=\"h-[120px] w-[120px] object-cover m-2\"\r\n                />\r\n              ))}\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Create\"\r\n              className=\"mt-2 cursor-pointer appearance-none text-center block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateProduct;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\AllProducts.jsx",["718"],[],"import { Button } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport React, { useEffect } from \"react\";\r\nimport { AiOutlineDelete, AiOutlineEye } from \"react-icons/ai\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getAllProductsShop } from \"../../redux/actions/product\";\r\nimport { deleteProduct } from \"../../redux/actions/product\";\r\nimport Loader from \"../Layout/Loader\";\r\n\r\nconst AllProducts = () => {\r\n  const { products, isLoading } = useSelector((state) => state.products);\r\n  const { seller } = useSelector((state) => state.seller);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllProductsShop(seller._id));\r\n  }, [dispatch]);\r\n\r\n  const handleDelete = (id) => {\r\n    dispatch(deleteProduct(id));\r\n    window.location.reload();\r\n  };\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: \"Product Id\", minWidth: 150, flex: 0.7 },\r\n    {\r\n      field: \"name\",\r\n      headerName: \"Name\",\r\n      minWidth: 180,\r\n      flex: 1.4,\r\n    },\r\n    {\r\n      field: \"price\",\r\n      headerName: \"Price\",\r\n      minWidth: 100,\r\n      flex: 0.6,\r\n    },\r\n    {\r\n      field: \"Stock\",\r\n      headerName: \"Stock\",\r\n      type: \"number\",\r\n      minWidth: 80,\r\n      flex: 0.5,\r\n    },\r\n\r\n    {\r\n      field: \"sold\",\r\n      headerName: \"Sold out\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.6,\r\n    },\r\n    {\r\n      field: \"Preview\",\r\n      flex: 0.8,\r\n      minWidth: 100,\r\n      headerName: \"\",\r\n      type: \"number\",\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Link to={`/product/${params.id}`}>\r\n              <Button>\r\n                <AiOutlineEye size={20} />\r\n              </Button>\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      field: \"Delete\",\r\n      flex: 0.8,\r\n      minWidth: 120,\r\n      headerName: \"\",\r\n      type: \"number\",\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Button onClick={() => handleDelete(params.id)}>\r\n              <AiOutlineDelete size={20} />\r\n            </Button>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const row = [];\r\n\r\n  products &&\r\n    products.forEach((item) => {\r\n      row.push({\r\n        id: item._id,\r\n        name: item.name,\r\n        price: \"US$ \" + item.discountPrice,\r\n        Stock: item.stock,\r\n        sold: item?.sold_out,\r\n      });\r\n    });\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"w-full mx-8 pt-1 mt-10 bg-white\">\r\n          <DataGrid\r\n            rows={row}\r\n            columns={columns}\r\n            pageSize={10}\r\n            disableSelectionOnClick\r\n            autoHeight\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllProducts;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\AllEvents.jsx",["719","720","721"],[],"import { Button } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport React, { useEffect } from \"react\";\r\nimport { AiOutlineDelete, AiOutlineEye } from \"react-icons/ai\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteEvent, getAllEventsShop } from \"../../redux/actions/event\";\r\nimport { getAllProductsShop } from \"../../redux/actions/product\";\r\nimport { deleteProduct } from \"../../redux/actions/product\";\r\nimport Loader from \"../Layout/Loader\";\r\n\r\nconst AllEvents = () => {\r\n  const { events, isLoading } = useSelector((state) => state.events);\r\n  const { seller } = useSelector((state) => state.seller);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllEventsShop(seller._id));\r\n  }, [dispatch]);\r\n\r\n  const handleDelete = (id) => {\r\n    dispatch(deleteEvent(id));\r\n    window.location.reload();\r\n  }\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: \"Product Id\", minWidth: 150, flex: 0.7 },\r\n    {\r\n      field: \"name\",\r\n      headerName: \"Name\",\r\n      minWidth: 180,\r\n      flex: 1.4,\r\n    },\r\n    {\r\n      field: \"price\",\r\n      headerName: \"Price\",\r\n      minWidth: 100,\r\n      flex: 0.6,\r\n    },\r\n    {\r\n      field: \"Stock\",\r\n      headerName: \"Stock\",\r\n      type: \"number\",\r\n      minWidth: 80,\r\n      flex: 0.5,\r\n    },\r\n\r\n    {\r\n      field: \"sold\",\r\n      headerName: \"Sold out\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.6,\r\n    },\r\n    {\r\n      field: \"Preview\",\r\n      flex: 0.8,\r\n      minWidth: 100,\r\n      headerName: \"\",\r\n      type: \"number\",\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        const d = params.row.name;\r\n        const product_name = d.replace(/\\s+/g, \"-\");\r\n        return (\r\n          <>\r\n            <Link to={`/product/${product_name}`}>\r\n              <Button>\r\n                <AiOutlineEye size={20} />\r\n              </Button>\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      field: \"Delete\",\r\n      flex: 0.8,\r\n      minWidth: 120,\r\n      headerName: \"\",\r\n      type: \"number\",\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Button\r\n            onClick={() => handleDelete(params.id)}\r\n            >\r\n              <AiOutlineDelete size={20} />\r\n            </Button>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const row = [];\r\n\r\n  events &&\r\n  events.forEach((item) => {\r\n      row.push({\r\n        id: item._id,\r\n        name: item.name,\r\n        price: \"US$ \" + item.discountPrice,\r\n        Stock: item.stock,\r\n        sold: item.sold_out,\r\n      });\r\n    });\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"w-full mx-8 pt-1 mt-10 bg-white\">\r\n          <DataGrid\r\n            rows={row}\r\n            columns={columns}\r\n            pageSize={10}\r\n            disableSelectionOnClick\r\n            autoHeight\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllEvents;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\Layout\\DashboardHeader.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\AllCoupons.jsx",["722","723"],[],"import { Button } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { AiOutlineDelete } from \"react-icons/ai\";\r\nimport { RxCross1 } from \"react-icons/rx\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styles from \"../../styles/styles\";\r\nimport Loader from \"../Layout/Loader\";\r\nimport { server } from \"../../server\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst AllCoupons = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [coupouns,setCoupouns] = useState([]);\r\n  const [minAmount, setMinAmout] = useState(null);\r\n  const [maxAmount, setMaxAmount] = useState(null);\r\n  const [selectedProducts, setSelectedProducts] = useState(null);\r\n  const [value, setValue] = useState(null);\r\n  const { seller } = useSelector((state) => state.seller);\r\n  const { products } = useSelector((state) => state.products);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    axios\r\n      .get(`${server}/coupon/get-coupon/${seller._id}`, {\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        setIsLoading(false);\r\n        setCoupouns(res.data.couponCodes);\r\n      })\r\n      .catch((error) => {\r\n        setIsLoading(false);\r\n      });\r\n  }, [dispatch]);\r\n\r\n  const handleDelete = async (id) => {\r\n    axios.delete(`${server}/coupon/delete-coupon/${id}`,{withCredentials: true}).then((res) => {\r\n      toast.success(\"Coupon code deleted succesfully!\")\r\n    })\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    await axios\r\n      .post(\r\n        `${server}/coupon/create-coupon-code`,\r\n        {\r\n          name,\r\n          minAmount,\r\n          maxAmount,\r\n          selectedProducts,\r\n          value,\r\n          shopId: seller._id,\r\n        },\r\n        { withCredentials: true }\r\n      )\r\n      .then((res) => {\r\n       toast.success(\"Coupon code created successfully!\");\r\n       setOpen(false);\r\n       window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.response.data.message);\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: \"Id\", minWidth: 150, flex: 0.7 },\r\n    {\r\n      field: \"name\",\r\n      headerName: \"Coupon Code\",\r\n      minWidth: 180,\r\n      flex: 1.4,\r\n    },\r\n    {\r\n      field: \"price\",\r\n      headerName: \"Value\",\r\n      minWidth: 100,\r\n      flex: 0.6,\r\n    },\r\n    {\r\n      field: \"Delete\",\r\n      flex: 0.8,\r\n      minWidth: 120,\r\n      headerName: \"\",\r\n      type: \"number\",\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Button onClick={() => handleDelete(params.id)}>\r\n              <AiOutlineDelete size={20} />\r\n            </Button>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const row = [];\r\n\r\n  coupouns &&\r\n  coupouns.forEach((item) => {\r\n      row.push({\r\n        id: item._id,\r\n        name: item.name,\r\n        price: item.value + \" %\",\r\n        sold: 10,\r\n      });\r\n    });\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"w-full mx-8 pt-1 mt-10 bg-white\">\r\n          <div className=\"w-full flex justify-end\">\r\n            <div\r\n              className={`${styles.button} !w-max !h-[45px] px-3 !rounded-[5px] mr-3 mb-3`}\r\n              onClick={() => setOpen(true)}\r\n            >\r\n              <span className=\"text-white\">Create Coupon Code</span>\r\n            </div>\r\n          </div>\r\n          <DataGrid\r\n            rows={row}\r\n            columns={columns}\r\n            pageSize={10}\r\n            disableSelectionOnClick\r\n            autoHeight\r\n          />\r\n          {open && (\r\n            <div className=\"fixed top-0 left-0 w-full h-screen bg-[#00000062] z-[20000] flex items-center justify-center\">\r\n              <div className=\"w-[90%] 800px:w-[40%] h-[80vh] bg-white rounded-md shadow p-4\">\r\n                <div className=\"w-full flex justify-end\">\r\n                  <RxCross1\r\n                    size={30}\r\n                    className=\"cursor-pointer\"\r\n                    onClick={() => setOpen(false)}\r\n                  />\r\n                </div>\r\n                <h5 className=\"text-[30px] font-Poppins text-center\">\r\n                  Create Coupon code\r\n                </h5>\r\n                {/* create coupoun code */}\r\n                <form onSubmit={handleSubmit} aria-required={true}>\r\n                  <br />\r\n                  <div>\r\n                    <label className=\"pb-2\">\r\n                      Name <span className=\"text-red-500\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      required\r\n                      value={name}\r\n                      className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                      onChange={(e) => setName(e.target.value)}\r\n                      placeholder=\"Enter your coupon code name...\"\r\n                    />\r\n                  </div>\r\n                  <br />\r\n                  <div>\r\n                    <label className=\"pb-2\">\r\n                      Discount Percentenge{\" \"}\r\n                      <span className=\"text-red-500\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"value\"\r\n                      value={value}\r\n                      required\r\n                      className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                      onChange={(e) => setValue(e.target.value)}\r\n                      placeholder=\"Enter your coupon code value...\"\r\n                    />\r\n                  </div>\r\n                  <br />\r\n                  <div>\r\n                    <label className=\"pb-2\">Min Amount</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      name=\"value\"\r\n                      value={minAmount}\r\n                      className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                      onChange={(e) => setMinAmout(e.target.value)}\r\n                      placeholder=\"Enter your coupon code min amount...\"\r\n                    />\r\n                  </div>\r\n                  <br />\r\n                  <div>\r\n                    <label className=\"pb-2\">Max Amount</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      name=\"value\"\r\n                      value={maxAmount}\r\n                      className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                      onChange={(e) => setMaxAmount(e.target.value)}\r\n                      placeholder=\"Enter your coupon code max amount...\"\r\n                    />\r\n                  </div>\r\n                  <br />\r\n                  <div>\r\n                    <label className=\"pb-2\">Selected Product</label>\r\n                    <select\r\n                      className=\"w-full mt-2 border h-[35px] rounded-[5px]\"\r\n                      value={selectedProducts}\r\n                      onChange={(e) => setSelectedProducts(e.target.value)}\r\n                    >\r\n                      <option value=\"Choose your selected products\">\r\n                        Choose a selected product\r\n                      </option>\r\n                      {products &&\r\n                        products.map((i) => (\r\n                          <option value={i.name} key={i.name}>\r\n                            {i.name}\r\n                          </option>\r\n                        ))}\r\n                    </select>\r\n                  </div>\r\n                  <br />\r\n                  <div>\r\n                    <input\r\n                      type=\"submit\"\r\n                      value=\"Create\"\r\n                      className=\"mt-2 appearance-none block w-full px-3 h-[35px] border border-gray-300 rounded-[3px] placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\r\n                    />\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllCoupons;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\OrderDetails.jsx",["724","725"],[],"import React, { useEffect, useState } from \"react\";\r\nimport styles from \"../../styles/styles\";\r\nimport { BsFillBagFill } from \"react-icons/bs\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllOrdersOfShop } from \"../../redux/actions/order\";\r\nimport { server } from \"../../server\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst OrderDetails = () => {\r\n  const { orders, isLoading } = useSelector((state) => state.order);\r\n  const { seller } = useSelector((state) => state.seller);\r\n  const dispatch = useDispatch();\r\n  const [status, setStatus] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllOrdersOfShop(seller._id));\r\n  }, [dispatch]);\r\n\r\n  const data = orders && orders.find((item) => item._id === id);\r\n\r\n  const orderUpdateHandler = async (e) => {\r\n    await axios\r\n      .put(\r\n        `${server}/order/update-order-status/${id}`,\r\n        {\r\n          status,\r\n        },\r\n        { withCredentials: true }\r\n      )\r\n      .then((res) => {\r\n        toast.success(\"Order updated!\");\r\n        navigate(\"/dashboard-orders\");\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.response.data.message);\r\n      });\r\n  };\r\n\r\n  const refundOrderUpdateHandler = async (e) => {\r\n    await axios\r\n    .put(\r\n      `${server}/order/order-refund-success/${id}`,\r\n      {\r\n        status,\r\n      },\r\n      { withCredentials: true }\r\n    )\r\n    .then((res) => {\r\n      toast.success(\"Order updated!\");\r\n      dispatch(getAllOrdersOfShop(seller._id));\r\n    })\r\n    .catch((error) => {\r\n      toast.error(error.response.data.message);\r\n    });\r\n  }\r\n\r\n  console.log(data?.status);\r\n\r\n\r\n  return (\r\n    <div className={`py-4 min-h-screen ${styles.section}`}>\r\n      <div className=\"w-full flex items-center justify-between\">\r\n        <div className=\"flex items-center\">\r\n          <BsFillBagFill size={30} color=\"crimson\" />\r\n          <h1 className=\"pl-2 text-[25px]\">Order Details</h1>\r\n        </div>\r\n        <Link to=\"/dashboard-orders\">\r\n          <div\r\n            className={`${styles.button} !bg-[#fce1e6] !rounded-[4px] text-[#e94560] font-[600] !h-[45px] text-[18px]`}\r\n          >\r\n            Order List\r\n          </div>\r\n        </Link>\r\n      </div>\r\n\r\n      <div className=\"w-full flex items-center justify-between pt-6\">\r\n        <h5 className=\"text-[#00000084]\">\r\n          Order ID: <span>#{data?._id?.slice(0, 8)}</span>\r\n        </h5>\r\n        <h5 className=\"text-[#00000084]\">\r\n          Placed on: <span>{data?.createdAt?.slice(0, 10)}</span>\r\n        </h5>\r\n      </div>\r\n\r\n      {/* order items */}\r\n      <br />\r\n      <br />\r\n      {data &&\r\n        data?.cart.map((item, index) => (\r\n          <div className=\"w-full flex items-start mb-5\">\r\n            <img\r\n              src={`${item.images[0]?.url}`}\r\n              alt=\"\"\r\n              className=\"w-[80x] h-[80px]\"\r\n            />\r\n            <div className=\"w-full\">\r\n              <h5 className=\"pl-3 text-[20px]\">{item.name}</h5>\r\n              <h5 className=\"pl-3 text-[20px] text-[#00000091]\">\r\n                US${item.discountPrice} x {item.qty}\r\n              </h5>\r\n            </div>\r\n          </div>\r\n        ))}\r\n\r\n      <div className=\"border-t w-full text-right\">\r\n        <h5 className=\"pt-3 text-[18px]\">\r\n          Total Price: <strong>US${data?.totalPrice}</strong>\r\n        </h5>\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <div className=\"w-full 800px:flex items-center\">\r\n        <div className=\"w-full 800px:w-[60%]\">\r\n          <h4 className=\"pt-3 text-[20px] font-[600]\">Shipping Address:</h4>\r\n          <h4 className=\"pt-3 text-[20px]\">\r\n            {data?.shippingAddress.address1 +\r\n              \" \" +\r\n              data?.shippingAddress.address2}\r\n          </h4>\r\n          <h4 className=\" text-[20px]\">{data?.shippingAddress.country}</h4>\r\n          <h4 className=\" text-[20px]\">{data?.shippingAddress.city}</h4>\r\n          <h4 className=\" text-[20px]\">{data?.user?.phoneNumber}</h4>\r\n        </div>\r\n        <div className=\"w-full 800px:w-[40%]\">\r\n          <h4 className=\"pt-3 text-[20px]\">Payment Info:</h4>\r\n          <h4>\r\n            Status:{\" \"}\r\n            {data?.paymentInfo?.status ? data?.paymentInfo?.status : \"Not Paid\"}\r\n          </h4>\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <h4 className=\"pt-3 text-[20px] font-[600]\">Order Status:</h4>\r\n      {data?.status !== \"Processing refund\" && data?.status !== \"Refund Success\" && (\r\n        <select\r\n          value={status}\r\n          onChange={(e) => setStatus(e.target.value)}\r\n          className=\"w-[200px] mt-2 border h-[35px] rounded-[5px]\"\r\n        >\r\n          {[\r\n            \"Processing\",\r\n            \"Transferred to delivery partner\",\r\n            \"Shipping\",\r\n            \"Received\",\r\n            \"On the way\",\r\n            \"Delivered\",\r\n          ]\r\n            .slice(\r\n              [\r\n                \"Processing\",\r\n                \"Transferred to delivery partner\",\r\n                \"Shipping\",\r\n                \"Received\",\r\n                \"On the way\",\r\n                \"Delivered\",\r\n              ].indexOf(data?.status)\r\n            )\r\n            .map((option, index) => (\r\n              <option value={option} key={index}>\r\n                {option}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      )}\r\n      {\r\n        data?.status === \"Processing refund\" || data?.status === \"Refund Success\" ? (\r\n          <select value={status} \r\n       onChange={(e) => setStatus(e.target.value)}\r\n       className=\"w-[200px] mt-2 border h-[35px] rounded-[5px]\"\r\n      >\r\n        {[\r\n            \"Processing refund\",\r\n            \"Refund Success\",\r\n          ]\r\n            .slice(\r\n              [\r\n                \"Processing refund\",\r\n                \"Refund Success\",\r\n              ].indexOf(data?.status)\r\n            )\r\n            .map((option, index) => (\r\n              <option value={option} key={index}>\r\n                {option}\r\n              </option>\r\n            ))}\r\n      </select>\r\n        ) : null\r\n      }\r\n\r\n      <div\r\n        className={`${styles.button} mt-5 !bg-[#FCE1E6] !rounded-[4px] text-[#E94560] font-[600] !h-[45px] text-[18px]`}\r\n        onClick={data?.status !== \"Processing refund\" ? orderUpdateHandler : refundOrderUpdateHandler}\r\n      >\r\n        Update Status\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\AllOrders.jsx",["726"],[],"import { Button } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../Layout/Loader\";\r\nimport { getAllOrdersOfShop } from \"../../redux/actions/order\";\r\nimport { AiOutlineArrowRight } from \"react-icons/ai\";\r\n\r\nconst AllOrders = () => {\r\n  const { orders, isLoading } = useSelector((state) => state.order);\r\n  const { seller } = useSelector((state) => state.seller);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllOrdersOfShop(seller._id));\r\n  }, [dispatch]);\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: \"Order ID\", minWidth: 150, flex: 0.7 },\r\n\r\n    {\r\n      field: \"status\",\r\n      headerName: \"Status\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n      cellClassName: (params) => {\r\n        return params.getValue(params.id, \"status\") === \"Delivered\"\r\n          ? \"greenColor\"\r\n          : \"redColor\";\r\n      },\r\n    },\r\n    {\r\n      field: \"itemsQty\",\r\n      headerName: \"Items Qty\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n    },\r\n\r\n    {\r\n      field: \"total\",\r\n      headerName: \"Total\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.8,\r\n    },\r\n\r\n    {\r\n      field: \" \",\r\n      flex: 1,\r\n      minWidth: 150,\r\n      headerName: \"\",\r\n      type: \"number\",\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Link to={`/order/${params.id}`}>\r\n              <Button>\r\n                <AiOutlineArrowRight size={20} />\r\n              </Button>\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const row = [];\r\n\r\n  orders &&\r\n    orders.forEach((item) => {\r\n      row.push({\r\n        id: item._id,\r\n        itemsQty: item.cart.length,\r\n        total: \"US$ \" + item.totalPrice,\r\n        status: item.status,\r\n      });\r\n    });\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"w-full mx-8 pt-1 mt-10 bg-white\">\r\n          <DataGrid\r\n            rows={row}\r\n            columns={columns}\r\n            pageSize={10}\r\n            disableSelectionOnClick\r\n            autoHeight\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllOrders;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\Layout\\DashboardSideBar.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\DashboardMessages.jsx",["727","728","729","730","731"],[],"import axios from \"axios\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { server } from \"../../server\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AiOutlineArrowRight, AiOutlineSend } from \"react-icons/ai\";\r\nimport styles from \"../../styles/styles\";\r\nimport { TfiGallery } from \"react-icons/tfi\";\r\nimport socketIO from \"socket.io-client\";\r\nimport { format } from \"timeago.js\";\r\nconst ENDPOINT = \"https://socket-ecommerce-tu68.onrender.com/\";\r\nconst socketId = socketIO(ENDPOINT, { transports: [\"websocket\"] });\r\n\r\nconst DashboardMessages = () => {\r\n  const { seller,isLoading } = useSelector((state) => state.seller);\r\n  const [conversations, setConversations] = useState([]);\r\n  const [arrivalMessage, setArrivalMessage] = useState(null);\r\n  const [currentChat, setCurrentChat] = useState();\r\n  const [messages, setMessages] = useState([]);\r\n  const [userData, setUserData] = useState(null);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n  const [activeStatus, setActiveStatus] = useState(false);\r\n  const [images, setImages] = useState();\r\n  const [open, setOpen] = useState(false);\r\n  const scrollRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    socketId.on(\"getMessage\", (data) => {\r\n      setArrivalMessage({\r\n        sender: data.senderId,\r\n        text: data.text,\r\n        createdAt: Date.now(),\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    arrivalMessage &&\r\n      currentChat?.members.includes(arrivalMessage.sender) &&\r\n      setMessages((prev) => [...prev, arrivalMessage]);\r\n  }, [arrivalMessage, currentChat]);\r\n\r\n  useEffect(() => {\r\n    const getConversation = async () => {\r\n      try {\r\n        const resonse = await axios.get(\r\n          `${server}/conversation/get-all-conversation-seller/${seller?._id}`,\r\n          {\r\n            withCredentials: true,\r\n          }\r\n        );\r\n\r\n        setConversations(resonse.data.conversations);\r\n      } catch (error) {\r\n        // console.log(error);\r\n      }\r\n    };\r\n    getConversation();\r\n  }, [seller, messages]);\r\n\r\n  useEffect(() => {\r\n    if (seller) {\r\n      const sellerId = seller?._id;\r\n      socketId.emit(\"addUser\", sellerId);\r\n      socketId.on(\"getUsers\", (data) => {\r\n        setOnlineUsers(data);\r\n      });\r\n    }\r\n  }, [seller]);\r\n\r\n  const onlineCheck = (chat) => {\r\n    const chatMembers = chat.members.find((member) => member !== seller?._id);\r\n    const online = onlineUsers.find((user) => user.userId === chatMembers);\r\n\r\n    return online ? true : false;\r\n  };\r\n\r\n  // get messages\r\n  useEffect(() => {\r\n    const getMessage = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${server}/message/get-all-messages/${currentChat?._id}`\r\n        );\r\n        setMessages(response.data.messages);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    getMessage();\r\n  }, [currentChat]);\r\n\r\n  // create new message\r\n  const sendMessageHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const message = {\r\n      sender: seller._id,\r\n      text: newMessage,\r\n      conversationId: currentChat._id,\r\n    };\r\n\r\n    const receiverId = currentChat.members.find(\r\n      (member) => member.id !== seller._id\r\n    );\r\n\r\n    socketId.emit(\"sendMessage\", {\r\n      senderId: seller._id,\r\n      receiverId,\r\n      text: newMessage,\r\n    });\r\n\r\n    try {\r\n      if (newMessage !== \"\") {\r\n        await axios\r\n          .post(`${server}/message/create-new-message`, message)\r\n          .then((res) => {\r\n            setMessages([...messages, res.data.message]);\r\n            updateLastMessage();\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const updateLastMessage = async () => {\r\n    socketId.emit(\"updateLastMessage\", {\r\n      lastMessage: newMessage,\r\n      lastMessageId: seller._id,\r\n    });\r\n\r\n    await axios\r\n      .put(`${server}/conversation/update-last-message/${currentChat._id}`, {\r\n        lastMessage: newMessage,\r\n        lastMessageId: seller._id,\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data.conversation);\r\n        setNewMessage(\"\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleImageUpload = async (e) => {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        setImages(reader.result);\r\n        imageSendingHandler(reader.result);\r\n      }\r\n    };\r\n\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n\r\n  const imageSendingHandler = async (e) => {\r\n    const receiverId = currentChat.members.find(\r\n      (member) => member !== seller._id\r\n    );\r\n\r\n    socketId.emit(\"sendMessage\", {\r\n      senderId: seller._id,\r\n      receiverId,\r\n      images: e,\r\n    });\r\n\r\n    try {\r\n      await axios\r\n        .post(`${server}/message/create-new-message`, {\r\n          images: e,\r\n          sender: seller._id,\r\n          text: newMessage,\r\n          conversationId: currentChat._id,\r\n        })\r\n        .then((res) => {\r\n          setImages();\r\n          setMessages([...messages, res.data.message]);\r\n          updateLastMessageForImage();\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const updateLastMessageForImage = async () => {\r\n    await axios.put(\r\n      `${server}/conversation/update-last-message/${currentChat._id}`,\r\n      {\r\n        lastMessage: \"Photo\",\r\n        lastMessageId: seller._id,\r\n      }\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ beahaviour: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"w-[90%] bg-white m-5 h-[85vh] overflow-y-scroll rounded\">\r\n      {!open && (\r\n        <>\r\n          <h1 className=\"text-center text-[30px] py-3 font-Poppins\">\r\n            All Messages\r\n          </h1>\r\n          {/* All messages list */}\r\n          {conversations &&\r\n            conversations.map((item, index) => (\r\n              <MessageList\r\n                data={item}\r\n                key={index}\r\n                index={index}\r\n                setOpen={setOpen}\r\n                setCurrentChat={setCurrentChat}\r\n                me={seller._id}\r\n                setUserData={setUserData}\r\n                userData={userData}\r\n                online={onlineCheck(item)}\r\n                setActiveStatus={setActiveStatus}\r\n                isLoading={isLoading}\r\n              />\r\n            ))}\r\n        </>\r\n      )}\r\n\r\n      {open && (\r\n        <SellerInbox\r\n          setOpen={setOpen}\r\n          newMessage={newMessage}\r\n          setNewMessage={setNewMessage}\r\n          sendMessageHandler={sendMessageHandler}\r\n          messages={messages}\r\n          sellerId={seller._id}\r\n          userData={userData}\r\n          activeStatus={activeStatus}\r\n          scrollRef={scrollRef}\r\n          setMessages={setMessages}\r\n          handleImageUpload={handleImageUpload}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MessageList = ({\r\n  data,\r\n  index,\r\n  setOpen,\r\n  setCurrentChat,\r\n  me,\r\n  setUserData,\r\n  online,\r\n  setActiveStatus,\r\n  isLoading\r\n}) => {\r\n  console.log(data);\r\n  const [user, setUser] = useState([]);\r\n  const navigate = useNavigate();\r\n  const handleClick = (id) => {\r\n    navigate(`/dashboard-messages?${id}`);\r\n    setOpen(true);\r\n  };\r\n  const [active, setActive] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const userId = data.members.find((user) => user != me);\r\n\r\n    const getUser = async () => {\r\n      try {\r\n        const res = await axios.get(`${server}/user/user-info/${userId}`);\r\n        setUser(res.data.user);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    getUser();\r\n  }, [me, data]);\r\n\r\n  return (\r\n    <div\r\n      className={`w-full flex p-3 px-3 ${\r\n        active === index ? \"bg-[#00000010]\" : \"bg-transparent\"\r\n      }  cursor-pointer`}\r\n      onClick={(e) =>\r\n        setActive(index) ||\r\n        handleClick(data._id) ||\r\n        setCurrentChat(data) ||\r\n        setUserData(user) ||\r\n        setActiveStatus(online)\r\n      }\r\n    >\r\n      <div className=\"relative\">\r\n        <img\r\n          src={`${user?.avatar?.url}`}\r\n          alt=\"\"\r\n          className=\"w-[50px] h-[50px] rounded-full\"\r\n        />\r\n        {online ? (\r\n          <div className=\"w-[12px] h-[12px] bg-green-400 rounded-full absolute top-[2px] right-[2px]\" />\r\n        ) : (\r\n          <div className=\"w-[12px] h-[12px] bg-[#c7b9b9] rounded-full absolute top-[2px] right-[2px]\" />\r\n        )}\r\n      </div>\r\n      <div className=\"pl-3\">\r\n        <h1 className=\"text-[18px]\">{user?.name}</h1>\r\n        <p className=\"text-[16px] text-[#000c]\">\r\n          {!isLoading && data?.lastMessageId !== user?._id\r\n            ? \"You:\"\r\n            : user?.name.split(\" \")[0] + \": \"}{\" \"}\r\n          {data?.lastMessage}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SellerInbox = ({\r\n  scrollRef,\r\n  setOpen,\r\n  newMessage,\r\n  setNewMessage,\r\n  sendMessageHandler,\r\n  messages,\r\n  sellerId,\r\n  userData,\r\n  activeStatus,\r\n  handleImageUpload,\r\n}) => {\r\n  return (\r\n    <div className=\"w-full min-h-full flex flex-col justify-between\">\r\n      {/* message header */}\r\n      <div className=\"w-full flex p-3 items-center justify-between bg-slate-200\">\r\n        <div className=\"flex\">\r\n          <img\r\n            src={`${userData?.avatar?.url}`}\r\n            alt=\"\"\r\n            className=\"w-[60px] h-[60px] rounded-full\"\r\n          />\r\n          <div className=\"pl-3\">\r\n            <h1 className=\"text-[18px] font-[600]\">{userData?.name}</h1>\r\n            <h1>{activeStatus ? \"Active Now\" : \"\"}</h1>\r\n          </div>\r\n        </div>\r\n        <AiOutlineArrowRight\r\n          size={20}\r\n          className=\"cursor-pointer\"\r\n          onClick={() => setOpen(false)}\r\n        />\r\n      </div>\r\n\r\n      {/* messages */}\r\n      <div className=\"px-3 h-[65vh] py-3 overflow-y-scroll\">\r\n        {messages &&\r\n          messages.map((item, index) => {\r\n            return (\r\n              <div\r\n                className={`flex w-full my-2 ${\r\n                  item.sender === sellerId ? \"justify-end\" : \"justify-start\"\r\n                }`}\r\n                ref={scrollRef}\r\n              >\r\n                {item.sender !== sellerId && (\r\n                  <img\r\n                    src={`${userData?.avatar?.url}`}\r\n                    className=\"w-[40px] h-[40px] rounded-full mr-3\"\r\n                    alt=\"\"\r\n                  />\r\n                )}\r\n                {item.images && (\r\n                  <img\r\n                    src={`${item.images?.url}`}\r\n                    className=\"w-[300px] h-[300px] object-cover rounded-[10px] mr-2\"\r\n                  />\r\n                )}\r\n                {item.text !== \"\" && (\r\n                  <div>\r\n                    <div\r\n                      className={`w-max p-2 rounded ${\r\n                        item.sender === sellerId ? \"bg-[#000]\" : \"bg-[#38c776]\"\r\n                      } text-[#fff] h-min`}\r\n                    >\r\n                      <p>{item.text}</p>\r\n                    </div>\r\n\r\n                    <p className=\"text-[12px] text-[#000000d3] pt-1\">\r\n                      {format(item.createdAt)}\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n\r\n      {/* send message input */}\r\n      <form\r\n        aria-required={true}\r\n        className=\"p-3 relative w-full flex justify-between items-center\"\r\n        onSubmit={sendMessageHandler}\r\n      >\r\n        <div className=\"w-[30px]\">\r\n          <input\r\n            type=\"file\"\r\n            name=\"\"\r\n            id=\"image\"\r\n            className=\"hidden\"\r\n            onChange={handleImageUpload}\r\n          />\r\n          <label htmlFor=\"image\">\r\n            <TfiGallery className=\"cursor-pointer\" size={20} />\r\n          </label>\r\n        </div>\r\n        <div className=\"w-full\">\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            placeholder=\"Enter your message...\"\r\n            value={newMessage}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n            className={`${styles.input}`}\r\n          />\r\n          <input type=\"submit\" value=\"Send\" className=\"hidden\" id=\"send\" />\r\n          <label htmlFor=\"send\">\r\n            <AiOutlineSend\r\n              size={20}\r\n              className=\"absolute right-4 top-5 cursor-pointer\"\r\n            />\r\n          </label>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardMessages;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\AllRefundOrders.jsx",["732"],[],"import { Button } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../Layout/Loader\";\r\nimport { getAllOrdersOfShop } from \"../../redux/actions/order\";\r\nimport { AiOutlineArrowRight } from \"react-icons/ai\";\r\n\r\nconst AllRefundOrders = () => {\r\n  const { orders, isLoading } = useSelector((state) => state.order);\r\n  const { seller } = useSelector((state) => state.seller);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllOrdersOfShop(seller._id));\r\n  }, [dispatch]);\r\n\r\n  const refundOrders = orders && orders.filter((item) => item.status === \"Processing refund\"  || item.status === \"Refund Success\");\r\n\r\n  const columns = [\r\n    { field: \"id\", headerName: \"Order ID\", minWidth: 150, flex: 0.7 },\r\n\r\n    {\r\n      field: \"status\",\r\n      headerName: \"Status\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n      cellClassName: (params) => {\r\n        return params.getValue(params.id, \"status\") === \"Delivered\"\r\n          ? \"greenColor\"\r\n          : \"redColor\";\r\n      },\r\n    },\r\n    {\r\n      field: \"itemsQty\",\r\n      headerName: \"Items Qty\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.7,\r\n    },\r\n\r\n    {\r\n      field: \"total\",\r\n      headerName: \"Total\",\r\n      type: \"number\",\r\n      minWidth: 130,\r\n      flex: 0.8,\r\n    },\r\n\r\n    {\r\n      field: \" \",\r\n      flex: 1,\r\n      minWidth: 150,\r\n      headerName: \"\",\r\n      type: \"number\",\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Link to={`/order/${params.id}`}>\r\n              <Button>\r\n                <AiOutlineArrowRight size={20} />\r\n              </Button>\r\n            </Link>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const row = [];\r\n\r\n  refundOrders &&\r\n  refundOrders.forEach((item) => {\r\n      row.push({\r\n        id: item._id,\r\n        itemsQty: item.cart.length,\r\n        total: \"US$ \" + item.totalPrice,\r\n        status: item.status,\r\n      });\r\n    });\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"w-full mx-8 pt-1 mt-10 bg-white\">\r\n          <DataGrid\r\n            rows={row}\r\n            columns={columns}\r\n            pageSize={10}\r\n            disableSelectionOnClick\r\n            autoHeight\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllRefundOrders;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\ShopSettings.jsx",["733","734"],[],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { backend_url, server } from \"../../server\";\r\nimport { AiOutlineCamera } from \"react-icons/ai\";\r\nimport styles from \"../../styles/styles\";\r\nimport axios from \"axios\";\r\nimport { loadSeller } from \"../../redux/actions/user\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst ShopSettings = () => {\r\n  const { seller } = useSelector((state) => state.seller);\r\n  const [avatar, setAvatar] = useState();\r\n  const [name, setName] = useState(seller && seller.name);\r\n  const [description, setDescription] = useState(\r\n    seller && seller.description ? seller.description : \"\"\r\n  );\r\n  const [address, setAddress] = useState(seller && seller.address);\r\n  const [phoneNumber, setPhoneNumber] = useState(seller && seller.phoneNumber);\r\n  const [zipCode, setZipcode] = useState(seller && seller.zipCode);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleImage = async (e) => {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        setAvatar(reader.result);\r\n        axios\r\n          .put(\r\n            `${server}/shop/update-shop-avatar`,\r\n            { avatar: reader.result },\r\n            {\r\n              withCredentials: true,\r\n            }\r\n          )\r\n          .then((res) => {\r\n            dispatch(loadSeller());\r\n            toast.success(\"Avatar updated successfully!\");\r\n          })\r\n          .catch((error) => {\r\n            toast.error(error.response.data.message);\r\n          });\r\n      }\r\n    };\r\n\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n\r\n  const updateHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    await axios\r\n      .put(\r\n        `${server}/shop/update-seller-info`,\r\n        {\r\n          name,\r\n          address,\r\n          zipCode,\r\n          phoneNumber,\r\n          description,\r\n        },\r\n        { withCredentials: true }\r\n      )\r\n      .then((res) => {\r\n        toast.success(\"Shop info updated succesfully!\");\r\n        dispatch(loadSeller());\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.response.data.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full min-h-screen flex flex-col items-center\">\r\n      <div className=\"flex w-full 800px:w-[80%] flex-col justify-center my-5\">\r\n        <div className=\"w-full flex items-center justify-center\">\r\n          <div className=\"relative\">\r\n            <img\r\n              src={avatar ? avatar : `${seller.avatar?.url}`}\r\n              alt=\"\"\r\n              className=\"w-[200px] h-[200px] rounded-full cursor-pointer\"\r\n            />\r\n            <div className=\"w-[30px] h-[30px] bg-[#E3E9EE] rounded-full flex items-center justify-center cursor-pointer absolute bottom-[10px] right-[15px]\">\r\n              <input\r\n                type=\"file\"\r\n                id=\"image\"\r\n                className=\"hidden\"\r\n                onChange={handleImage}\r\n              />\r\n              <label htmlFor=\"image\">\r\n                <AiOutlineCamera />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* shop info */}\r\n        <form\r\n          aria-aria-required={true}\r\n          className=\"flex flex-col items-center\"\r\n          onSubmit={updateHandler}\r\n        >\r\n          <div className=\"w-[100%] flex items-center flex-col 800px:w-[50%] mt-5\">\r\n            <div className=\"w-full pl-[3%]\">\r\n              <label className=\"block pb-2\">Shop Name</label>\r\n            </div>\r\n            <input\r\n              type=\"name\"\r\n              placeholder={`${seller.name}`}\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              className={`${styles.input} !w-[95%] mb-4 800px:mb-0`}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"w-[100%] flex items-center flex-col 800px:w-[50%] mt-5\">\r\n            <div className=\"w-full pl-[3%]\">\r\n              <label className=\"block pb-2\">Shop description</label>\r\n            </div>\r\n            <input\r\n              type=\"name\"\r\n              placeholder={`${\r\n                seller?.description\r\n                  ? seller.description\r\n                  : \"Enter your shop description\"\r\n              }`}\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              className={`${styles.input} !w-[95%] mb-4 800px:mb-0`}\r\n            />\r\n          </div>\r\n          <div className=\"w-[100%] flex items-center flex-col 800px:w-[50%] mt-5\">\r\n            <div className=\"w-full pl-[3%]\">\r\n              <label className=\"block pb-2\">Shop Address</label>\r\n            </div>\r\n            <input\r\n              type=\"name\"\r\n              placeholder={seller?.address}\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n              className={`${styles.input} !w-[95%] mb-4 800px:mb-0`}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"w-[100%] flex items-center flex-col 800px:w-[50%] mt-5\">\r\n            <div className=\"w-full pl-[3%]\">\r\n              <label className=\"block pb-2\">Shop Phone Number</label>\r\n            </div>\r\n            <input\r\n              type=\"number\"\r\n              placeholder={seller?.phoneNumber}\r\n              value={phoneNumber}\r\n              onChange={(e) => setPhoneNumber(e.target.value)}\r\n              className={`${styles.input} !w-[95%] mb-4 800px:mb-0`}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"w-[100%] flex items-center flex-col 800px:w-[50%] mt-5\">\r\n            <div className=\"w-full pl-[3%]\">\r\n              <label className=\"block pb-2\">Shop Zip Code</label>\r\n            </div>\r\n            <input\r\n              type=\"number\"\r\n              placeholder={seller?.zipCode}\r\n              value={zipCode}\r\n              onChange={(e) => setZipcode(e.target.value)}\r\n              className={`${styles.input} !w-[95%] mb-4 800px:mb-0`}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"w-[100%] flex items-center flex-col 800px:w-[50%] mt-5\">\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Update Shop\"\r\n              className={`${styles.input} !w-[95%] mb-4 800px:mb-0`}\r\n              required\r\n              readOnly\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShopSettings;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Shop\\WithdrawMoney.jsx",["735"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllOrdersOfShop } from \"../../redux/actions/order\";\r\nimport styles from \"../../styles/styles\";\r\nimport { RxCross1 } from \"react-icons/rx\";\r\nimport axios from \"axios\";\r\nimport { server } from \"../../server\";\r\nimport { toast } from \"react-toastify\";\r\nimport { loadSeller } from \"../../redux/actions/user\";\r\nimport { AiOutlineDelete } from \"react-icons/ai\";\r\n\r\nconst WithdrawMoney = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const { seller } = useSelector((state) => state.seller);\r\n  const [paymentMethod, setPaymentMethod] = useState(false);\r\n  const [withdrawAmount, setWithdrawAmount] = useState(50);\r\n  const [bankInfo, setBankInfo] = useState({\r\n    bankName: \"\",\r\n    bankCountry: \"\",\r\n    bankSwiftCode: null,\r\n    bankAccountNumber: null,\r\n    bankHolderName: \"\",\r\n    bankAddress: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllOrdersOfShop(seller._id));\r\n  }, [dispatch]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const withdrawMethod = {\r\n      bankName: bankInfo.bankName,\r\n      bankCountry: bankInfo.bankCountry,\r\n      bankSwiftCode: bankInfo.bankSwiftCode,\r\n      bankAccountNumber: bankInfo.bankAccountNumber,\r\n      bankHolderName: bankInfo.bankHolderName,\r\n      bankAddress: bankInfo.bankAddress,\r\n    };\r\n\r\n    setPaymentMethod(false);\r\n\r\n    await axios\r\n      .put(\r\n        `${server}/shop/update-payment-methods`,\r\n        {\r\n          withdrawMethod,\r\n        },\r\n        { withCredentials: true }\r\n      )\r\n      .then((res) => {\r\n        toast.success(\"Withdraw method added successfully!\");\r\n        dispatch(loadSeller());\r\n        setBankInfo({\r\n          bankName: \"\",\r\n          bankCountry: \"\",\r\n          bankSwiftCode: null,\r\n          bankAccountNumber: null,\r\n          bankHolderName: \"\",\r\n          bankAddress: \"\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data.message);\r\n      });\r\n  };\r\n\r\n  const deleteHandler = async () => {\r\n    await axios\r\n      .delete(`${server}/shop/delete-withdraw-method`, {\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        toast.success(\"Withdraw method deleted successfully!\");\r\n        dispatch(loadSeller());\r\n      });\r\n  };\r\n\r\n  const error = () => {\r\n    toast.error(\"You not have enough balance to withdraw!\");\r\n  };\r\n\r\n  const withdrawHandler = async () => {\r\n    if (withdrawAmount < 50 || withdrawAmount > availableBalance) {\r\n      toast.error(\"You can't withdraw this amount!\");\r\n    } else {\r\n      const amount = withdrawAmount;\r\n      await axios\r\n        .post(\r\n          `${server}/withdraw/create-withdraw-request`,\r\n          { amount },\r\n          { withCredentials: true }\r\n        )\r\n        .then((res) => {\r\n          toast.success(\"Withdraw money request is successful!\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const availableBalance = seller?.availableBalance.toFixed(2);\r\n\r\n  return (\r\n    <div className=\"w-full h-[90vh] p-8\">\r\n      <div className=\"w-full bg-white h-full rounded flex items-center justify-center flex-col\">\r\n        <h5 className=\"text-[20px] pb-4\">\r\n          Available Balance: ${availableBalance}\r\n        </h5>\r\n        <div\r\n          className={`${styles.button} text-white !h-[42px] !rounded`}\r\n          onClick={() => (availableBalance < 50 ? error() : setOpen(true))}\r\n        >\r\n          Withdraw\r\n        </div>\r\n      </div>\r\n      {open && (\r\n        <div className=\"w-full h-screen z-[9999] fixed top-0 left-0 flex items-center justify-center bg-[#0000004e]\">\r\n          <div\r\n            className={`w-[95%] 800px:w-[50%] bg-white shadow rounded ${\r\n              paymentMethod ? \"h-[80vh] overflow-y-scroll\" : \"h-[unset]\"\r\n            } min-h-[40vh] p-3`}\r\n          >\r\n            <div className=\"w-full flex justify-end\">\r\n              <RxCross1\r\n                size={25}\r\n                onClick={() => setOpen(false) || setPaymentMethod(false)}\r\n                className=\"cursor-pointer\"\r\n              />\r\n            </div>\r\n            {paymentMethod ? (\r\n              <div>\r\n                <h3 className=\"text-[22px] font-Poppins text-center font-[600]\">\r\n                  Add new Withdraw Method:\r\n                </h3>\r\n                <form onSubmit={handleSubmit}>\r\n                  <div>\r\n                    <label>\r\n                      Bank Name <span className=\"text-red-500\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"\"\r\n                      required\r\n                      value={bankInfo.bankName}\r\n                      onChange={(e) =>\r\n                        setBankInfo({ ...bankInfo, bankName: e.target.value })\r\n                      }\r\n                      id=\"\"\r\n                      placeholder=\"Enter your Bank name!\"\r\n                      className={`${styles.input} mt-2`}\r\n                    />\r\n                  </div>\r\n                  <div className=\"pt-2\">\r\n                    <label>\r\n                      Bank Country <span className=\"text-red-500\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"\"\r\n                      value={bankInfo.bankCountry}\r\n                      onChange={(e) =>\r\n                        setBankInfo({\r\n                          ...bankInfo,\r\n                          bankCountry: e.target.value,\r\n                        })\r\n                      }\r\n                      id=\"\"\r\n                      required\r\n                      placeholder=\"Enter your bank Country!\"\r\n                      className={`${styles.input} mt-2`}\r\n                    />\r\n                  </div>\r\n                  <div className=\"pt-2\">\r\n                    <label>\r\n                      Bank Swift Code <span className=\"text-red-500\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"\"\r\n                      id=\"\"\r\n                      required\r\n                      value={bankInfo.bankSwiftCode}\r\n                      onChange={(e) =>\r\n                        setBankInfo({\r\n                          ...bankInfo,\r\n                          bankSwiftCode: e.target.value,\r\n                        })\r\n                      }\r\n                      placeholder=\"Enter your Bank Swift Code!\"\r\n                      className={`${styles.input} mt-2`}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"pt-2\">\r\n                    <label>\r\n                      Bank Account Number{\" \"}\r\n                      <span className=\"text-red-500\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      name=\"\"\r\n                      id=\"\"\r\n                      value={bankInfo.bankAccountNumber}\r\n                      onChange={(e) =>\r\n                        setBankInfo({\r\n                          ...bankInfo,\r\n                          bankAccountNumber: e.target.value,\r\n                        })\r\n                      }\r\n                      required\r\n                      placeholder=\"Enter your bank account number!\"\r\n                      className={`${styles.input} mt-2`}\r\n                    />\r\n                  </div>\r\n                  <div className=\"pt-2\">\r\n                    <label>\r\n                      Bank Holder Name <span className=\"text-red-500\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"\"\r\n                      required\r\n                      value={bankInfo.bankHolderName}\r\n                      onChange={(e) =>\r\n                        setBankInfo({\r\n                          ...bankInfo,\r\n                          bankHolderName: e.target.value,\r\n                        })\r\n                      }\r\n                      id=\"\"\r\n                      placeholder=\"Enter your bank Holder name!\"\r\n                      className={`${styles.input} mt-2`}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"pt-2\">\r\n                    <label>\r\n                      Bank Address <span className=\"text-red-500\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"\"\r\n                      required\r\n                      id=\"\"\r\n                      value={bankInfo.bankAddress}\r\n                      onChange={(e) =>\r\n                        setBankInfo({\r\n                          ...bankInfo,\r\n                          bankAddress: e.target.value,\r\n                        })\r\n                      }\r\n                      placeholder=\"Enter your bank address!\"\r\n                      className={`${styles.input} mt-2`}\r\n                    />\r\n                  </div>\r\n\r\n                  <button\r\n                    type=\"submit\"\r\n                    className={`${styles.button} mb-3 text-white`}\r\n                  >\r\n                    Add\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <h3 className=\"text-[22px] font-Poppins\">\r\n                  Available Withdraw Methods:\r\n                </h3>\r\n\r\n                {seller && seller?.withdrawMethod ? (\r\n                  <div>\r\n                    <div className=\"800px:flex w-full justify-between items-center\">\r\n                      <div className=\"800px:w-[50%]\">\r\n                        <h5>\r\n                          Account Number:{\" \"}\r\n                          {\"*\".repeat(\r\n                            seller?.withdrawMethod.bankAccountNumber.length - 3\r\n                          ) +\r\n                            seller?.withdrawMethod.bankAccountNumber.slice(-3)}\r\n                        </h5>\r\n                        <h5>Bank Name: {seller?.withdrawMethod.bankName}</h5>\r\n                      </div>\r\n                      <div className=\"800px:w-[50%]\">\r\n                        <AiOutlineDelete\r\n                          size={25}\r\n                          className=\"cursor-pointer\"\r\n                          onClick={() => deleteHandler()}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <br />\r\n                    <h4>Available Balance: {availableBalance}$</h4>\r\n                    <br />\r\n                    <div className=\"800px:flex w-full items-center\">\r\n                      <input\r\n                        type=\"number\"\r\n                        placeholder=\"Amount...\"\r\n                        value={withdrawAmount}\r\n                        onChange={(e) => setWithdrawAmount(e.target.value)}\r\n                        className=\"800px:w-[100px] w-[full] border 800px:mr-3 p-1 rounded\"\r\n                      />\r\n                      <div\r\n                        className={`${styles.button} !h-[42px] text-white`}\r\n                        onClick={withdrawHandler}\r\n                      >\r\n                        Withdraw\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <p className=\"text-[18px] pt-2\">\r\n                      No Withdraw Methods available!\r\n                    </p>\r\n                    <div className=\"w-full flex items-center\">\r\n                      <div\r\n                        className={`${styles.button} text-[#fff] text-[18px] mt-4`}\r\n                        onClick={() => setPaymentMethod(true)}\r\n                      >\r\n                        Add new\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WithdrawMoney;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\static\\data.js",["736","737","738"],[],"// navigation Data\r\nexport const navItems = [\r\n    {\r\n      title: \"Home\",\r\n      url: \"/\",\r\n    },\r\n    {\r\n      title: \"Best Selling\",\r\n      url: \"/best-selling\",\r\n    },\r\n    {\r\n      title: \"Products\",\r\n      url: \"/products\",\r\n    },\r\n    {\r\n      title: \"Events\",\r\n      url: \"/events\",\r\n    },\r\n    {\r\n      title: \"FAQ\",\r\n      url: \"/faq\",\r\n    },\r\n  ];\r\n  \r\n  // branding data\r\n  export const brandingData = [\r\n    {\r\n      id: 1,\r\n      title: \"Free Shipping\",\r\n      Description: \"From all orders over 100$\",\r\n      icon: (\r\n        <svg\r\n          width=\"36\"\r\n          height=\"36\"\r\n          viewBox=\"0 0 36 36\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M1 1H5.63636V24.1818H35\"\r\n            stroke=\"#FFBB38\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"square\"\r\n          ></path>\r\n          <path\r\n            d=\"M8.72763 35.0002C10.4347 35.0002 11.8185 33.6163 11.8185 31.9093C11.8185 30.2022 10.4347 28.8184 8.72763 28.8184C7.02057 28.8184 5.63672 30.2022 5.63672 31.9093C5.63672 33.6163 7.02057 35.0002 8.72763 35.0002Z\"\r\n            stroke=\"#FFBB38\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"square\"\r\n          ></path>\r\n          <path\r\n            d=\"M31.9073 35.0002C33.6144 35.0002 34.9982 33.6163 34.9982 31.9093C34.9982 30.2022 33.6144 28.8184 31.9073 28.8184C30.2003 28.8184 28.8164 30.2022 28.8164 31.9093C28.8164 33.6163 30.2003 35.0002 31.9073 35.0002Z\"\r\n            stroke=\"#FFBB38\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"square\"\r\n          ></path>\r\n          <path\r\n            d=\"M34.9982 1H11.8164V18H34.9982V1Z\"\r\n            stroke=\"#FFBB38\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"square\"\r\n          ></path>\r\n          <path\r\n            d=\"M11.8164 7.18164H34.9982\"\r\n            stroke=\"#FFBB38\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"square\"\r\n          ></path>\r\n        </svg>\r\n      ),\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Daily Surprise Offers\",\r\n      Description: \"Save up to 25% off\",\r\n      icon: (\r\n        <svg\r\n          width=\"32\"\r\n          height=\"34\"\r\n          viewBox=\"0 0 32 34\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M31 17.4502C31 25.7002 24.25 32.4502 16 32.4502C7.75 32.4502 1 25.7002 1 17.4502C1 9.2002 7.75 2.4502 16 2.4502C21.85 2.4502 26.95 5.7502 29.35 10.7002\"\r\n            stroke=\"#FFBB38\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n          ></path>\r\n          <path\r\n            d=\"M30.7 2L29.5 10.85L20.5 9.65\"\r\n            stroke=\"#FFBB38\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"square\"\r\n          ></path>\r\n        </svg>\r\n      ),\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Affortable Prices\",\r\n      Description: \"Get Factory direct price\",\r\n      icon: (\r\n        <svg\r\n          width=\"32\"\r\n          height=\"35\"\r\n          viewBox=\"0 0 32 35\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M7 13H5.5C2.95 13 1 11.05 1 8.5V1H7\"\r\n            stroke=\"#FFBB38\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n          ></path>\r\n          <path\r\n            d=\"M25 13H26.5C29.05 13 31 11.05 31 8.5V1H25\"\r\n            stroke=\"#FFBB38\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n          ></path>\r\n          <path\r\n            d=\"M16 28V22\"\r\n            stroke=\"#FFBB38\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n          ></path>\r\n          <path\r\n            d=\"M16 22C11.05 22 7 17.95 7 13V1H25V13C25 17.95 20.95 22 16 22Z\"\r\n            stroke=\"#FFBB38\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"square\"\r\n          ></path>\r\n          <path\r\n            d=\"M25 34H7C7 30.7 9.7 28 13 28H19C22.3 28 25 30.7 25 34Z\"\r\n            stroke=\"#FFBB38\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"square\"\r\n          ></path>\r\n        </svg>\r\n      ),\r\n    },\r\n    {\r\n      id: 5,\r\n      title: \"Secure Payments\",\r\n      Description: \"100% protected payments\",\r\n      icon: (\r\n        <svg\r\n          width=\"32\"\r\n          height=\"38\"\r\n          viewBox=\"0 0 32 38\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M22.6654 18.667H9.33203V27.0003H22.6654V18.667Z\"\r\n            stroke=\"#FFBB38\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"square\"\r\n          ></path>\r\n          <path\r\n            d=\"M12.668 18.6663V13.6663C12.668 11.833 14.168 10.333 16.0013 10.333C17.8346 10.333 19.3346 11.833 19.3346 13.6663V18.6663\"\r\n            stroke=\"#FFBB38\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"square\"\r\n          ></path>\r\n          <path\r\n            d=\"M31 22C31 30.3333 24.3333 37 16 37C7.66667 37 1 30.3333 1 22V5.33333L16 2L31 5.33333V22Z\"\r\n            stroke=\"#FFBB38\"\r\n            stroke-width=\"2\"\r\n            stroke-miterlimit=\"10\"\r\n            stroke-linecap=\"square\"\r\n          ></path>\r\n        </svg>\r\n      ),\r\n    },\r\n  ];\r\n  \r\n  // categories data\r\n  export const categoriesData = [\r\n    {\r\n      id: 1,\r\n      title: \"Computers and Laptops\",\r\n      subTitle: \"\",\r\n      image_Url:\r\n        \"https://cdn.shopify.com/s/files/1/1706/9177/products/NEWAppleMacbookProwithM1ProChip14InchLaptop2021ModelMKGQ3LL_A_16GB_1TBSSD_custommacbd.jpg?v=1659592838\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"cosmetics and body care\",\r\n      subTitle: \"\",\r\n      image_Url:\r\n        \"https://indian-retailer.s3.ap-south-1.amazonaws.com/s3fs-public/2021-07/kosme1.png\",\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Accesories\",\r\n      subTitle: \"\",\r\n      image_Url:\r\n        \"https://img.freepik.com/free-vector/ordering-goods-online-internet-store-online-shopping-niche-e-commerce-website-mother-buying-babies-clothes-footwear-toys-infant-accessories_335657-2345.jpg?w=2000\",\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Cloths\",\r\n      subTitle: \"\",\r\n      image_Url:\r\n        \"https://www.shift4shop.com/2015/images/industries/clothing/clothing-apparel.png\",\r\n    },\r\n    {\r\n      id: 5,\r\n      title: \"Shoes\",\r\n      subTitle: \"\",\r\n      image_Url:\r\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQvBQPQMVNRd6TtDkGs2dCri0Y-rxKkFOiEWw&usqp=CAU\",\r\n    },\r\n    {\r\n      id: 6,\r\n      title: \"Gifts\",\r\n      subTitle: \"\",\r\n      image_Url:\r\n        \"https://securecdn.pymnts.com/wp-content/uploads/2014/11/Gifts-Photo-700x489.jpg\",\r\n    },\r\n    {\r\n      id: 7,\r\n      title: \"Pet Care\",\r\n      subTitle: \"\",\r\n      image_Url: \"https://cdn.openpr.com/T/c/Tc15444071_g.jpg\",\r\n    },\r\n    {\r\n      id: 8,\r\n      title: \"Mobile and Tablets\",\r\n      subTitle: \"\",\r\n      image_Url:\r\n        \"https://st-troy.mncdn.com/mnresize/1500/1500/Content/media/ProductImg/original/mpwp3tua-apple-iphone-14-256gb-mavi-mpwp3tua-637986832343472449.jpg\",\r\n    },\r\n    {\r\n      id: 9,\r\n      title: \"Music and Gaming\",\r\n      subTitle: \"\",\r\n      image_Url:\r\n        \"https://static.vecteezy.com/system/resources/previews/011/996/555/original/3d-black-headphone-illustration-ecommerce-icon-png.png\",\r\n    },\r\n    {\r\n      id: 10,\r\n      title: \"Others\",\r\n      subTitle: \"\",\r\n      image_Url:\r\n        \"https://searchspring.com/wp-content/uploads/2022/10/Hero-Image-Platform-Others-2.png\",\r\n    },\r\n  ];\r\n  \r\n  // product Data\r\n  export const productData = [\r\n    {\r\n      id: 1,\r\n      category:\"Computers and Laptops\",\r\n      name: \"MacBook pro M2 chipset 256gb ssd 8gb ram space-gray color with apple 1 year warranty\",\r\n      description:\r\n        \"Product details are a crucial part of any eCommerce website or online marketplace. These details help the potential customers to make an informed decision about the product they are interested in buying. A well-written product description can also be a powerful marketing tool that can help to increase sales.Product details typically include information about the product's features, specifications, dimensions, weight, materials, and other relevant information that can help customers to understand the product better. The product details section should also include high-quality images and videos of the product, as well as customer reviews and ratings.\",\r\n      image_Url: [\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://www.istorebangladesh.com/images/thumbs/0000286_macbook-pro-m1_550.png\",\r\n        },\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://www.istorebangladesh.com/images/thumbs/0000286_macbook-pro-m1_550.png\",\r\n        },\r\n      ],\r\n      shop: {\r\n        name: \"Apple inc.\",\r\n        shop_avatar: {\r\n          public_id: \"test\",\r\n          url: \"https://www.hatchwise.com/wp-content/uploads/2022/05/amazon-logo-1024x683.png\",\r\n        },\r\n        ratings: 4.2,\r\n      },\r\n      price: 1099,\r\n      discount_price: 1049,\r\n      rating: 4,\r\n      total_sell: 35,\r\n      stock: 10,\r\n    },\r\n    {\r\n      id: 2,\r\n      category:\"Mobile and Tablets\",\r\n      name: \"Iphone 14 pro max 256 gb ssd and 8 gb ram silver colour\",\r\n      description:\r\n        \"Product details are a crucial part of any eCommerce website or online marketplace. These details help the potential customers to make an informed decision about the product they are interested in buying. A well-written product description can also be a powerful marketing tool that can help to increase sales.Product details typically include information about the product's features, specifications, dimensions, weight, materials, and other relevant information that can help customers to understand the product better. The product details section should also include high-quality images and videos of the product, as well as customer reviews and ratings.\",\r\n      image_Url: [\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://m.media-amazon.com/images/I/31Vle5fVdaL.jpg\",\r\n        },\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://m.media-amazon.com/images/I/31Vle5fVdaL.jpg\",\r\n        },\r\n      ],\r\n      shop: {\r\n        name: \"Amazon Ltd\",\r\n        shop_avatar: {\r\n          public_id: \"test\",\r\n          url: \"https://www.hatchwise.com/wp-content/uploads/2022/05/amazon-logo-1024x683.png\",\r\n        },\r\n        ratings: 4.2,\r\n      },\r\n      discount_price: 1099,\r\n      rating: 5,\r\n      total_sell: 80,\r\n      stock: 10,\r\n      category:\"Mobile & Tablets\"\r\n    },\r\n    {\r\n      id: 1,\r\n      category:\"Computers and Laptop\",\r\n      name: \"MacBook pro M2 chipset 256gb ssd 8gb ram space gray color with apple 1 year warranty\",\r\n      description:\r\n        \"Product details are a crucial part of any eCommerce website or online marketplace. These details help the potential customers to make an informed decision about the product they are interested in buying. A well-written product description can also be a powerful marketing tool that can help to increase sales.Product details typically include information about the product's features, specifications, dimensions, weight, materials, and other relevant information that can help customers to understand the product better. The product details section should also include high-quality images and videos of the product, as well as customer reviews and ratings.\",\r\n      image_Url: [\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://www.istorebangladesh.com/images/thumbs/0000286_macbook-pro-m1_550.png\",\r\n        },\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://www.istorebangladesh.com/images/thumbs/0000286_macbook-pro-m1_550.png\",\r\n        },\r\n      ],\r\n      shop: {\r\n        name: \"Apple inc.\",\r\n        shop_avatar: {\r\n          public_id: \"test\",\r\n          url: \"https://www.hatchwise.com/wp-content/uploads/2022/05/amazon-logo-1024x683.png\",\r\n        },\r\n        ratings: 4.2,\r\n      },\r\n      price: 1099,\r\n      discount_price: 1049,\r\n      rating: 4,\r\n      total_sell: 75,\r\n      stock: 10,\r\n      category:\"Computers & Laptop\"\r\n    },\r\n    {\r\n      id: 4,\r\n      category:\"Others\",\r\n      name: \"New Fashionable Watch for men 2023 with multiple colors\",\r\n      description:\r\n        \"Product details are a crucial part of any eCommerce website or online marketplace. These details help the potential customers to make an informed decision about the product they are interested in buying. A well-written product description can also be a powerful marketing tool that can help to increase sales.Product details typically include information about the product's features, specifications, dimensions, weight, materials, and other relevant information that can help customers to understand the product better. The product details section should also include high-quality images and videos of the product, as well as customer reviews and ratings.\",\r\n      image_Url: [\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://i0.wp.com/eccocibd.com/wp-content/uploads/2022/01/1802NL02_1.png?fit=550%2C550&ssl=1\",\r\n        },\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://i0.wp.com/eccocibd.com/wp-content/uploads/2022/01/1802NL02_1.png?fit=550%2C550&ssl=1\",\r\n        },\r\n      ],\r\n      shop: {\r\n        name: \"Shahriar Watch House\",\r\n        shop_avatar: {\r\n          public_id: \"test\",\r\n          url: \"https://www.hatchwise.com/wp-content/uploads/2022/05/amazon-logo-1024x683.png\",\r\n        },\r\n        ratings: 4.2,\r\n      category:\"Others\"\r\n      },\r\n      price: 100,\r\n      discount_price: 79,\r\n      rating: 4,\r\n      total_sell: 12,\r\n      stock: 10,\r\n    },\r\n    {\r\n      id: 5,\r\n      category:\"Shoes\",\r\n      name: \"New Trend shoes for gents with all sizes\",\r\n      description:\r\n        \"Product details are a crucial part of any eCommerce website or online marketplace. These details help the potential customers to make an informed decision about the product they are interested in buying. A well-written product description can also be a powerful marketing tool that can help to increase sales.Product details typically include information about the product's features, specifications, dimensions, weight, materials, and other relevant information that can help customers to understand the product better. The product details section should also include high-quality images and videos of the product, as well as customer reviews and ratings.\",\r\n      image_Url: [\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://mirzacdns3.s3.ap-south-1.amazonaws.com/cache/catalog/RLV0015/2-800x800.jpg\",\r\n        },\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://mirzacdns3.s3.ap-south-1.amazonaws.com/cache/catalog/RLV0015/2-800x800.jpg\",\r\n        },\r\n      ],\r\n      shop: {\r\n        name: \"Alisha Shoes Mart\",\r\n        shop_avatar: {\r\n          public_id: \"test\",\r\n          url: \"https://www.hatchwise.com/wp-content/uploads/2022/05/amazon-logo-1024x683.png\",\r\n        },\r\n        ratings: 4.2,\r\n      },\r\n      price: 120,\r\n      discount_price: 89,\r\n      rating: 5,\r\n      total_sell: 49,\r\n      stock: 10,\r\n      category:\"Shoes\"\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"Gaming Headphone Asus with mutiple color and free delivery\",\r\n      description:\r\n        \"Product details are a crucial part of any eCommerce website or online marketplace. These details help the potential customers to make an informed decision about the product they are interested in buying. A well-written product description can also be a powerful marketing tool that can help to increase sales.Product details typically include information about the product's features, specifications, dimensions, weight, materials, and other relevant information that can help customers to understand the product better. The product details section should also include high-quality images and videos of the product, as well as customer reviews and ratings.\",\r\n      image_Url: [\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://www.startech.com.bd/image/cache/catalog/headphone/havit/h763d/h763d-02-500x500.jpg\",\r\n        },\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://eratablet.com/wp-content/uploads/2022/08/H51ba6537405f4948972e293927673546u.jpg\",\r\n        },\r\n      ],\r\n      shop: {\r\n        name: \"Asus Ltd\",\r\n        shop_avatar: {\r\n          public_id: \"test\",\r\n          url: \"https://www.hatchwise.com/wp-content/uploads/2022/05/amazon-logo-1024x683.png\",\r\n        },\r\n        ratings: 4.2,\r\n      },\r\n      price: 300,\r\n      discount_price: 239,\r\n      rating: 4.5,\r\n      reviews: [\r\n        {\r\n          user: {\r\n            // user object will be here\r\n          },\r\n          comment: \"IT's so cool!\",\r\n          rating: 5,\r\n        },\r\n      ],\r\n      total_sell: 20,\r\n      stock: 10,\r\n      category:\"Music and Gaming\"\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"New Fashionable Watch for men 2023 with multiple colors\",\r\n      description:\r\n        \"Product details are a crucial part of any eCommerce website or online marketplace. These details help the potential customers to make an informed decision about the product they are interested in buying. A well-written product description can also be a powerful marketing tool that can help to increase sales.Product details typically include information about the product's features, specifications, dimensions, weight, materials, and other relevant information that can help customers to understand the product better. The product details section should also include high-quality images and videos of the product, as well as customer reviews and ratings.\",\r\n      image_Url: [\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://i0.wp.com/eccocibd.com/wp-content/uploads/2022/01/1802NL02_1.png?fit=550%2C550&ssl=1\",\r\n        },\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://i0.wp.com/eccocibd.com/wp-content/uploads/2022/01/1802NL02_1.png?fit=550%2C550&ssl=1\",\r\n        },\r\n      ],\r\n      shop: {\r\n        name: \"Shahriar Watch House\",\r\n        shop_avatar: {\r\n          public_id: \"test\",\r\n          url: \"https://www.hatchwise.com/wp-content/uploads/2022/05/amazon-logo-1024x683.png\",\r\n        },\r\n        ratings: 4.2,\r\n      },\r\n      price: 100,\r\n      discount_price: 79,\r\n      rating: 4,\r\n      total_sell: 62,\r\n      stock: 10,\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"Gaming Headphone Asus with mutiple color and free delivery\",\r\n      description:\r\n        \"Product details are a crucial part of any eCommerce website or online marketplace. These details help the potential customers to make an informed decision about the product they are interested in buying. A well-written product description can also be a powerful marketing tool that can help to increase sales.Product details typically include information about the product's features, specifications, dimensions, weight, materials, and other relevant information that can help customers to understand the product better. The product details section should also include high-quality images and videos of the product, as well as customer reviews and ratings.\",\r\n      image_Url: [\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://www.startech.com.bd/image/cache/catalog/headphone/havit/h763d/h763d-02-500x500.jpg\",\r\n        },\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://eratablet.com/wp-content/uploads/2022/08/H51ba6537405f4948972e293927673546u.jpg\",\r\n        },\r\n      ],\r\n      shop: {\r\n        name: \"Asus Ltd\",\r\n        shop_avatar: {\r\n          public_id: \"test\",\r\n          url: \"https://www.hatchwise.com/wp-content/uploads/2022/05/amazon-logo-1024x683.png\",\r\n        },\r\n        ratings: 4.2,\r\n      },\r\n      price: 300,\r\n      discount_price: 239,\r\n      rating: 4.5,\r\n      reviews: [\r\n        {\r\n          user: {\r\n            // user object will be here\r\n          },\r\n          comment: \"IT's so cool!\",\r\n          rating: 5,\r\n        },\r\n      ],\r\n      total_sell: 20,\r\n      stock: 10,\r\n    },\r\n    {\r\n      id: 2,\r\n      category:\"Mobile and Tablets\",\r\n      name: \"Iphone 14 pro max 256 gb ssd and 8 gb ram silver colour\",\r\n      description:\r\n        \"Product details are a crucial part of any eCommerce website or online marketplace. These details help the potential customers to make an informed decision about the product they are interested in buying. A well-written product description can also be a powerful marketing tool that can help to increase sales.Product details typically include information about the product's features, specifications, dimensions, weight, materials, and other relevant information that can help customers to understand the product better. The product details section should also include high-quality images and videos of the product, as well as customer reviews and ratings.\",\r\n      image_Url: [\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://m.media-amazon.com/images/I/31Vle5fVdaL.jpg\",\r\n        },\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://m.media-amazon.com/images/I/31Vle5fVdaL.jpg\",\r\n        },\r\n      ],\r\n      shop: {\r\n        name: \"Amazon Ltd\",\r\n        shop_avatar: {\r\n          public_id: \"test\",\r\n          url: \"https://www.hatchwise.com/wp-content/uploads/2022/05/amazon-logo-1024x683.png\",\r\n        },\r\n        ratings: 4.2,\r\n      },\r\n      discount_price: 1099,\r\n      rating: 5,\r\n      total_sell: 20,\r\n      stock: 10,\r\n    },\r\n    {\r\n      id: 1,\r\n      category:\"Music and Gaming\",\r\n      name: \"Gaming Headphone Asus with mutiple color and free delivery\",\r\n      description:\r\n        \"Product details are a crucial part of any eCommerce website or online marketplace. These details help the potential customers to make an informed decision about the product they are interested in buying. A well-written product description can also be a powerful marketing tool that can help to increase sales.Product details typically include information about the product's features, specifications, dimensions, weight, materials, and other relevant information that can help customers to understand the product better. The product details section should also include high-quality images and videos of the product, as well as customer reviews and ratings.\",\r\n      image_Url: [\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://www.startech.com.bd/image/cache/catalog/headphone/havit/h763d/h763d-02-500x500.jpg\",\r\n        },\r\n        {\r\n          public_id: \"test\",\r\n          url: \"https://eratablet.com/wp-content/uploads/2022/08/H51ba6537405f4948972e293927673546u.jpg\",\r\n        },\r\n      ],\r\n      shop: {\r\n        name: \"Asus Ltd\",\r\n        shop_avatar: {\r\n          public_id: \"test\",\r\n          url: \"https://www.hatchwise.com/wp-content/uploads/2022/05/amazon-logo-1024x683.png\",\r\n        },\r\n        ratings: 4.2,\r\n      },\r\n      price: 300,\r\n      discount_price: 239,\r\n      rating: 4.5,\r\n      reviews: [\r\n        {\r\n          user: {\r\n            // user object will be here\r\n          },\r\n          comment: \"IT's so cool!\",\r\n          rating: 5,\r\n        },\r\n      ],\r\n      total_sell: 20,\r\n      stock: 10,\r\n    },\r\n  ];\r\n  \r\n  export const footerProductLinks = [\r\n    {\r\n      name: \"About us\",\r\n      link: \"/about\"\r\n    },\r\n    {\r\n      name: \"Careers\",\r\n      link: \"/carrers\"\r\n    },\r\n    {\r\n      name: \"Store Locations\",\r\n    },\r\n    {\r\n      name: \"Our Blog\",\r\n    },\r\n    {\r\n      name: \"Reviews\",\r\n    },\r\n  ];\r\n  \r\n  export const footercompanyLinks = [\r\n    {\r\n      name: \"Game & Video\",\r\n    },\r\n    {\r\n      name: \"Phone &Tablets\",\r\n    },\r\n    {\r\n      name: \"Computers & Laptop\",\r\n    },\r\n    {\r\n      name: \"Sport Watches\",\r\n    },\r\n    {\r\n      name: \"Events\",\r\n    },\r\n  ];\r\n  \r\n  export const footerSupportLinks = [\r\n    {\r\n      name: \"FAQ\",\r\n    },\r\n    {\r\n      name: \"Reviews\",\r\n    },\r\n    {\r\n      name: \"Contact Us\",\r\n    },\r\n    {\r\n      name: \"Shipping\",\r\n    },\r\n    {\r\n      name: \"Live chat\",\r\n    },\r\n  ];\r\n  ","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Layout\\DropDown.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\redux\\actions\\cart.js",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Layout\\Navbar.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\redux\\actions\\wishlist.js",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Events\\CountDown.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\cart\\Cart.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Products\\Ratings.jsx",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\redux\\actions\\sellers.js",[],[],"C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Wishlist\\Wishlist.jsx",["739"],[],"import React, { useState } from \"react\";\r\nimport { RxCross1 } from \"react-icons/rx\";\r\nimport { BsCartPlus } from \"react-icons/bs\";\r\nimport styles from \"../../styles/styles\";\r\nimport { AiOutlineHeart } from \"react-icons/ai\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { removeFromWishlist } from \"../../redux/actions/wishlist\";\r\nimport { addTocart } from \"../../redux/actions/cart\";\r\n\r\nconst Wishlist = ({ setOpenWishlist }) => {\r\n  const { wishlist } = useSelector((state) => state.wishlist);\r\n  const dispatch = useDispatch();\r\n\r\n  const removeFromWishlistHandler = (data) => {\r\n    dispatch(removeFromWishlist(data));\r\n  };\r\n\r\n  const addToCartHandler = (data) => {\r\n    const newData = {...data, qty:1};\r\n    dispatch(addTocart(newData));\r\n    setOpenWishlist(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed top-0 left-0 w-full bg-[#0000004b] h-screen z-10\">\r\n      <div className=\"fixed top-0 right-0 h-full w-[80%] overflow-y-scroll 800px:w-[25%] bg-white flex flex-col justify-between shadow-sm\">\r\n        {wishlist && wishlist.length === 0 ? (\r\n          <div className=\"w-full h-screen flex items-center justify-center\">\r\n            <div className=\"flex w-full justify-end pt-5 pr-5 fixed top-3 right-3\">\r\n              <RxCross1\r\n                size={25}\r\n                className=\"cursor-pointer\"\r\n                onClick={() => setOpenWishlist(false)}\r\n              />\r\n            </div>\r\n            <h5>Wishlist Items is empty!</h5>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <div className=\"flex w-full justify-end pt-5 pr-5\">\r\n                <RxCross1\r\n                  size={25}\r\n                  className=\"cursor-pointer\"\r\n                  onClick={() => setOpenWishlist(false)}\r\n                />\r\n              </div>\r\n              {/* Item length */}\r\n              <div className={`${styles.noramlFlex} p-4`}>\r\n                <AiOutlineHeart size={25} />\r\n                <h5 className=\"pl-2 text-[20px] font-[500]\">\r\n                  {wishlist && wishlist.length} items\r\n                </h5>\r\n              </div>\r\n\r\n              {/* cart Single Items */}\r\n              <br />\r\n              <div className=\"w-full border-t\">\r\n                {wishlist &&\r\n                  wishlist.map((i, index) => (\r\n                    <CartSingle key={index} data={i} removeFromWishlistHandler={removeFromWishlistHandler} addToCartHandler={addToCartHandler} />\r\n                  ))}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CartSingle = ({ data,removeFromWishlistHandler,addToCartHandler }) => {\r\n  const [value, setValue] = useState(1);\r\n  const totalPrice = data.discountPrice * value;\r\n\r\n  return (\r\n    <div className=\"border-b p-4\">\r\n      <div className=\"w-full 800px:flex items-center\">\r\n        <RxCross1 className=\"cursor-pointer 800px:mb-['unset'] 800px:ml-['unset'] mb-2 ml-2\"\r\n        onClick={() => removeFromWishlistHandler(data)}\r\n        />\r\n        <img\r\n          src={`${data?.images[0]?.url}`}\r\n          alt=\"\"\r\n          className=\"w-[130px] h-min ml-2 mr-2 rounded-[5px]\"\r\n        />\r\n\r\n        <div className=\"pl-[5px]\">\r\n          <h1>{data.name}</h1>\r\n          <h4 className=\"font-[600] pt-3 800px:pt-[3px] text-[17px] text-[#d02222] font-Roboto\">\r\n            US${totalPrice}\r\n          </h4>\r\n        </div>\r\n        <div>\r\n          <BsCartPlus size={20} className=\"cursor-pointer\" tile=\"Add to cart\"\r\n           onClick={() => addToCartHandler(data)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wishlist;\r\n","C:\\Users\\DELL\\Desktop\\ecom\\Eshop-tutorial\\frontend\\src\\components\\Route\\ProductDetailsCard\\ProductDetailsCard.jsx",["740"],[],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  AiFillHeart,\r\n  AiOutlineHeart,\r\n  AiOutlineMessage,\r\n  AiOutlineShoppingCart,\r\n} from \"react-icons/ai\";\r\nimport { RxCross1 } from \"react-icons/rx\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"../../../styles/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { addTocart } from \"../../../redux/actions/cart\";\r\nimport {\r\n  addToWishlist,\r\n  removeFromWishlist,\r\n} from \"../../../redux/actions/wishlist\";\r\n\r\nconst ProductDetailsCard = ({ setOpen, data }) => {\r\n  const { cart } = useSelector((state) => state.cart);\r\n  const { wishlist } = useSelector((state) => state.wishlist);\r\n  const dispatch = useDispatch();\r\n  const [count, setCount] = useState(1);\r\n  const [click, setClick] = useState(false);\r\n  //   const [select, setSelect] = useState(false);\r\n\r\n  const handleMessageSubmit = () => {};\r\n\r\n  const decrementCount = () => {\r\n    if (count > 1) {\r\n      setCount(count - 1);\r\n    }\r\n  };\r\n\r\n  const incrementCount = () => {\r\n    setCount(count + 1);\r\n  };\r\n\r\n  const addToCartHandler = (id) => {\r\n    const isItemExists = cart && cart.find((i) => i._id === id);\r\n    if (isItemExists) {\r\n      toast.error(\"Item already in cart!\");\r\n    } else {\r\n      if (data.stock < count) {\r\n        toast.error(\"Product stock limited!\");\r\n      } else {\r\n        const cartData = { ...data, qty: count };\r\n        dispatch(addTocart(cartData));\r\n        toast.success(\"Item added to cart successfully!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (wishlist && wishlist.find((i) => i._id === data._id)) {\r\n      setClick(true);\r\n    } else {\r\n      setClick(false);\r\n    }\r\n  }, [wishlist]);\r\n\r\n  const removeFromWishlistHandler = (data) => {\r\n    setClick(!click);\r\n    dispatch(removeFromWishlist(data));\r\n  };\r\n\r\n  const addToWishlistHandler = (data) => {\r\n    setClick(!click);\r\n    dispatch(addToWishlist(data));\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-[#fff]\">\r\n      {data ? (\r\n        <div className=\"fixed w-full h-screen top-0 left-0 bg-[#00000030] z-40 flex items-center justify-center\">\r\n          <div className=\"w-[90%] 800px:w-[60%] h-[90vh] overflow-y-scroll 800px:h-[75vh] bg-white rounded-md shadow-sm relative p-4\">\r\n            <RxCross1\r\n              size={30}\r\n              className=\"absolute right-3 top-3 z-50\"\r\n              onClick={() => setOpen(false)}\r\n            />\r\n\r\n            <div className=\"block w-full 800px:flex\">\r\n              <div className=\"w-full 800px:w-[50%]\">\r\n                <img src={`${data.images && data.images[0]?.url}`} alt=\"\" />\r\n                <div className=\"flex\">\r\n                  <Link to={`/shop/preview/${data.shop._id}`} className=\"flex\">\r\n                    <img\r\n                      src={`${data.images && data.images[0]?.url}`}\r\n                      alt=\"\"\r\n                      className=\"w-[50px] h-[50px] rounded-full mr-2\"\r\n                    />\r\n                    <div>\r\n                      <h3 className={`${styles.shop_name}`}>\r\n                        {data.shop.name}\r\n                      </h3>\r\n                      <h5 className=\"pb-3 text-[15px]\">{data?.ratings} Ratings</h5>\r\n                    </div>\r\n                  </Link>\r\n                </div>\r\n                <div\r\n                  className={`${styles.button} bg-[#000] mt-4 rounded-[4px] h-11`}\r\n                  onClick={handleMessageSubmit}\r\n                >\r\n                  <span className=\"text-[#fff] flex items-center\">\r\n                    Send Message <AiOutlineMessage className=\"ml-1\" />\r\n                  </span>\r\n                </div>\r\n                <h5 className=\"text-[16px] text-[red] mt-5\">(50) Sold out</h5>\r\n              </div>\r\n\r\n              <div className=\"w-full 800px:w-[50%] pt-5 pl-[5px] pr-[5px]\">\r\n                <h1 className={`${styles.productTitle} text-[20px]`}>\r\n                  {data.name}\r\n                </h1>\r\n                <p>{data.description}</p>\r\n\r\n                <div className=\"flex pt-3\">\r\n                  <h4 className={`${styles.productDiscountPrice}`}>\r\n                    {data.discountPrice}$\r\n                  </h4>\r\n                  <h3 className={`${styles.price}`}>\r\n                    {data.originalPrice ? data.originalPrice + \"$\" : null}\r\n                  </h3>\r\n                </div>\r\n                <div className=\"flex items-center mt-12 justify-between pr-3\">\r\n                  <div>\r\n                    <button\r\n                      className=\"bg-gradient-to-r from-teal-400 to-teal-500 text-white font-bold rounded-l px-4 py-2 shadow-lg hover:opacity-75 transition duration-300 ease-in-out\"\r\n                      onClick={decrementCount}\r\n                    >\r\n                      -\r\n                    </button>\r\n                    <span className=\"bg-gray-200 text-gray-800 font-medium px-4 py-[11px]\">\r\n                      {count}\r\n                    </span>\r\n                    <button\r\n                      className=\"bg-gradient-to-r from-teal-400 to-teal-500 text-white font-bold rounded-l px-4 py-2 shadow-lg hover:opacity-75 transition duration-300 ease-in-out\"\r\n                      onClick={incrementCount}\r\n                    >\r\n                      +\r\n                    </button>\r\n                  </div>\r\n                  <div>\r\n                    {click ? (\r\n                      <AiFillHeart\r\n                        size={30}\r\n                        className=\"cursor-pointer\"\r\n                        onClick={() => removeFromWishlistHandler(data)}\r\n                        color={click ? \"red\" : \"#333\"}\r\n                        title=\"Remove from wishlist\"\r\n                      />\r\n                    ) : (\r\n                      <AiOutlineHeart\r\n                        size={30}\r\n                        className=\"cursor-pointer\"\r\n                        onClick={() => addToWishlistHandler(data)}\r\n                        title=\"Add to wishlist\"\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className={`${styles.button} mt-6 rounded-[4px] h-11 flex items-center`}\r\n                  onClick={() => addToCartHandler(data._id)}\r\n                >\r\n                  <span className=\"text-[#fff] flex items-center\">\r\n                    Add to cart <AiOutlineShoppingCart className=\"ml-1\" />\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductDetailsCard;\r\n",{"ruleId":"741","severity":1,"message":"742","line":24,"column":10,"nodeType":"743","messageId":"744","endLine":24,"endColumn":16},{"ruleId":"745","severity":1,"message":"746","line":288,"column":6,"nodeType":"747","endLine":288,"endColumn":16,"suggestions":"748"},{"ruleId":"749","severity":1,"message":"750","line":380,"column":17,"nodeType":"751","endLine":383,"endColumn":19},{"ruleId":"752","severity":1,"message":"753","line":405,"column":7,"nodeType":"751","endLine":409,"endColumn":8},{"ruleId":"745","severity":1,"message":"754","line":14,"column":6,"nodeType":"747","endLine":14,"endColumn":8,"suggestions":"755"},{"ruleId":"745","severity":1,"message":"756","line":27,"column":6,"nodeType":"747","endLine":27,"endColumn":8,"suggestions":"757"},{"ruleId":"745","severity":1,"message":"754","line":14,"column":6,"nodeType":"747","endLine":14,"endColumn":8,"suggestions":"758"},{"ruleId":"741","severity":1,"message":"759","line":3,"column":10,"nodeType":"743","messageId":"744","endLine":3,"endColumn":25},{"ruleId":"745","severity":1,"message":"760","line":26,"column":6,"nodeType":"747","endLine":26,"endColumn":19,"suggestions":"761"},{"ruleId":"745","severity":1,"message":"762","line":25,"column":6,"nodeType":"747","endLine":25,"endColumn":30,"suggestions":"763"},{"ruleId":"745","severity":1,"message":"764","line":14,"column":6,"nodeType":"747","endLine":14,"endColumn":8,"suggestions":"765"},{"ruleId":"745","severity":1,"message":"756","line":27,"column":6,"nodeType":"747","endLine":27,"endColumn":8,"suggestions":"766"},{"ruleId":"745","severity":1,"message":"767","line":14,"column":6,"nodeType":"747","endLine":14,"endColumn":26,"suggestions":"768"},{"ruleId":"741","severity":1,"message":"769","line":11,"column":24,"nodeType":"743","messageId":"744","endLine":11,"endColumn":41},{"ruleId":"745","severity":1,"message":"770","line":17,"column":6,"nodeType":"747","endLine":17,"endColumn":8,"suggestions":"771"},{"ruleId":"741","severity":1,"message":"772","line":2,"column":8,"nodeType":"743","messageId":"744","endLine":2,"endColumn":14},{"ruleId":"741","severity":1,"message":"773","line":4,"column":26,"nodeType":"743","messageId":"744","endLine":4,"endColumn":37},{"ruleId":"741","severity":1,"message":"774","line":1,"column":17,"nodeType":"743","messageId":"744","endLine":1,"endColumn":26},{"ruleId":"745","severity":1,"message":"775","line":27,"column":6,"nodeType":"747","endLine":27,"endColumn":8,"suggestions":"776"},{"ruleId":"741","severity":1,"message":"774","line":1,"column":17,"nodeType":"743","messageId":"744","endLine":1,"endColumn":26},{"ruleId":"741","severity":1,"message":"777","line":4,"column":3,"nodeType":"743","messageId":"744","endLine":4,"endColumn":13},{"ruleId":"741","severity":1,"message":"778","line":8,"column":3,"nodeType":"743","messageId":"744","endLine":8,"endColumn":16},{"ruleId":"745","severity":1,"message":"779","line":36,"column":6,"nodeType":"747","endLine":36,"endColumn":16,"suggestions":"780"},{"ruleId":"745","severity":1,"message":"781","line":19,"column":6,"nodeType":"747","endLine":19,"endColumn":16,"suggestions":"782"},{"ruleId":"741","severity":1,"message":"783","line":4,"column":16,"nodeType":"743","messageId":"744","endLine":4,"endColumn":27},{"ruleId":"745","severity":1,"message":"770","line":39,"column":6,"nodeType":"747","endLine":39,"endColumn":22,"suggestions":"784"},{"ruleId":"741","severity":1,"message":"773","line":3,"column":10,"nodeType":"743","messageId":"744","endLine":3,"endColumn":21},{"ruleId":"745","severity":1,"message":"785","line":15,"column":6,"nodeType":"747","endLine":15,"endColumn":8,"suggestions":"786"},{"ruleId":"741","severity":1,"message":"774","line":1,"column":17,"nodeType":"743","messageId":"744","endLine":1,"endColumn":26},{"ruleId":"741","severity":1,"message":"787","line":7,"column":3,"nodeType":"743","messageId":"744","endLine":7,"endColumn":20},{"ruleId":"745","severity":1,"message":"788","line":15,"column":6,"nodeType":"747","endLine":15,"endColumn":16,"suggestions":"789"},{"ruleId":"741","severity":1,"message":"790","line":33,"column":10,"nodeType":"743","messageId":"744","endLine":33,"endColumn":16},{"ruleId":"745","severity":1,"message":"770","line":45,"column":6,"nodeType":"747","endLine":45,"endColumn":29,"suggestions":"791"},{"ruleId":"752","severity":1,"message":"753","line":107,"column":13,"nodeType":"751","endLine":107,"endColumn":64},{"ruleId":"745","severity":1,"message":"792","line":210,"column":6,"nodeType":"747","endLine":210,"endColumn":8,"suggestions":"793"},{"ruleId":"745","severity":1,"message":"792","line":295,"column":6,"nodeType":"747","endLine":295,"endColumn":8,"suggestions":"794"},{"ruleId":"745","severity":1,"message":"792","line":383,"column":6,"nodeType":"747","endLine":383,"endColumn":8,"suggestions":"795"},{"ruleId":"752","severity":1,"message":"753","line":491,"column":9,"nodeType":"751","endLine":495,"endColumn":10},{"ruleId":"752","severity":1,"message":"753","line":608,"column":15,"nodeType":"751","endLine":608,"endColumn":78},{"ruleId":"741","severity":1,"message":"796","line":3,"column":10,"nodeType":"743","messageId":"744","endLine":3,"endColumn":14},{"ruleId":"741","severity":1,"message":"797","line":1,"column":28,"nodeType":"743","messageId":"744","endLine":1,"endColumn":36},{"ruleId":"741","severity":1,"message":"798","line":3,"column":10,"nodeType":"743","messageId":"744","endLine":3,"endColumn":29},{"ruleId":"741","severity":1,"message":"799","line":7,"column":10,"nodeType":"743","messageId":"744","endLine":7,"endColumn":16},{"ruleId":"745","severity":1,"message":"770","line":22,"column":6,"nodeType":"747","endLine":22,"endColumn":8,"suggestions":"800"},{"ruleId":"741","severity":1,"message":"797","line":1,"column":28,"nodeType":"743","messageId":"744","endLine":1,"endColumn":36},{"ruleId":"745","severity":1,"message":"801","line":21,"column":6,"nodeType":"747","endLine":21,"endColumn":16,"suggestions":"802"},{"ruleId":"741","severity":1,"message":"803","line":4,"column":10,"nodeType":"743","messageId":"744","endLine":4,"endColumn":25},{"ruleId":"741","severity":1,"message":"804","line":5,"column":10,"nodeType":"743","messageId":"744","endLine":5,"endColumn":21},{"ruleId":"741","severity":1,"message":"805","line":5,"column":23,"nodeType":"743","messageId":"744","endLine":5,"endColumn":34},{"ruleId":"741","severity":1,"message":"806","line":7,"column":10,"nodeType":"743","messageId":"744","endLine":7,"endColumn":28},{"ruleId":"741","severity":1,"message":"807","line":8,"column":10,"nodeType":"743","messageId":"744","endLine":8,"endColumn":23},{"ruleId":"741","severity":1,"message":"808","line":9,"column":8,"nodeType":"743","messageId":"744","endLine":9,"endColumn":14},{"ruleId":"741","severity":1,"message":"796","line":4,"column":10,"nodeType":"743","messageId":"744","endLine":4,"endColumn":14},{"ruleId":"745","severity":1,"message":"767","line":59,"column":6,"nodeType":"747","endLine":59,"endColumn":32,"suggestions":"809"},{"ruleId":"741","severity":1,"message":"810","line":5,"column":23,"nodeType":"743","messageId":"744","endLine":5,"endColumn":33},{"ruleId":"745","severity":1,"message":"767","line":33,"column":6,"nodeType":"747","endLine":33,"endColumn":32,"suggestions":"811"},{"ruleId":"745","severity":1,"message":"801","line":19,"column":6,"nodeType":"747","endLine":19,"endColumn":16,"suggestions":"812"},{"ruleId":"741","severity":1,"message":"806","line":8,"column":10,"nodeType":"743","messageId":"744","endLine":8,"endColumn":28},{"ruleId":"741","severity":1,"message":"807","line":9,"column":10,"nodeType":"743","messageId":"744","endLine":9,"endColumn":23},{"ruleId":"745","severity":1,"message":"801","line":20,"column":6,"nodeType":"747","endLine":20,"endColumn":16,"suggestions":"813"},{"ruleId":"745","severity":1,"message":"801","line":40,"column":6,"nodeType":"747","endLine":40,"endColumn":16,"suggestions":"814"},{"ruleId":"752","severity":1,"message":"753","line":155,"column":17,"nodeType":"751","endLine":155,"endColumn":68},{"ruleId":"741","severity":1,"message":"815","line":12,"column":19,"nodeType":"743","messageId":"744","endLine":12,"endColumn":28},{"ruleId":"745","severity":1,"message":"801","line":22,"column":6,"nodeType":"747","endLine":22,"endColumn":16,"suggestions":"816"},{"ruleId":"745","severity":1,"message":"801","line":18,"column":6,"nodeType":"747","endLine":18,"endColumn":16,"suggestions":"817"},{"ruleId":"741","severity":1,"message":"804","line":5,"column":10,"nodeType":"743","messageId":"744","endLine":5,"endColumn":21},{"ruleId":"741","severity":1,"message":"742","line":25,"column":10,"nodeType":"743","messageId":"744","endLine":25,"endColumn":16},{"ruleId":"818","severity":1,"message":"819","line":275,"column":53,"nodeType":"820","messageId":"821","endLine":275,"endColumn":55},{"ruleId":"749","severity":1,"message":"750","line":379,"column":19,"nodeType":"751","endLine":382,"endColumn":21},{"ruleId":"752","severity":1,"message":"753","line":405,"column":7,"nodeType":"751","endLine":409,"endColumn":8},{"ruleId":"745","severity":1,"message":"801","line":18,"column":6,"nodeType":"747","endLine":18,"endColumn":16,"suggestions":"822"},{"ruleId":"741","severity":1,"message":"823","line":3,"column":10,"nodeType":"743","messageId":"744","endLine":3,"endColumn":21},{"ruleId":"824","severity":1,"message":"825","line":100,"column":11,"nodeType":"826","endLine":100,"endColumn":36},{"ruleId":"745","severity":1,"message":"801","line":29,"column":6,"nodeType":"747","endLine":29,"endColumn":16,"suggestions":"827"},{"ruleId":"828","severity":1,"message":"829","line":323,"column":7,"nodeType":"830","messageId":"821","endLine":323,"endColumn":15},{"ruleId":"828","severity":1,"message":"829","line":354,"column":7,"nodeType":"830","messageId":"821","endLine":354,"endColumn":15},{"ruleId":"828","severity":1,"message":"829","line":416,"column":7,"nodeType":"830","messageId":"821","endLine":416,"endColumn":15},{"ruleId":"741","severity":1,"message":"831","line":73,"column":17,"nodeType":"743","messageId":"744","endLine":73,"endColumn":25},{"ruleId":"745","severity":1,"message":"779","line":60,"column":6,"nodeType":"747","endLine":60,"endColumn":16,"suggestions":"832"},"no-unused-vars","'images' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'online' and 'setActiveStatus'. Either include them or remove the dependency array. If 'setActiveStatus' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["833"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/role-supports-aria-props","The attribute aria-required is not supported by the role form. This role is implicit on the element form.","React Hook useEffect has missing dependencies: 'isAuthenticated' and 'navigate'. Either include them or remove the dependency array.",["834"],"React Hook useEffect has a missing dependency: 'activation_token'. Either include it or remove the dependency array.",["835"],["836"],"'useSearchParams' is defined but never used.","React Hook useEffect has a missing dependency: 'categoryData'. Either include it or remove the dependency array.",["837"],"React Hook useEffect has missing dependencies: 'eventData' and 'id'. Either include them or remove the dependency array.",["838"],"React Hook useEffect has missing dependencies: 'isSeller', 'navigate', and 'seller._id'. Either include them or remove the dependency array.",["839"],["840"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["841"],"'adminOrderLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["842"],"'Footer' is defined but never used.","'productData' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["843"],"'AiFillStar' is defined but never used.","'AiOutlineStar' is defined but never used.","React Hook useEffect has a missing dependency: 'data._id'. Either include it or remove the dependency array.",["844"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["845"],"'useNavigate' is defined but never used.",["846"],"React Hook useEffect has missing dependencies: 'allProducts' and 'data.category'. Either include them or remove the dependency array.",["847"],"'MdOutlinePassword' is defined but never used.","React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.",["848"],"'avatar' is assigned a value but never used.",["849"],"React Hook useEffect has missing dependencies: 'dispatch' and 'user._id'. Either include them or remove the dependency array.",["850"],["851"],["852"],"'Link' is defined but never used.","'useState' is defined but never used.","'AiOutlineArrowRight' is defined but never used.","'Button' is defined but never used.",["853"],"React Hook useEffect has a missing dependency: 'seller._id'. Either include it or remove the dependency array.",["854"],"'AiOutlineDelete' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'getAllProductsShop' is defined but never used.","'deleteProduct' is defined but never used.","'Loader' is defined but never used.",["855"],"'CiSettings' is defined but never used.",["856"],["857"],["858"],["859"],"'isLoading' is assigned a value but never used.",["860"],["861"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["862"],"'backend_url' is defined but never used.","jsx-a11y/aria-props","aria-aria-required: This attribute is an invalid ARIA attribute.","JSXAttribute",["863"],"no-dupe-keys","Duplicate key 'category'.","ObjectExpression","'setValue' is assigned a value but never used.",["864"],{"desc":"865","fix":"866"},{"desc":"867","fix":"868"},{"desc":"869","fix":"870"},{"desc":"867","fix":"871"},{"desc":"872","fix":"873"},{"desc":"874","fix":"875"},{"desc":"876","fix":"877"},{"desc":"869","fix":"878"},{"desc":"879","fix":"880"},{"desc":"881","fix":"882"},{"desc":"883","fix":"884"},{"desc":"885","fix":"886"},{"desc":"883","fix":"887"},{"desc":"888","fix":"889"},{"desc":"890","fix":"891"},{"desc":"892","fix":"893"},{"desc":"894","fix":"895"},{"desc":"892","fix":"896"},{"desc":"892","fix":"897"},{"desc":"892","fix":"898"},{"desc":"881","fix":"899"},{"desc":"900","fix":"901"},{"desc":"902","fix":"903"},{"desc":"902","fix":"904"},{"desc":"900","fix":"905"},{"desc":"900","fix":"906"},{"desc":"900","fix":"907"},{"desc":"900","fix":"908"},{"desc":"900","fix":"909"},{"desc":"900","fix":"910"},{"desc":"900","fix":"911"},{"desc":"885","fix":"912"},"Update the dependencies array to be: [me, data, setActiveStatus, online]",{"range":"913","text":"914"},"Update the dependencies array to be: [isAuthenticated, navigate]",{"range":"915","text":"916"},"Update the dependencies array to be: [activation_token]",{"range":"917","text":"918"},{"range":"919","text":"916"},"Update the dependencies array to be: [allProducts, categoryData]",{"range":"920","text":"921"},"Update the dependencies array to be: [allProducts, allEvents, eventData, id]",{"range":"922","text":"923"},"Update the dependencies array to be: [isSeller, navigate, seller._id]",{"range":"924","text":"925"},{"range":"926","text":"918"},"Update the dependencies array to be: [isLoading, isSeller, navigate]",{"range":"927","text":"928"},"Update the dependencies array to be: [dispatch]",{"range":"929","text":"930"},"Update the dependencies array to be: [dispatch, id]",{"range":"931","text":"932"},"Update the dependencies array to be: [data._id, wishlist]",{"range":"933","text":"934"},{"range":"935","text":"932"},"Update the dependencies array to be: [data, dispatch, wishlist]",{"range":"936","text":"937"},"Update the dependencies array to be: [allProducts, data.category]",{"range":"938","text":"939"},"Update the dependencies array to be: [dispatch, user._id]",{"range":"940","text":"941"},"Update the dependencies array to be: [dispatch, error, successMessage]",{"range":"942","text":"943"},{"range":"944","text":"941"},{"range":"945","text":"941"},{"range":"946","text":"941"},{"range":"947","text":"930"},"Update the dependencies array to be: [dispatch, seller._id]",{"range":"948","text":"949"},"Update the dependencies array to be: [dispatch, error, navigate, success]",{"range":"950","text":"951"},{"range":"952","text":"951"},{"range":"953","text":"949"},{"range":"954","text":"949"},{"range":"955","text":"949"},{"range":"956","text":"949"},{"range":"957","text":"949"},{"range":"958","text":"949"},{"range":"959","text":"949"},{"range":"960","text":"934"},[7757,7767],"[me, data, setActiveStatus, online]",[410,412],"[isAuthenticated, navigate]",[712,714],"[activation_token]",[410,412],[941,954],"[allProducts, categoryData]",[1010,1034],"[allProducts, allEvents, eventData, id]",[433,435],"[isSeller, navigate, seller._id]",[718,720],[424,444],"[isLoading, isSeller, navigate]",[581,583],"[dispatch]",[947,949],"[dispatch, id]",[1139,1149],"[data._id, wishlist]",[781,791],[1402,1418],"[data, dispatch, wishlist]",[556,558],"[allProducts, data.category]",[498,508],"[dispatch, user._id]",[1551,1574],"[dispatch, error, successMessage]",[6621,6623],[8405,8407],[10305,10307],[903,905],[926,936],"[dispatch, seller._id]",[1988,2014],"[dispatch, error, navigate, success]",[1217,1243],[751,761],[819,829],[1430,1440],[827,837],[670,680],[676,686],[1045,1055],[1735,1745]]